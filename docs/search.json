[
  {
    "objectID": "Deskriptives.html",
    "href": "Deskriptives.html",
    "title": "Deskriptives",
    "section": "",
    "text": "Dataframes\n\neinlesen\ndamit arbeiten\n\nDeskriptive Analyse\n\nmean/sd/sum für einzelne Spalten\nDatensatz aufteilen (i.e., subset)\nAufzeigen, was das Problem ist ⇒ Überleitung zu Dplyr\n\nDplyr\n\nEinleitung\nSyntax (i.e., Konzept von Pipes)\nBeispiele\nAufteilen des Datensatzes\n\nggplot\n\nEinleitung\nSyntax (i.e., Konzept von Pipes)\nBeispiele\nBar Plot\nLine Plot\n\n\n\n\nShow code\nlibrary(tidyverse)\nlibrary(reshape2)\n\npalette1 &lt;- c(\"#648fff\",\"#785ef0\",\"#dc267f\",\"#fe6100\",\"#ffb000\",\"#000000\",\"#ffffff\")\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")"
  },
  {
    "objectID": "Deskriptives.html#themensammlung",
    "href": "Deskriptives.html#themensammlung",
    "title": "Deskriptives",
    "section": "",
    "text": "Dataframes\n\neinlesen\ndamit arbeiten\n\nDeskriptive Analyse\n\nmean/sd/sum für einzelne Spalten\nDatensatz aufteilen (i.e., subset)\nAufzeigen, was das Problem ist ⇒ Überleitung zu Dplyr\n\nDplyr\n\nEinleitung\nSyntax (i.e., Konzept von Pipes)\nBeispiele\nAufteilen des Datensatzes\n\nggplot\n\nEinleitung\nSyntax (i.e., Konzept von Pipes)\nBeispiele\nBar Plot\nLine Plot\n\n\n\n\nShow code\nlibrary(tidyverse)\nlibrary(reshape2)\n\npalette1 &lt;- c(\"#648fff\",\"#785ef0\",\"#dc267f\",\"#fe6100\",\"#ffb000\",\"#000000\",\"#ffffff\")\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")"
  },
  {
    "objectID": "Deskriptives.html#einlesen-von-daten",
    "href": "Deskriptives.html#einlesen-von-daten",
    "title": "Deskriptives",
    "section": "Einlesen von Daten",
    "text": "Einlesen von Daten\nBeginnen wir also zunächst damit, Daten in R einzulesen. Wir werden heute mit dem iris Datensatz arbeiten, einem berühmten Datensatz von R.A. Fisher aus dem Jahr 1936, in dem verschiedene Eigenschaften in Bezug auf die Blütengröße verschiedener Spezies der Blume Iris enthalten sind (siehe hier).\n\n\n\nSources: Wikipedia ([Iris Versicolor](https://de.wikipedia.org/wiki/Verschiedenfarbige_Schwertlilie#/media/Datei:Iris_versicolor_1.jpg), [Iris Setosa](https://en.wikipedia.org/wiki/Iris_setosa#/media/File:Irissetosa1.jpg), [Iris Virginica](https://en.wikipedia.org/wiki/Iris_virginica#/media/File:Iris_virginica_2.jpg))\n\n\nIm Zentrum des Datensatzes steht die Größe der verschiedenen Blatttypen für die jeweilige Spezies. Dabei gibt es die Blatttypen Sepal und Petal. Die folgende Grafik verdeutlicht das etwas:\n\n\n\n\n\n\n\nShow code\ndatasets::iri"
  },
  {
    "objectID": "folien/120423.html#vorstellungsrunde",
    "href": "folien/120423.html#vorstellungsrunde",
    "title": "R Basics - 12.04.23",
    "section": "Vorstellungsrunde",
    "text": "Vorstellungsrunde\n\nWer sind wir?"
  },
  {
    "objectID": "folien/120423.html#vorstellungsrunde-1",
    "href": "folien/120423.html#vorstellungsrunde-1",
    "title": "R Basics - 12.04.23",
    "section": "Vorstellungsrunde",
    "text": "Vorstellungsrunde\nVerteilung Vorwissen"
  },
  {
    "objectID": "folien/120423.html#vorstellungsrunde-2",
    "href": "folien/120423.html#vorstellungsrunde-2",
    "title": "R Basics - 12.04.23",
    "section": "Vorstellungsrunde",
    "text": "Vorstellungsrunde\nVorwissen Programmiersprachen"
  },
  {
    "objectID": "folien/120423.html#vorstellungsrunde-3",
    "href": "folien/120423.html#vorstellungsrunde-3",
    "title": "R Basics - 12.04.23",
    "section": "Vorstellungsrunde",
    "text": "Vorstellungsrunde\nErwartungen ans Seminar"
  },
  {
    "objectID": "folien/120423.html#vorstellungsrunde-4",
    "href": "folien/120423.html#vorstellungsrunde-4",
    "title": "R Basics - 12.04.23",
    "section": "Vorstellungsrunde",
    "text": "Vorstellungsrunde\n\nWer seid ihr?\n\nSemester\nWarum Interesse an R?\nFun Fact"
  },
  {
    "objectID": "folien/120423.html#ziele-des-seminars",
    "href": "folien/120423.html#ziele-des-seminars",
    "title": "R Basics - 12.04.23",
    "section": "Ziele des Seminars",
    "text": "Ziele des Seminars\n\nDaten einlesen, bearbeiten, grafisch darstellen und statistisch auswerten\nEinblick in Breite und Tiefe, die R bietet\nGrundlagen schaffen, auf die ihr selbstständig aufbauen könnt (z.B. für Masterarbeit oder eigene Projekte)"
  },
  {
    "objectID": "folien/120423.html#zeitplan",
    "href": "folien/120423.html#zeitplan",
    "title": "R Basics - 12.04.23",
    "section": "Zeitplan",
    "text": "Zeitplan\n\n7-8 Sitzungen, die jeweils 3h dauern\n\nMittagspause?\n\n31.05 vrsl. letzte, kürzere Sitzung\nInhaltlich: Basics, Deskriptives, Inferenzstatistik, Auswertung von Forschungsdaten\ninnerhalb der Sitzung: abwechselnd Blöcke von Theorie + Praxis\nWebsite für Präsentationsinhalte, Lösungen, Cheatsheets usw. (selbst Notizen machen lohnt sich auch!)\n\nLink einfügen"
  },
  {
    "objectID": "folien/120423.html#prüfungsleistung",
    "href": "folien/120423.html#prüfungsleistung",
    "title": "R Basics - 12.04.23",
    "section": "Prüfungsleistung",
    "text": "Prüfungsleistung\n\nWöchentliche “Hausaufgaben”: Wiederholen und erweitern das im Seminar Gelernte\n\nAbgabe per Moodle spätestens am Sonntag vor der nächsten Sitzung\nwerden benotet, am Ende per Durchschnitt zusammengefasst und machen gemeinsam 50% der Note aus\nAbgabe mit der schlechtesten Benotung wird aus der Durchschnittsberechnung entfernt\nEinzelarbeit (Plagiatscheck)\nWir laden nach Abgabe “Musterlösung” hoch\n\n1x Hausaufgabe vorstellen (unbenotet)\nBericht zu (neuem) Datensatz einreichen (50% der Note) - mehr Infos folgen\n\n\n\nEs gibt keine Anwesenheitspflicht, wir empfehlen aber immer da zu sein, da euch die Prüfungsleistungen dann leichter fallen werden."
  },
  {
    "objectID": "folien/120423.html#was-ist-r",
    "href": "folien/120423.html#was-ist-r",
    "title": "R Basics - 12.04.23",
    "section": "Was ist R?",
    "text": "Was ist R?\n\nProgrammiersprache (und -oberfläche) für statistische Berechnungen und Grafiken\nopen-source & kostenlos\ngroße Community, die ständig Funktionen erweitert und bei Problemen hilft\nR Studio ist die meistgenutzte Benutzeroberfläche und macht die Handhabung einfacher"
  },
  {
    "objectID": "folien/120423.html#user-interface",
    "href": "folien/120423.html#user-interface",
    "title": "R Basics - 12.04.23",
    "section": "User Interface",
    "text": "User Interface\n\n\n\n\noben links: Code\nunten links: Konsole - ausgeführter Code und Output\n\nhier lässt sich auch Code eintippen, dieser kann allerdings nicht gespeichert werden\n\noben rechts: u.a. Environment - welche Objekte und Daten exisitieren\nunten rechts: Dateizugriff, Plotanzeige, Hilfeanzeige, Package-Übersicht"
  },
  {
    "objectID": "folien/120423.html#code-erstellen-ausführen",
    "href": "folien/120423.html#code-erstellen-ausführen",
    "title": "R Basics - 12.04.23",
    "section": "Code erstellen + ausführen",
    "text": "Code erstellen + ausführen\n\n\nÖffnet das File das ihr auf der Seite mit unseren Installationstips heruntergeladen habt (vielleicht ist es auch noch offen)\nIn dem File ist nur die Zeile ohne #ausführbarer Code. Wie hier geschehen, lassen sich mit # Kommentare in den Code hinzufügen, die dem Code Struktur geben oder erklären, was hier passieren soll\nFührt die Zeile Code aus, in dem ihr euren Cursor in die Zeile stellt und STRG+ENTER drückt\nÜber das Markieren von mehreren/allen Zeilen werden die entsprechenden Zeilen nacheinander ausgeführt\n\n\n\n\n# Erstes Skript zum Seminar Medienbasierte Wissenskonstruktion: R\n\n# Satz in Konsole printen:\nprint(paste0(\"Ich habe \",R.version$version.string,\" und RStudio v\",rstudioapi::versionInfo()$version))\n\n\n\n[1] \"Ich habe R version 4.2.1 (2022-06-23 ucrt) und RStudio v2023.3.0.386\""
  },
  {
    "objectID": "folien/120423.html#r-vs.-quarto",
    "href": "folien/120423.html#r-vs.-quarto",
    "title": "R Basics - 12.04.23",
    "section": ".R vs. Quarto",
    "text": ".R vs. Quarto\n\n\nR’s Standardformat sind .R-Dateien\nFür “echte Arbeit” mit R sind Quarto-Dokumente meistens nützlicher:\n\nermöglichen Export/Rendern in andere Dateiformate (html, pdf, docx, pptx,…)\nermöglichen neben Code-Abschnitte auch Text-Abschnitte, die formatiert werden können (wie LaTeX)\nermöglichen einzustellen, ob nur Code, nur Output, oder Code+Output angezeigt werden soll\nAuswertung & Bericht können somit im gleichen Dokument geschehen\nDiese Präsentation ist auch in R entstanden!"
  },
  {
    "objectID": "folien/120423.html#r-vs.-quarto-1",
    "href": "folien/120423.html#r-vs.-quarto-1",
    "title": "R Basics - 12.04.23",
    "section": ".R vs. Quarto",
    "text": ".R vs. Quarto"
  },
  {
    "objectID": "folien/120423.html#quarto---dokument-aufsetzen",
    "href": "folien/120423.html#quarto---dokument-aufsetzen",
    "title": "R Basics - 12.04.23",
    "section": "Quarto - Dokument aufsetzen",
    "text": "Quarto - Dokument aufsetzen\n\nErstellt ein Quarto-Dokument über File &gt; New File &gt; Quarto Document\nIm auftauchenden Fenster könnt ihr einstellen:\n\nTitel & AutorIn des Dokuments\ngewünschtes Output-Format (hier: html)\nwomit das Quarto-Dokument gerendert werden soll (hier: knitr)"
  },
  {
    "objectID": "folien/120423.html#quarto---im-dokument",
    "href": "folien/120423.html#quarto---im-dokument",
    "title": "R Basics - 12.04.23",
    "section": "Quarto - im Dokument",
    "text": "Quarto - im Dokument\n\n\nDer Kasten oben heißt “YAML-header” - dort sind die Rendereinstellungen (Titel, Speicherort, Format, Schriftgröße usw.)\nIm Feld darunter kann Text geschrieben und formatiert werden\n\nSource: Format lässt sich über bestimmte Zeichen einstellen\nVisual: Format lässt sich über Markieren + Auswählen einstellen\n\nCode kann man nur innerhalb von Chunks einfügen (oben rechts auf das grün unterlegte C klicken oder STRG+ALT+I)\nIm grau unterlegten Kästchen lässt sich “normaler” R-Code schreiben und ausführen\n\n“Vorschau” über den Play-Button\nÜber #| am Zeilenbeginn lässt sich einstellen, was mit Code + Output beim Rendern passieren soll\n\nÜber “Render” wird das Dokument in das Zielformat umgewandelt\nIn den meisten Fällen rendert man nur gegen Ende und nutzt während der Analyse die Chunk-Vorschau"
  },
  {
    "objectID": "folien/120423.html#quarto",
    "href": "folien/120423.html#quarto",
    "title": "R Basics - 12.04.23",
    "section": "Quarto",
    "text": "Quarto\n\nErstellt zwei Code-Chunks\nFügt bei einem der Chunks in die erste Zeile #| echo: TRUE\nSchreibt in den Text- und in die Code-Bereiche 4+5\nRendert das Dokument\n\n\nOutput ohne Code:\n\n\n[1] 9\n\n\n\n\nOutput mit Code:\n\n4+5\n\n[1] 9\n\n\n\n\nReiner Text: 4+5"
  },
  {
    "objectID": "folien/120423.html#rechenoperatoren",
    "href": "folien/120423.html#rechenoperatoren",
    "title": "R Basics - 12.04.23",
    "section": "(Rechen)Operatoren",
    "text": "(Rechen)Operatoren\n\nDezimaltrennzeichen: Punkt . , nicht Komma ,\n+ - * /\nExponent: ^\nlogisch gleich: ==\nlogisch ungleich: !=\nlogisches und: &\nlogisches oder: |\nlogisches exklusives oder: xor\nnicht: !"
  },
  {
    "objectID": "folien/120423.html#objekte",
    "href": "folien/120423.html#objekte",
    "title": "R Basics - 12.04.23",
    "section": "Objekte",
    "text": "Objekte\n\n\nAnstatt nur Code durchzuführen und das Ergebnis in der Konsole abzulesen, können wir auch alles mögliche als Objekte speichern\nKonzept: links mit Objektname beginnen, dann den Zuweisungsoperator und anschließend das, was als Objekt gespeichert werden soll\n\n\n\n\nergebnis &lt;- 3+5\n\n\n\nR führt den Code rechts vom Pfeil aus - das Objekt ist “8”, nicht “3+5”!\nObjekte lassen sich abrufen, indem man ihren Namen schreibt und ausführt\n\n\n\n\n\nergebnis\n\n[1] 8\n\n\n\n\nR ist case-sensitive, d.h. Groß-und Kleinschreibung muss übereinstimmen!\nObjekte lassen sich auch oben rechts im Environment einsehen (wird aber irgendwann unübersichtlich…)\nErstellt selbst eine Rechenaufgabe und speichert sie als Objekt!\nWas passiert, wenn man den gleichen Objektnamen erneut verwendet?"
  },
  {
    "objectID": "folien/120423.html#objekte-1",
    "href": "folien/120423.html#objekte-1",
    "title": "R Basics - 12.04.23",
    "section": "Objekte",
    "text": "Objekte\n\n\nWarum ist Objekte erstellen wichtig?\n\nFür R ist jeder Output sonst “flüchtig”: Es wird nicht wirklich etwas verändert\nZwischenergebnisse überprüfen\nParameter festlegen\nFlüchtigkeitsfehler vermeiden\nuvm.\n\nShortcut für &lt;- : ALT+-\nPfeil in die andere Richtung -&gt; und Gleichheitszeichen = funktionieren nicht bzw. sollten nicht verwendet werden!"
  },
  {
    "objectID": "folien/120423.html#funktionen",
    "href": "folien/120423.html#funktionen",
    "title": "R Basics - 12.04.23",
    "section": "Funktionen",
    "text": "Funktionen\n\n\nMithilfe von Funktionen lassen sich Objekte/Daten bearbeiten\nBeispiel: round(3.45, digits = 1) rundet 3.45 auf die erste Nachkommastelle\n\nam Anfang steht der Name der Funktion (auch hier: case-sensitive)\ndie Argumente der Funktion werden von runden Klammern eingerahmt\nArgumente sind bspw. die Daten, auf die die Funktion angewendet werden soll, aber auch weitere Einstellungen der Funktion, z.B. auf wie viele Nachkommastellen gerundet werden soll\nsie folgen der Syntax Argument = Angabe\nArgumente werden durch Komma getrennt\nmanche Argumente sind zwingend notwendig, viele aber optional\ndie Argumente einer Funktion haben eine bestimmte Reihenfolge, daher kann man den Argumentnamen häufig weglassen, z.B. round(3.45, 1) (solange man die Funktion noch nicht gut kennt, oder auch um den Überblick zu behalten, besser die Argumente explizit nennen)"
  },
  {
    "objectID": "folien/120423.html#hilfe-in-r",
    "href": "folien/120423.html#hilfe-in-r",
    "title": "R Basics - 12.04.23",
    "section": "Hilfe in R",
    "text": "Hilfe in R\n\n\nÜber help(Funktion) wird die Hilfeseite/Dokumentation der Funktion “Funktion” aufgerufen\n\ngenauso funktioniert ?Funktion\nauf der Hilfeseite stehen mögliche Argumente, ihre Reihenfolge und in welchem Format das Argument angegeben wird (wird eine Zahl oder ein Wort erwartet?)\n\nFindet mit der Hilfe-Funktion heraus, was mean() macht und welche Argumente es hat\n\n\n\n\n?mean\n#oder\nhelp(mean)"
  },
  {
    "objectID": "folien/120423.html#hilfe-außerhalb-von-r",
    "href": "folien/120423.html#hilfe-außerhalb-von-r",
    "title": "R Basics - 12.04.23",
    "section": "Hilfe außerhalb von R",
    "text": "Hilfe außerhalb von R\n\n\nFehlermeldungen lesen und versuchen, Problem zu verstehen\ndas Internet!\n\nFehlermeldung bei Google einfügen und Links durchsuchen\nStack Overflow\nStatt selbst eine Frage einreichen zu müssen findet sich fast immer ein Thread mit dem gleichen/ähnlichen Problem und möglichen Lösungen\n\nDanach: Lösung für sich dokumentieren"
  },
  {
    "objectID": "folien/120423.html#packages",
    "href": "folien/120423.html#packages",
    "title": "R Basics - 12.04.23",
    "section": "Packages",
    "text": "Packages\n\n\nFrisch nach der Installation besteht R aus Base R und einigen wenigen Erweiterungen\nDurch die Installation von weiteren Paketen/Packages lassen sich die Funktionen fast beliebig erweitern: Jedes Package enthält Funktionen und/oder Datensätze, meistens zu bestimmten Analysen, mehr oder weniger nischig\nIm Fenster unten rechts unter “Packages” könnt ihr sehen, welche Packages schon installiert und/oder aktiviert sind\nNeue Packages lassen sich mit install.packages(\"package-name\") installieren und mit library(package-name) aktivieren (auf die Anführungszeichen achten!)\nMan kann neue Funktionen auch selbst schreiben, das ist aber meistens nur in Sonderfällen notwendig"
  },
  {
    "objectID": "folien/120423.html#packages-1",
    "href": "folien/120423.html#packages-1",
    "title": "R Basics - 12.04.23",
    "section": "Packages",
    "text": "Packages\n\n\nInstalliert und aktiviert das Package psych (Erinnerung: install.packages()& library())\nWendet die Hilfefunktion help() auf sich selbst an, um herauszufinden, wie ihr mit ihr Informationen über Packages bekommt\nSchaut euch mit dem neuen Wissen an, welche Funktionen das Package psych beinhaltet\n\n\n\n\n# Installieren\ninstall.packages(\"psych\")\n# Aktivieren\nlibrary(psych)\n\n# Mehr über help() herausfinden\nhelp(help) # Inception!\n# Aha, das Argument \"package\" kann mir weiterhelfen!\n\n# Über psych informieren\nhelp(package=psych)"
  },
  {
    "objectID": "folien/120423.html#datentypen",
    "href": "folien/120423.html#datentypen",
    "title": "R Basics - 12.04.23",
    "section": "Datentypen",
    "text": "Datentypen\n\nBasic:\n\nnumeric: Zahlen (integer, double)\ncharacter: Buchstabenfolgen (strings)\nfactor: z.B. Faktorstufen eines Faktors\nlogical: TRUE, FALSE (vgl. 1 & 0)\n\nVektor: eindimensionale “Aufzählung” von Elementen des gleichen Datentyps\nMatrix: ein- bis zweidimensionale Aufzählung von Elementen des gleichen Datentyps\nArray: beliebig-dimensionale Aufzählung von Elementen des gleichen Datentyps\nListe: kann verschiedene Datentypen und Strukturen enthalten (z.B. Ergebnis einer ANOVA)\nDataframe, Tibble: Spezifische Formate, um Datensätze darzustellen\n\nKönnen pro Spalte unterschiedliche Datentypen beinhalten\nStandardformat, wenn man von extern Daten in R reinlädt"
  },
  {
    "objectID": "folien/120423.html#datentypen-1",
    "href": "folien/120423.html#datentypen-1",
    "title": "R Basics - 12.04.23",
    "section": "Datentypen",
    "text": "Datentypen\nDer Datensatz aus der Umfrage sieht als Vorschau in der Konsole so aus:\n\n\n# A tibble: 4 × 7\n     id alter geschlecht r.vorwissen r.wieviel.vorwissen r.probleme\n  &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;      &lt;lgl&gt;       &lt;lgl&gt;               &lt;chr&gt;     \n1     1    NA &lt;NA&gt;       NA          NA                  &lt;NA&gt;      \n2     2    12 female     TRUE        TRUE                Test      \n3     3    19 female     TRUE        TRUE                kp        \n4     4    20 male       TRUE        TRUE                problemz  \n# ℹ 1 more variable: programmier.vorwissen &lt;lgl&gt;\n\n\n\n\nZeile: Ein Tibble mit diesen Dimensionen wird angezeigt\n\n\nZeile: Spaltennamen\n\n\nZeile: Datentypen\n\nfolgende Zeilen: Daten\nin der Konsole werden Daten meistens nur gekürzt angezeigt\nÜber view(daten) öffnet sich eine Tabellenübersicht"
  },
  {
    "objectID": "folien/120423.html#bestimmte-daten-abrufen",
    "href": "folien/120423.html#bestimmte-daten-abrufen",
    "title": "R Basics - 12.04.23",
    "section": "Bestimmte Daten abrufen",
    "text": "Bestimmte Daten abrufen\n\nIn eckigen Klammern nach dem Objektnamen lassen sich die “Koordinaten” angeben\n\n\numfrage[2,3] # zeigt den Wert der zweiten Spalte und dritten Zeile\n\n# A tibble: 1 × 1\n  geschlecht\n  &lt;fct&gt;     \n1 female    \n\n\n\nStatt Zahlen können auch Spaltennamen benutzt werden\n\n\numfrage[3, \"geschlecht\"]\n\n# A tibble: 1 × 1\n  geschlecht\n  &lt;fct&gt;     \n1 female    \n\n\n\nSpalten lassen sich auch direkt über $ ansprechen.\n\n\numfrage$geschlecht\n\n[1] &lt;NA&gt;   female female male  \nLevels: female male"
  },
  {
    "objectID": "folien/120423.html#bestimmte-daten-abrufen-1",
    "href": "folien/120423.html#bestimmte-daten-abrufen-1",
    "title": "R Basics - 12.04.23",
    "section": "Bestimmte Daten abrufen",
    "text": "Bestimmte Daten abrufen\n\nUm alles anzeigen zu lassen, kann man die Koordinate “leer” lassen\n\n\numfrage[ , \"geschlecht\"]\n\n# A tibble: 4 × 1\n  geschlecht\n  &lt;fct&gt;     \n1 &lt;NA&gt;      \n2 female    \n3 female    \n4 male      \n\n\n\n\numfrage[ , ]\n\n# A tibble: 4 × 7\n     id alter geschlecht r.vorwissen r.wieviel.vorwissen r.probleme\n  &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;      &lt;lgl&gt;       &lt;lgl&gt;               &lt;chr&gt;     \n1     1    NA &lt;NA&gt;       NA          NA                  &lt;NA&gt;      \n2     2    12 female     TRUE        TRUE                Test      \n3     3    19 female     TRUE        TRUE                kp        \n4     4    20 male       TRUE        TRUE                problemz  \n# ℹ 1 more variable: programmier.vorwissen &lt;lgl&gt;"
  },
  {
    "objectID": "folien/120423.html#datentypen-2",
    "href": "folien/120423.html#datentypen-2",
    "title": "R Basics - 12.04.23",
    "section": "Datentypen",
    "text": "Datentypen\n\n\nR erkennt häufig von selbst, welcher Datentyp gemeint ist\nHäufig ist es aber sinnvoll, noch mal “von Hand” zu überprüfen und/oder den richtigen Datentyp festzulegen\ntypeof() um den Datentyp zu erfragen\nis.numeric() / is.factor() / is.logical() / is.character() um einen bestimmten Datentyp zu testen\nas.numeric() usw. nutzen, um den Datentyp zu verändern\n\n\n\n\numfrage$r.probleme &lt;- as.factor(umfrage$r.probleme)\n# Die umgewandelte Spalte überschreibt die alte Spalte!"
  },
  {
    "objectID": "folien/120423.html#neue-daten-erstellen",
    "href": "folien/120423.html#neue-daten-erstellen",
    "title": "R Basics - 12.04.23",
    "section": "Neue Daten erstellen",
    "text": "Neue Daten erstellen\n\n\nVektoren: c()\nKombiniert alle aufgezählten Objekte\n\n\n\n\nvektor &lt;- c(1,3,5)\nvektor\n\n[1] 1 3 5\n\n\n\n\nStrings müssen in Anführungszeichen gesetzt werden, damit R sie nicht mit Objekten verwechselt.\nIm Output erkennt man Strings auch an den Anführungszeichen\n\n\n\n\n\nstring &lt;- \"hallo\"\nstring\n\n[1] \"hallo\""
  },
  {
    "objectID": "folien/120423.html#unterschiede-zu-anderen-programmiersprachen",
    "href": "folien/120423.html#unterschiede-zu-anderen-programmiersprachen",
    "title": "R Basics - 12.04.23",
    "section": "Unterschiede zu anderen Programmiersprachen",
    "text": "Unterschiede zu anderen Programmiersprachen\n\n\nkeine Unterscheidung zwischen integer und double\nverwendet keine Pointer\ntendenziell: Viele Angelegenheiten, bei denen andere Sprachen empfindlich sind, sind in R simpler aufgebaut"
  },
  {
    "objectID": "folien/120423.html#fragen",
    "href": "folien/120423.html#fragen",
    "title": "R Basics - 12.04.23",
    "section": "Fragen?",
    "text": "Fragen?"
  },
  {
    "objectID": "folien/test fuer fehler.html",
    "href": "folien/test fuer fehler.html",
    "title": "Untitled",
    "section": "",
    "text": "print(paste0(\"Ich habe \",R.version$version.string,\" und RStudio v\",rstudioapi::versionInfo()$version))"
  },
  {
    "objectID": "folien/120423 - Website.html",
    "href": "folien/120423 - Website.html",
    "title": "Introduction & R-Basics",
    "section": "",
    "text": "Verteilung Vorwissen"
  },
  {
    "objectID": "folien/120423 - Website.html#vorstellungsrunde",
    "href": "folien/120423 - Website.html#vorstellungsrunde",
    "title": "Introduction & R-Basics",
    "section": "",
    "text": "Verteilung Vorwissen"
  },
  {
    "objectID": "folien/120423 - Website.html#vorstellungsrunde-1",
    "href": "folien/120423 - Website.html#vorstellungsrunde-1",
    "title": "Introduction & R-Basics",
    "section": "Vorstellungsrunde",
    "text": "Vorstellungsrunde\nVorwissen Programmiersprachen"
  },
  {
    "objectID": "folien/120423 - Website.html#vorstellungsrunde-2",
    "href": "folien/120423 - Website.html#vorstellungsrunde-2",
    "title": "Introduction & R-Basics",
    "section": "Vorstellungsrunde",
    "text": "Vorstellungsrunde\nErwartungen ans Seminar"
  },
  {
    "objectID": "folien/120423 - Website.html#ziele-des-seminars",
    "href": "folien/120423 - Website.html#ziele-des-seminars",
    "title": "Introduction & R-Basics",
    "section": "Ziele des Seminars",
    "text": "Ziele des Seminars\n\nDaten einlesen, bearbeiten, grafisch darstellen und statistisch auswerten\nEinblick in Breite und Tiefe, die R bietet\nGrundlagen schaffen, auf die ihr selbstständig aufbauen könnt (z.B. für Masterarbeit oder eigene Projekte)"
  },
  {
    "objectID": "folien/120423 - Website.html#zeitplan",
    "href": "folien/120423 - Website.html#zeitplan",
    "title": "Introduction & R-Basics",
    "section": "Zeitplan",
    "text": "Zeitplan\n\n7-8 Sitzungen, die jeweils 3h dauern\n\nMittagspause?\n\n31.05 vrsl. letzte, kürzere Sitzung\nInhaltlich: Basics, Deskriptives, Inferenzstatistik, Auswertung von Forschungsdaten\ninnerhalb der Sitzung: abwechselnd Blöcke von Theorie + Praxis\nWebsite für Präsentationsinhalte, Lösungen, Cheatsheets usw. (selbst Notizen machen lohnt sich auch!)"
  },
  {
    "objectID": "folien/120423 - Website.html#prüfungsleistung",
    "href": "folien/120423 - Website.html#prüfungsleistung",
    "title": "Introduction & R-Basics",
    "section": "Prüfungsleistung",
    "text": "Prüfungsleistung\n\nWöchentliche “Hausaufgaben”: Wiederholen und erweitern das im Seminar Gelernte\n\nAbgabe per Moodle spätestens am Sonntag vor der nächsten Sitzung\nwerden benotet, am Ende per Durchschnitt zusammengefasst und machen gemeinsam 50% der Note aus\nAbgabe mit der schlechtesten Benotung wird aus der Durchschnittsberechnung entfernt\nEinzelarbeit (Plagiatscheck)\nWir laden nach Abgabe “Musterlösung” hoch\n\n1x Hausaufgabe vorstellen (unbenotet)\nBericht zu (neuem) Datensatz einreichen (50% der Note) - mehr Infos folgen\n\nEs gibt keine Anwesenheitspflicht, wir empfehlen aber immer da zu sein, da euch die Prüfungsleistungen dann leichter fallen werden."
  },
  {
    "objectID": "folien/120423 - Website.html#was-ist-r",
    "href": "folien/120423 - Website.html#was-ist-r",
    "title": "Introduction & R-Basics",
    "section": "Was ist R?",
    "text": "Was ist R?\n\nProgrammiersprache (und -oberfläche) für statistische Berechnungen und Grafiken\nopen-source & kostenlos\ngroße Community, die ständig Funktionen erweitert und bei Problemen hilft\nR Studio ist die meistgenutzte Benutzeroberfläche und macht die Handhabung einfacher"
  },
  {
    "objectID": "folien/120423 - Website.html#user-interface",
    "href": "folien/120423 - Website.html#user-interface",
    "title": "Introduction & R-Basics",
    "section": "User Interface",
    "text": "User Interface\n\n\noben links: Code\nunten links: Konsole - ausgeführter Code und Output\n\nhier lässt sich auch Code eintippen, dieser kann allerdings nicht gespeichert werden\n\noben rechts: u.a. Environment - welche Objekte und Daten exisitieren\nunten rechts: Dateizugriff, Plotanzeige, Hilfeanzeige, Package-Übersicht"
  },
  {
    "objectID": "folien/120423 - Website.html#code-erstellen-ausführen",
    "href": "folien/120423 - Website.html#code-erstellen-ausführen",
    "title": "Introduction & R-Basics",
    "section": "Code erstellen + ausführen",
    "text": "Code erstellen + ausführen\n\nÖffnet das File das ihr auf der Seite mit unseren Installationstips heruntergeladen habt (vielleicht ist es auch noch offen)\nIn dem File ist nur die Zeile ohne #ausführbarer Code. Wie hier geschehen, lassen sich mit # Kommentare in den Code hinzufügen, die dem Code Struktur geben oder erklären, was hier passieren soll\nFührt die Zeile Code aus, in dem ihr euren Cursor in die Zeile stellt und STRG+ENTER drückt\nÜber das Markieren von mehreren/allen Zeilen werden die entsprechenden Zeilen nacheinander ausgeführt\n\n\n# Erstes Skript zum Seminar Medienbasierte Wissenskonstruktion: R\n\n# Satz in Konsole printen:\nprint(paste0(\"Ich habe \",R.version$version.string,\" und RStudio v\",rstudioapi::versionInfo()$version))\n\n\n\n[1] \"Ich habe R version 4.2.1 (2022-06-23 ucrt) und RStudio v2023.3.0.386\""
  },
  {
    "objectID": "folien/120423 - Website.html#r-vs.-quarto",
    "href": "folien/120423 - Website.html#r-vs.-quarto",
    "title": "Introduction & R-Basics",
    "section": ".R vs. Quarto",
    "text": ".R vs. Quarto\n\nR’s Standardformat sind .R-Dateien\nFür “echte Arbeit” mit R sind Quarto-Dokumente meistens nützlicher:\n\nermöglichen Export/Rendern in andere Dateiformate (html, pdf, docx, pptx,…)\nermöglichen neben Code-Abschnitte auch Text-Abschnitte, die formatiert werden können (wie LaTeX)\nermöglichen einzustellen, ob nur Code, nur Output, oder Code+Output angezeigt werden soll\nAuswertung & Bericht können somit im gleichen Dokument geschehen\nDiese Präsentation ist auch in R entstanden!"
  },
  {
    "objectID": "folien/120423 - Website.html#r-vs.-quarto-1",
    "href": "folien/120423 - Website.html#r-vs.-quarto-1",
    "title": "Introduction & R-Basics",
    "section": ".R vs. Quarto",
    "text": ".R vs. Quarto"
  },
  {
    "objectID": "folien/120423 - Website.html#quarto---dokument-aufsetzen",
    "href": "folien/120423 - Website.html#quarto---dokument-aufsetzen",
    "title": "Introduction & R-Basics",
    "section": "Quarto - Dokument aufsetzen",
    "text": "Quarto - Dokument aufsetzen\n\nErstellt ein Quarto-Dokument über File &gt; New File &gt; Quarto Document\nIm auftauchenden Fenster könnt ihr einstellen:\n\nTitel & AutorIn des Dokuments\ngewünschtes Output-Format (hier: html)\nwomit das Quarto-Dokument gerendert werden soll (hier: knitr)"
  },
  {
    "objectID": "folien/120423 - Website.html#quarto---im-dokument",
    "href": "folien/120423 - Website.html#quarto---im-dokument",
    "title": "Introduction & R-Basics",
    "section": "Quarto - im Dokument",
    "text": "Quarto - im Dokument\n\nDer Kasten oben heißt “YAML-header” - dort sind die Rendereinstellungen (Titel, Speicherort, Format, Schriftgröße usw.)\nIm Feld darunter kann Text geschrieben und formatiert werden\n\nSource: Format lässt sich über bestimmte Zeichen einstellen\nVisual: Format lässt sich über Markieren + Auswählen einstellen\n\nCode kann man nur innerhalb von Chunks einfügen (oben rechts auf das grün unterlegte C klicken oder STRG+ALT+I)\nIm grau unterlegten Kästchen lässt sich “normaler” R-Code schreiben und ausführen\n\n“Vorschau” über den Play-Button\nÜber #| am Zeilenbeginn lässt sich einstellen, was mit Code + Output beim Rendern passieren soll\n\nÜber “Render” wird das Dokument in das Zielformat umgewandelt\nIn den meisten Fällen rendert man nur gegen Ende und nutzt während der Analyse die Chunk-Vorschau"
  },
  {
    "objectID": "folien/120423 - Website.html#quarto",
    "href": "folien/120423 - Website.html#quarto",
    "title": "Introduction & R-Basics",
    "section": "Quarto",
    "text": "Quarto\n\nErstellt zwei Code-Chunks\nFügt bei einem der Chunks in die erste Zeile #| echo: TRUE\nFügt beim anderen Chunk in die erste Zeile #| echo: FALSE\nSchreibt in den Text- und in die Code-Bereiche 4+5\nRendert das Dokument\n\nOutput ohne Code:\n\n4+5\n\n[1] 9\n\n\nOutput mit Code:\n\n4+5\n\n[1] 9\n\n\nReiner Text:\n4+5"
  },
  {
    "objectID": "folien/120423 - Website.html#rechenoperatoren",
    "href": "folien/120423 - Website.html#rechenoperatoren",
    "title": "Introduction & R-Basics",
    "section": "(Rechen)Operatoren",
    "text": "(Rechen)Operatoren\n\nDezimaltrennzeichen: Punkt . , nicht Komma ,\n+ - * /\nExponent: ^\nlogisch gleich: ==\nlogisch ungleich: !=\nlogisches und: &\nlogisches oder: |\nlogisches exklusives oder: xor\nnicht: !"
  },
  {
    "objectID": "folien/120423 - Website.html#objekte",
    "href": "folien/120423 - Website.html#objekte",
    "title": "Introduction & R-Basics",
    "section": "Objekte",
    "text": "Objekte\n\nAnstatt nur Code durchzuführen und das Ergebnis in der Konsole abzulesen, können wir auch alles mögliche als Objekte speichern\nKonzept: links mit Objektname beginnen, dann den Zuweisungsoperator und anschließend das, was als Objekt gespeichert werden soll\n\n\nergebnis &lt;- 3+5\n\n\nR führt den Code rechts vom Pfeil aus - das Objekt ist “8”, nicht “3+5”!\nObjekte lassen sich abrufen, indem man ihren Namen schreibt und ausführt\n\n\nergebnis\n\n[1] 8\n\n\n\nR ist case-sensitive, d.h. Groß-und Kleinschreibung muss übereinstimmen!\nObjekte lassen sich auch oben rechts im Environment einsehen (wird aber irgendwann unübersichtlich…)\nErstellt selbst eine Rechenaufgabe und speichert sie als Objekt!\nWas passiert, wenn man den gleichen Objektnamen erneut verwendet?"
  },
  {
    "objectID": "folien/120423 - Website.html#objekte-1",
    "href": "folien/120423 - Website.html#objekte-1",
    "title": "Introduction & R-Basics",
    "section": "Objekte",
    "text": "Objekte\n\nWarum ist Objekte erstellen wichtig?\n\nFür R ist jeder Output sonst “flüchtig”: Es wird nicht wirklich etwas verändert\nZwischenergebnisse überprüfen\nParameter festlegen\nFlüchtigkeitsfehler vermeiden\nuvm.\n\nShortcut für &lt;- : ALT+-\nPfeil in die andere Richtung -&gt; und Gleichheitszeichen = funktionieren nicht bzw. sollten nicht verwendet werden!"
  },
  {
    "objectID": "folien/120423 - Website.html#funktionen",
    "href": "folien/120423 - Website.html#funktionen",
    "title": "Introduction & R-Basics",
    "section": "Funktionen",
    "text": "Funktionen\n\nMithilfe von Funktionen lassen sich Objekte/Daten bearbeiten\nBeispiel: round(3.45, digits = 1) rundet 3.45 auf die erste Nachkommastelle\n\nam Anfang steht der Name der Funktion (auch hier: case-sensitive)\ndie Argumente der Funktion werden von runden Klammern eingerahmt\nArgumente sind bspw. die Daten, auf die die Funktion angewendet werden soll, aber auch weitere Einstellungen der Funktion, z.B. auf wie viele Nachkommastellen gerundet werden soll\nsie folgen der Syntax Argument = Angabe\nArgumente werden durch Komma getrennt\nmanche Argumente sind zwingend notwendig, viele aber optional\ndie Argumente einer Funktion haben eine bestimmte Reihenfolge, daher kann man den Argumentnamen häufig weglassen, z.B. round(3.45, 1) (solange man die Funktion noch nicht gut kennt, oder auch um den Überblick zu behalten, besser die Argumente explizit nennen)"
  },
  {
    "objectID": "folien/120423 - Website.html#hilfe-in-r",
    "href": "folien/120423 - Website.html#hilfe-in-r",
    "title": "Introduction & R-Basics",
    "section": "Hilfe in R",
    "text": "Hilfe in R\n\nÜber help(Funktion) wird die Hilfeseite/Dokumentation der Funktion “Funktion” aufgerufen\n\ngenauso funktioniert ?Funktion\nauf der Hilfeseite stehen mögliche Argumente, ihre Reihenfolge und in welchem Format das Argument angegeben wird (wird eine Zahl oder ein Wort erwartet?)\n\nFindet mit der Hilfe-Funktion heraus, was mean() macht und welche Argumente es hat\n\n\n?mean\n#oder\nhelp(mean)"
  },
  {
    "objectID": "folien/120423 - Website.html#hilfe-außerhalb-von-r",
    "href": "folien/120423 - Website.html#hilfe-außerhalb-von-r",
    "title": "Introduction & R-Basics",
    "section": "Hilfe außerhalb von R",
    "text": "Hilfe außerhalb von R\n\nFehlermeldungen lesen und versuchen, Problem zu verstehen\ndas Internet!\n\nFehlermeldung bei Google einfügen und Links durchsuchen\nStack Overflow\nStatt selbst eine Frage einreichen zu müssen findet sich fast immer ein Thread mit dem gleichen/ähnlichen Problem und möglichen Lösungen\n\nDanach: Lösung für sich dokumentieren"
  },
  {
    "objectID": "folien/120423 - Website.html#packages",
    "href": "folien/120423 - Website.html#packages",
    "title": "Introduction & R-Basics",
    "section": "Packages",
    "text": "Packages\n\nFrisch nach der Installation besteht R aus Base R und einigen wenigen Erweiterungen\nDurch die Installation von weiteren Paketen/Packages lassen sich die Funktionen fast beliebig erweitern: Jedes Package enthält Funktionen und/oder Datensätze, meistens zu bestimmten Analysen, mehr oder weniger nischig\nIm Fenster unten rechts unter “Packages” könnt ihr sehen, welche Packages schon installiert und/oder aktiviert sind\nNeue Packages lassen sich mit install.packages(\"package-name\") installieren und mit library(package-name) aktivieren (auf die Anführungszeichen achten!)\nMan kann neue Funktionen auch selbst schreiben, das ist aber meistens nur in Sonderfällen notwendig"
  },
  {
    "objectID": "folien/120423 - Website.html#packages-1",
    "href": "folien/120423 - Website.html#packages-1",
    "title": "Introduction & R-Basics",
    "section": "Packages",
    "text": "Packages\n\nInstalliert und aktiviert das Package psych (Erinnerung: install.packages()& library())\nWendet die Hilfefunktion help() auf sich selbst an, um herauszufinden, wie ihr mit ihr Informationen über Packages bekommt\nSchaut euch mit dem neuen Wissen an, welche Funktionen das Package psych beinhaltet\n\n\n# Installieren\ninstall.packages(\"psych\")\n# Aktivieren\nlibrary(psych)\n\n# Mehr über help() herausfinden\nhelp(help) # Inception!\n# Aha, das Argument \"package\" kann mir weiterhelfen!\n\n# Über psych informieren\nhelp(package=psych)"
  },
  {
    "objectID": "folien/120423 - Website.html#datentypen",
    "href": "folien/120423 - Website.html#datentypen",
    "title": "Introduction & R-Basics",
    "section": "Datentypen",
    "text": "Datentypen\n\nBasic:\n\nnumeric: Zahlen (integer, double)\ncharacter: Buchstabenfolgen (strings)\nfactor: z.B. Faktorstufen eines Faktors\nlogical: TRUE, FALSE (vgl. 1 & 0)\n\nVektor: eindimensionale “Aufzählung” von Elementen\nMatrix: ein- bis zweidimensionale Aufzählung von Elementen\nArray: beliebig-dimensionale Aufzählung von Elementen\nListe: kann verschiedene Datentypen und Strukturen enthalten (z.B. Ergebnis einer ANOVA)\nDataframe, Tibble: Spezifische Formate, um Datensätze darzustellen\n\nKönnen pro Spalte unterschiedliche Datentypen beinhalten\nStandardformat, wenn man von extern Daten in R reinlädt"
  },
  {
    "objectID": "folien/120423 - Website.html#datentypen-1",
    "href": "folien/120423 - Website.html#datentypen-1",
    "title": "Introduction & R-Basics",
    "section": "Datentypen",
    "text": "Datentypen\nDer Datensatz aus der Umfrage sieht als Vorschau in der Konsole so aus:\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nNew names:\nRows: 4 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): sex, r_problems\ndbl  (5): ...1, id, lastpage, age, hopes_perc\nlgl  (3): r_knowledge, r_knowledge_amount, programming_knowledge\ndttm (1): submitdate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n  \n\n\n\n\n\nZeile: Ein Tibble mit diesen Dimensionen wird angezeigt\n\n\nZeile: Spaltennamen\n\n\nZeile: Datentypen\n\nfolgende Zeilen: Daten\nin der Konsole werden Daten meistens nur gekürzt angezeigt\nÜber view(daten) öffnet sich eine Tabellenübersicht"
  },
  {
    "objectID": "folien/120423 - Website.html#bestimmte-daten-abrufen",
    "href": "folien/120423 - Website.html#bestimmte-daten-abrufen",
    "title": "Introduction & R-Basics",
    "section": "Bestimmte Daten abrufen",
    "text": "Bestimmte Daten abrufen\n\nIn eckigen Klammern nach dem Objektnamen lassen sich die “Koordinaten” angeben\n\n\numfrage[2,3] # zeigt den Wert der zweiten Zeile und dritten Spalte\n\n\n\n  \n\n\n\n\nStatt Zahlen können auch Spaltennamen benutzt werden\n\n\numfrage[3, \"geschlecht\"]\n\n\n\n  \n\n\n\n\nSpalten lassen sich auch direkt über $ ansprechen.\n\n\numfrage$geschlecht\n\n[1] &lt;NA&gt;   female female male  \nLevels: female male"
  },
  {
    "objectID": "folien/120423 - Website.html#bestimmte-daten-abrufen-1",
    "href": "folien/120423 - Website.html#bestimmte-daten-abrufen-1",
    "title": "Introduction & R-Basics",
    "section": "Bestimmte Daten abrufen",
    "text": "Bestimmte Daten abrufen\n\nUm alles anzeigen zu lassen, kann man die Koordinate “leer” lassen\n\n\numfrage[ , \"geschlecht\"]\n\n\n\n  \n\n\n\n\numfrage[ , ]"
  },
  {
    "objectID": "folien/120423 - Website.html#datentypen-2",
    "href": "folien/120423 - Website.html#datentypen-2",
    "title": "Introduction & R-Basics",
    "section": "Datentypen",
    "text": "Datentypen\n\nR erkennt häufig von selbst, welcher Datentyp gemeint ist\nHäufig ist es aber sinnvoll, noch mal “von Hand” zu überprüfen und/oder den richtigen Datentyp festzulegen\ntypeof() um den Datentyp zu erfragen\nis.numeric() / is.factor() / is.logical() / is.character() um einen bestimmten Datentyp zu testen\nas.numeric() usw. nutzen, um den Datentyp zu verändern\n\n\numfrage$r.probleme &lt;- as.factor(umfrage$r.probleme)\n# Die umgewandelte Spalte überschreibt die alte Spalte!"
  },
  {
    "objectID": "folien/120423 - Website.html#neue-daten-erstellen",
    "href": "folien/120423 - Website.html#neue-daten-erstellen",
    "title": "Introduction & R-Basics",
    "section": "Neue Daten erstellen",
    "text": "Neue Daten erstellen\n\nVektoren: c()\nKombiniert alle aufgezählten Objekte\n\n\nvektor &lt;- c(1,3,5)\nvektor\n\n[1] 1 3 5\n\n\n\nStrings müssen in Anführungszeichen gesetzt werden, damit R sie nicht mit Objekten verwechselt.\nIm Output erkennt man Strings auch an den Anführungszeichen\n\n\nstring &lt;- \"hallo\"\nstring\n\n[1] \"hallo\""
  },
  {
    "objectID": "folien/120423 - Website.html#unterschiede-zu-anderen-programmiersprachen",
    "href": "folien/120423 - Website.html#unterschiede-zu-anderen-programmiersprachen",
    "title": "Introduction & R-Basics",
    "section": "Unterschiede zu anderen Programmiersprachen",
    "text": "Unterschiede zu anderen Programmiersprachen\n\nkeine Unterscheidung zwischen integer und double\nverwendet keine Pointer\ntendenziell: Viele Angelegenheiten, bei denen andere Sprachen empfindlich sind, sind in R simpler aufgebaut"
  },
  {
    "objectID": "datawrangling_dplyr.html",
    "href": "datawrangling_dplyr.html",
    "title": "Wrangling mit dplyr",
    "section": "",
    "text": "Show code\nlibrary(tidyverse)\nlibrary(reshape2)\nlibrary(reactable)\n\npalette1 &lt;- c(\"#648fff\",\"#785ef0\",\"#dc267f\",\"#fe6100\",\"#ffb000\",\"#000000\",\"#ffffff\")\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")\n\ndataset &lt;- read.csv(\"assets/datasets/iris.csv\")\ndataset$Species &lt;- as.factor(dataset$Species)"
  },
  {
    "objectID": "datawrangling_dplyr.html#hintergrund",
    "href": "datawrangling_dplyr.html#hintergrund",
    "title": "Wrangling mit dplyr",
    "section": "Hintergrund",
    "text": "Hintergrund\nViele verschiedene Objekte im Environment sind nur eine Motivation, dplyr zu benutzen. Vielmehr bietet es “eine einfache Grammatik der Datenmanipulation, welche einfach zu lernen & anzuwenden ist” (vgl. tidyverse.com) und viel Flexibilität bietet - daher gehört es auch zu den beliebtesten R-Packages, besonders wenn es um Datenanalyse geht."
  },
  {
    "objectID": "datawrangling_dplyr.html#der-pipe-operator",
    "href": "datawrangling_dplyr.html#der-pipe-operator",
    "title": "Wrangling mit dplyr",
    "section": "Der Pipe-Operator",
    "text": "Der Pipe-Operator\nIm Zentrum von dplyr steht der sogenannte Pipe-Operator %&gt;% (ursprünglich aus dem Magrittr Package). Dieser schaut zunächst etwas ungewohnt aus, daran gewöhnt man sich aber schnell:\n\nobject %&gt;% \n  do_something(parameters = \"xyz\")\n\nMithilfe des Pipe Operators können wir verschiedene Befehler aneinanderketten. Der Output des jeweiligen Befehls wird sozusagen als Input in die nächste Zeile “gepiped”. Das heißt, wenn der Input ein Dataframe ist, mit dem dann entsprechend Anpassungen vorgenommen werden, so ist der Output für die nächste Zeile wieder ein Dataframe - welches diese dann weiterverarbeitet.\nFür den Operator gibt es natürlich eine Tastenkombination, mithilfe derer wir ihn schnell eingeben können. Diese lautet COMMAND + SHIFT + M für Mac-User, und STRG + SHIFT + M für Windows User.\nWir erinnern uns, dass der obige Befehl üblicherweise so lauten würde:\n\ndo_something(object, parameters = \"xyz\")\n\nHier müssen wir das betreffende Objekt als Parameter übergeben, und anschließend den Output entweder direkt verwerten, oder über &lt;- speichern. Wenn wir nun eine zweite Funktion do_something_else für das gleiche Objekt verwenden wollten, müssten wir dies erneut speichern, oder überspeichern:\n\nresult &lt;- do_something(object, parameters = \"xyz\")\n\ndo_something_else(result, parameters = \"abc\")\n\nMithilfe des Pipe Operators %&gt;% können wir uns das sparen. Wir starten mit dem ursprünglichen Objekt, und geben dann die bearbeiteten Versionen in die jeweilige Zeile weiter:\n\nobject %&gt;% \n  do_something(parameters = \"xyz\") %&gt;% \n  do_something_else(parameters = \"abc\")\n\nDer Output von do_something() wird also zum Input von do_something_else() ."
  },
  {
    "objectID": "datawrangling_dplyr.html#funktionen",
    "href": "datawrangling_dplyr.html#funktionen",
    "title": "Wrangling mit dplyr",
    "section": "Funktionen",
    "text": "Funktionen\ndplyr ist aber natürlich nicht nur wegen des Pipe-Operators so praktisch. Es bringt auch viele Funktionen mit sich, die bei typischen Datenanalyse-Aufgaben relevant sind. Diese Funktionen ermöglichen ähnliche Dinge wie bspw. das auf der vorigen Seite gezeigte subset(), sind dabei jedoch etwas weniger umständlich und intuitiver. Im Folgenden wollen wir euch die wichtigsten davon vorstellen:\n\nfilter()\nBeschreibung von tidyverse.org:\n\nThe filter() function is used to subset a data frame, retaining all rows that satisfy your conditions. To be retained, the row must produce a value of TRUE for all conditions. Note that when a condition evaluates to NA the row will be dropped, unlike base subsetting with [.\n\n\nMit der filter() Funktion können wir, wie der Name schon sagt, Datensätze auf Basis gewisser Kriterien filtern. Angenommen, wir wollen wieder nach der Spezies setosa filtern. Dies geschieht mit dplyr wie folgt:\n\ndataset %&gt;% \n  filter(Species == \"setosa\")\n\n\n\n  \n\n\n\nEbenso können wir mehrere Bedingungen kombinieren:\n\ndataset %&gt;% \n  filter(Species == \"setosa\" & Sepal.Length &lt; 5)\n\n\n\n  \n\n\n\nDas besondere an dplyr ist, dass wir dies nun aber auch in zwei Schritten machen könnten:\n\ndataset %&gt;% \n  filter(Species == \"setosa\") %&gt;% \n  filter(Sepal.Length &lt; 5)\n\n\n\n  \n\n\n\nWie zu sehen ist, sind die resultierenden Dataframes dieselben.\n\n\nselect()\nBeschreibung von tidyverse.org:\n\nSelect (and optionally rename) variables in a data frame, using a concise mini-language that makes it easy to refer to variables based on their name (e.g. a:f selects all columns from a on the left to f on the right) or type (e.g. where(is.numeric) selects all numeric columns).\n\n\nEbenso wie mit select() in subset() können wir hiermit verschiedene Spalten auswählen. Die Syntax ist wie folgt:\n\ndataset %&gt;% \n  select(Sepal.Length,Sepal.Width)\n\n\n\n  \n\n\n\nDamit wählen wir die Spalten Sepal.Length und Sepal.Width aus. Wir könnten auch sagen, wir wollen alle Spalten außer Species:\n\ndataset %&gt;% \n  select(-Species)\n\n\n\n  \n\n\n\nOft kommt es vor, dass wir bspw. durch Limesurvey wissen, dass alle Variablen eines Fragebogens mit “SQ..” anfangen. Sollten wir diese alle schnell auswählen wollen (bspw. zum Berechnen von Summenscores), kann uns dplyr auch dabei helfen, mithilfe von starts_with().\n\ndataset %&gt;% \n  select(starts_with(\"Se\"))\n\n\n\n  \n\n\n\n\n\nmutate()\nBeschreibung von tidyverse.org:\n\nmutate() creates new columns that are functions of existing variables. It can also modify (if the name is the same as an existing column) and delete columns (by setting their value to NULL).\n\n\nApropos Summenscores - mutate() klingt gruseliger, als es ist. Mit mutate() können wir neue Variablen kreieren, oder bestehende modifizieren. Angenommen, die Blätter der Iris-Blume wären rechteckig, und wir könnten die Fläche Petal.Square einfach in Quadratzentimeter berechnen:\n\ndataset %&gt;% \n  mutate(Petal.Square = Petal.Length*Petal.Width)\n\n\n\n  \n\n\n\nWir sehen, die Syntax ist mutate(neue_variable = berechnungen). Wir können auch mehrere Variablen in einem Zug erzeugen:\n\ndataset %&gt;% \n  mutate(Petal.Square = Petal.Length*Petal.Width,\n         Sepal.Square = Sepal.Length*Sepal.Width)\n\n\n\n  \n\n\n\nWenn der neue_variable Name gleich wie der alte ist, überschreiben wir die Spalte:\n\ndataset %&gt;% \n  mutate(Sepal.Length = Sepal.Length/10)\n\n\n\n  \n\n\n\n\n\narrange()\nBeschreibung von tidyverse.org:\n\narrange() orders the rows of a data frame by the values of selected columns. Unlike other dplyr verbs, arrange() largely ignores grouping; you need to explicitly mention grouping variables (or use  .by_group = TRUE) in order to group by them, and functions of variables are evaluated once per data frame, not once per group.\n\n\nManchmal kommt es vor, dass wir einen Datensatz sortieren wollen, um einen besseren Überblick über die Daten zu bekommen. Dazu bietet sich arrange() an:\n\ndataset %&gt;% \n  arrange(Sepal.Length)\n\n\n\n  \n\n\n\nWir sehen, die Spalte Sepal.Length wird in aufsteigender Reihenfole sortiert. Wollen wir es in absteigender Reihenfolge haben, müssen wir die Funktion desc() dazunehmen:\n\ndataset %&gt;% \n  arrange(desc(Sepal.Length))\n\n\n\n  \n\n\n\n\n\ngroup_by()\nBeschreibung von tidyverse.org:\n\nMost data operations are done on groups defined by variables. group_by() takes an existing tbl and converts it into a grouped tbl where operations are performed “by group”. ungroup() removes grouping.\n\n\nEine der hilfreichsten Funktionen von dplyr ist die group_by() Funktion. Hier ist allerdings eine etwas genauere Erklärung erforderlich. Die generelle Syntax ist die folgende:\n\nobject %&gt;% \n  group_by(variable) %&gt;% \n  do_something()\n\nWir übergeben der group_by() Funktion als Parameter eine Variable, nach der diese den Datensatz gruppieren soll. Hier ist es wichtig zu verstehen, dass diese Gruppierung für alle nachfolgenden Schritte gilt, selbst aber keinen Effekt hat. Was heißt das genau? Betrachten wir folgenden Code:\n\ndataset %&gt;% \n  group_by(Species)\n\n\n\n  \n\n\n\nAußer der Info Groups: Species [3] hat sich nichts verändert. Nehmen wir allerdings in der nächsten Zeile eine Funktion hinzu (bspw. mutate()), so verändert das, wie diese sich verhält. Normalerweise würde folgender Code die Variable Sepal.Length_mean erzeugen, welche den Mittelwert von Sepal.Length enthält:\n\ndataset %&gt;% \n  mutate(Sepal.Length_mean = mean(Sepal.Length))\n\n\n\n  \n\n\n\nDa dieser natürlich für den gesamten Datensatz berechnet wird, beträgt er für jede Messung 5.84. Wenn wir vorher allerdings group_by() eingeben, sieht das anders aus:\n\ndataset %&gt;% \n  group_by(Species) %&gt;% \n  mutate(Sepal.Length_mean = mean(Sepal.Length))\n\n\n\n  \n\n\n\nWir sehen, dass mutate() den Wert pro Gruppe berechnet hat. Dies kann sehr hilfreich für verschiedenste Anwendungen sein. Ebenso können wir nach mehreren Variablen gruppieren. Dazu aber gleich mehr.\n\n\nsummarise()\nBeschreibung von tidyverse.org:\n\nsummarise() creates a new data frame. It returns one row for each combination of grouping variables; if there are no grouping variables, the output will have a single row summarising all observations in the input. It will contain one column for each grouping variable and one column for each of the summary statistics that you have specified. summarise() and summarize() are synonyms.\n\n\nVielleicht wirkt es etwas merkwürdig, dass wir oben die Variable Sepal.Length_mean für jeden Datenpunkt einzeln berechnet haben, obwohl diese natürlich immer gleich ist. Meistens wollen wir solche Werte für die gesamte Stichprobe haben. Dabei hilft uns summarise():\n\ndataset %&gt;% \n  summarise(Sepal.Length_mean = mean(Sepal.Length))\n\n\n\n  \n\n\n\nWir sehen, dass die Syntax dieselbe wie die von mutate() ist, nur dass der Output eben nur eine Zahl (bzw. eine Zeile ist) - eben die Summary unseres Datensatzes unter den gegebenen Bedingungen. Besonders hilfreich ist summarise() in Kombination mit group_by():\n\ndataset %&gt;% \n  group_by(Species) %&gt;% \n  summarise(Sepal.Length_mean = mean(Sepal.Length))\n\n\n\n  \n\n\n\nSo können wir mit drei Zeilen die Mittelwerte für die jeweilige Gruppe sehen. Wir können natürlich auch gleich die Standardabweichung mitberechnen:\n\ndataset %&gt;% \n  group_by(Species) %&gt;% \n  summarise(Sepal.Length_mean = mean(Sepal.Length),\n            Sepal.Length_sd = sd(Sepal.Length))\n\n\n\n  \n\n\n\n\nFür Expert:innen:\nOben wurde kurz erwähnt, dass wir auch nach mehreren Variablen gruppieren können. Angenommen, es gäbe noch zusätzlich die Variable color in den Ausprägungen purple, blue und white für jeden Datenpunkt, d.h., jede Blüte kann auch eine dieser verschiedenen Farben haben.\n\n\nShow code\ndataset %&gt;% \n  mutate(color = as.factor(sample(rep(c(\"purple\",\"blue\",\"white\"),50)))) -&gt; dataset\n\n\nWenn wir nun nach den Variablen Species und color gruppieren wollen, müssen wir diese beiden Variablen als Parameter übergeben:\n\ndataset %&gt;% \n  group_by(Species, color) %&gt;% \n  summarise(Sepal.Length_mean = mean(Sepal.Length),\n            Sepal.Length_sd = sd(Sepal.Length))\n\n\n\n  \n\n\n\nNun sehen wir die Mittelwerte für die verschiedenen Kombinationen der Variablen (also bspw. setosa & blue). Hier kann es hilfreich sein, die Anzahl an Zeilen pro Gruppe zu bekommen. Hierfür eignet sich die n() Funktion:\n\ndataset %&gt;% \n  group_by(Species, color) %&gt;% \n  summarise(Sepal.Length_mean = mean(Sepal.Length),\n            Sepal.Length_sd = sd(Sepal.Length),\n            n = n())\n\n\n\n  \n\n\n\nNun haben wir die Mittelwerte für jede Kombination aus Species und color, sowie die Anzahl n der jeweiligen Zeilen bzw. Messungen."
  },
  {
    "objectID": "datawrangling_dplyr.html#temporär-oder-speichern",
    "href": "datawrangling_dplyr.html#temporär-oder-speichern",
    "title": "Wrangling mit dplyr",
    "section": "Temporär oder Speichern?",
    "text": "Temporär oder Speichern?\nSicherlich ist aufgefallen, dass alle unsere gezeigten “Pipes” nur zu einem Output im Chunk geführt haben, wir diese allerdings nicht in unserem Environment gespeichert haben. Natürlich können wir dies tun, indem wir unsere Pipe einem Objekt über den Zuweisungsoperator &lt;- zuweisen:\n\nobject &lt;- object %&gt;% \n            select(variableA,variableB,variableC) %&gt;% \n            mutate(variableA*100)\n\nNatürlich ist uns selbst überlassen, wie wir mit den Daten umgehen. Manchmal wird es Fälle geben, in denen Speichern Sinn ergibt (bspw. wenn sonst immer wieder die gleiche Transformation anstünde), oft wird es aber auch ausreichend sein, die Daten einfach im Output des jeweiligen Chunks anzuschauen, bzw. etwaige Transformationen unmittelbar vor weiteren Schritten zu machen (bspw. beim Erzeugen von Plots).\nAchtung: Wenn wir mit summarise() einen Output bekommen, so ist dieser natürlich nicht mehr das “ursprüngliche” Dataframe. Diesen würden wir uns also üblicherweise im Chunk-Output anschauen."
  },
  {
    "objectID": "datawrangling_dplyr.html#fazit",
    "href": "datawrangling_dplyr.html#fazit",
    "title": "Wrangling mit dplyr",
    "section": "Fazit",
    "text": "Fazit\ndplyr bringt eine einfach verständliche Grammatik mit sich, die uns hilft, uns auf das wesentliche zu konzentrieren: die Daten. Im nächsten Kapitel werden wir lernen, wie wir diese Daten visualiseren können, um sie noch besser zu verstehen."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Kontakt",
    "section": "",
    "text": "Falls ihr Probleme oder Fragen habt, meldet euch gerne."
  },
  {
    "objectID": "contact.html#simon-krukowski",
    "href": "contact.html#simon-krukowski",
    "title": "Kontakt",
    "section": "Simon Krukowski",
    "text": "Simon Krukowski\nE-Mail: simon.krukowski@uni-due.de\nRaum: Uni Duisburg-Essen, Campus Duisburg, LE 616\nTelefon: +49 203 379 / 4143"
  },
  {
    "objectID": "contact.html#kira-wolff",
    "href": "contact.html#kira-wolff",
    "title": "Kontakt",
    "section": "Kira Wolff",
    "text": "Kira Wolff\nE-Mail: kira.wolff@uni-due.de\nRaum: Uni Duisburg-Essen, Campus Duisburg, LE 623\nTelefon: +49 203 379 / 4761"
  },
  {
    "objectID": "assignments/assignment3.html",
    "href": "assignments/assignment3.html",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "",
    "text": "Beschreibung\nDiese Woche habt ihr euch im Seminar mit dem Einlesen von Daten, dem Zurechtschnibbeln von Dataframes, dem Aufbereiten deskriptiver Ergebnisse und dem Erstellen von Plots beschäftigt. Wie letzte Woche wollen wir euch hier einiges wiederholen, kombinieren und weiterdenken lassen.\nFalls ihr an einer Stelle mal nicht weiterkommen solltet, sodass die folgenden Aufgaben nicht mehr lösbar sind, meldet euch bitte bei uns.\n\nPunkte\nFür jede Aufgabe bzw. Teilaufgabe gibt es Punkte - diese sind entsprechend kenntlich gemacht. Insgesamt gibt es für jedes Aufgabenblatt 10 Punkte. Aufgaben, die als [Bonus] markiert sind, geben keine Punkte.\n\n\nFür Experten\nManche Aufgaben erfordern Transferwissen, welches ihr im heutigen Seminar so nicht direkt gelernt hat. Diese Aufgaben sind als [Für Experten] markiert - hier berücksichtigen wir nicht nur die Lösung, sondern schon eure Lösungsversuche (falls ihr auf keine Lösung kommt).\n\n\nAbgabe [+ .html]\nUm eure Hausaufgabe abzugeben, ladet diese bitte als .qmd Datei im Moodle hoch. Etwaige anderer Dateien (.html, assets-Ordner) müsst ihr nicht hochladen. Bitte benennt die Dateien entsprechend (bspw. hausaufgabe2_simon_krukowski.qmd, und schreibt hier in der Datei oben bei author euren Namen rein.\n\n\n\nAufgaben\n\nAufgabe 1 [1 Punkt]\nIn der letzten Seminarstunde habt ihr einiges über statistische Verfahren in R gelernt. In dieser Hausaufgabe geht es darum, dieses Wissenanzuwenden. In der Stunde habt ihr außerdem gelernt, warum es wichtig und sinnvoll ist, zu Beginn eines jeden Quarto-Dokuments einen “Info-Chunk” zu erstellen, in dem ihr alle benötigten Packages aktiviert etc.\nErstellt nun einen solchen Chunk und nennt ihn preliminaries. Ladet darin das Package datarium (installiert es vorher ggf. über die Konsole), sowie alle weiteren Packages, die ihr benötigt. Speichert das darin enthaltene Dataset genderweight als dataset.\nAußerdem kann es hilfreich sein, dort direkt eine Farbpalette (bspw. mit 4 Farben, definiert als hex codes) in einem Vektor zu speichern. Holt euch bspw. bei colorhunt.co Inspiration und speichert eine solche Palette darin ab.\nStellt außerdem sicher, dass der Chunk keine Warnungen anzeigt beim rendern (hint: chunk-options).\n\n\nAufgabe 2 [1 Punkt]\nSchaut euch den Datensatz an, um ein Gefühl dafür zu bekommen. Gebt euch dazu wahlweise den Datensatz selbst, oder bspw. gruppierte Outputs über dplyr an. Wir wollen, dass die Tabellenoutputs nicht im default Format dargestellt werden. Stellt das entsprechend im YAML Header ein.\n\n\nAufgabe 3 [1 Punkt]\nPrüft nun die Variable weight auf Normalverteilung. Macht das wahlweise über einen Test, oder ein Diagramm:\nIst die Variable normalverteilt? Begründe kurz:\nAntwort hier\n\n\nAufgabe 4 [1 Punkt]\nUnabhängig davon, was wir gerade herausgefunden haben, entscheiden wir uns dazu, einen t-Test zu rechnen, und die Mittelwerte von weight miteinander zu vergleichen. Wir haben die Vermutung, dass Männer ein höheres Gewicht haben. Berücksichtigt das und rechnet den Test (hint: gerichtetes Testen). Was kommt heraus?\nAntwort hier\n\n\nBonus:\nWas hat die Überschrift zu bedeuten und wie könnte das mit Voraussetzungen zu tun haben?\nAntwort hier\n\n\nAufgabe 5 [1 Punkt]\nAngenommen, wir hätten in der Zwischenzeit herausgefunden, dass die Variable weight nicht normalverteilt ist. Welcher Test bietet sich dann stattdessen an? Rechnet diesen.\n\n\nAufgabe 6 [1 Punkt]\n-&gt; Anova mit CO2 und Messwiederholung -&gt; Long/Wide?\n\n\nAufgabe 7 [1 Punkt]\n-&gt; Boxplot? -&gt; Palette verwenden\n\n\nAufgabe 8 [1 Punkt]\nWir interessieren uns nun auch für Zusammenhänge zwischen Daten. Dazu schauen wir uns wieder das bekannte iris data set an. Primär interessiert uns, ob Sepal.Width und Sepal.Height zusammenhängen. Um also zunächst eine Idee über die Verteilung der Daten zu bekommen, sollt ihr mit ggplot ein Diagramm erstellen. Darin sollen mehrere Sachen enthalten sein:\n\nBivariates Streudiagramm (hint: ihr wollt Punkte plotten)\nEine Regressionsgrade (hint: geom_smooth() ist euer Freund)\n\nRechnet auch eine Pearson-Korrelation zwischen den beiden Variablen:\nWas lässt sich über den Zusammenhang der beiden Variablen sagen?\nAntwort hier\n\n\nAufgabe 9 [1 Punkt]\nWir haben nun die Annahme, dass die Spezies der Pflanzen außerdem einen Einfluss auf den Zusammenhang zwischen den beiden Variablen hat. Dazu sollt ihr zunächst die Punkte in Abhängigkeit von Species einfärben:\nWir haben nun das Gefühl, dass ein Zusammenhang zwischen den beiden Variablen besteht und uns dazu entschieden, ein Regressionsmodell zu berechnen, in dem wir Sepal.Length als abhängige Variable haben, sowie Species und Sepal.Width als Prädiktoren. Berechnet ein solches Modell und speichert es als model:\n\n\nAufgabe 10 [1 Punkt]\nNun wollen wir die Ergebnisse der Regressionsanalyse entsprechend berichten. Aus Übungsgründen sollt ihr dabei auf Packages wie stargazer() verzichten. Ihr habt im Seminar inline-Code gelernt. Verwendet diesen, um die Ergebnisse entsprechend zu berichten. Dazu bietet es sich an, den Output von summary() in einem Objekt zu speichern, und dann auf die Werte zuzugreifen. Denkt dran: über den $ Operator sowie ['variable'] könnt ihr auf einzelne Werte zugreifen.\nErgänzt also die F-Statistik in folgendem Satz:\n\nDie Regression mit Sepal.Width als abhängige und Sepal.Length und Species als erklärende Variablen ist signifikant, F (3,146) = antwort hier, p &lt; .001.\n\n\n\nAufgabe 11 [Bonus]\nWas macht die paste0 Funktion und könnte man die obige Lösung damit vereinfachen?"
  },
  {
    "objectID": "assignments/assignment2.html",
    "href": "assignments/assignment2.html",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "",
    "text": "Beschreibung\nDiese Woche habt ihr euch im Seminar mit dem Einlesen von Daten, dem Zurechtschnibbeln von Dataframes, dem Aufbereiten deskriptiver Ergebnisse und dem Erstellen von Plots beschäftigt. Wie letzte Woche wollen wir euch hier einiges wiederholen, kombinieren und weiterdenken lassen.\nFalls ihr an einer Stelle mal nicht weiterkommen solltet, sodass die folgenden Aufgaben nicht mehr lösbar sind, meldet euch bitte bei uns.\n\nPunkte\nFür jede Aufgabe bzw. Teilaufgabe gibt es Punkte - diese sind entsprechend kenntlich gemacht. Insgesamt gibt es für jedes Aufgabenblatt 10 Punkte. Aufgaben, die als [Bonus] markiert sind, geben keine Punkte.\n\n\nFür Experten\nManche Aufgaben erfordern Transferwissen, welches ihr im heutigen Seminar so nicht direkt gelernt hat. Diese Aufgaben sind als [Für Experten] markiert - hier berücksichtigen wir nicht nur die Lösung, sondern schon eure Lösungsversuche (falls ihr auf keine Lösung kommt).\n\n\nAbgabe\nUm eure Hausaufgabe abzugeben, ladet diese bitte als .qmd Datei im Moodle hoch. Etwaige anderer Dateien (.html, assets-Ordner) müsst ihr nicht hochladen. Bitte benennt die Dateien entsprechend (bspw. hausaufgabe2_simon_krukowski.qmd, und schreibt hier in der Datei oben bei author euren Namen rein.\n\n\n\nAufgaben\n\nAufgabe 1 [1 Punkt]\nAm Anfang von fast jedem R-Code aktiviert man erst mal die notwendigen Packages und lädt den relevanten Datensatz. Wir schauen uns hier einen Datensatz aus dem Package nycflights13 an. Installiert und aktiviert dementsprechend die Packages nycflights13, dplyr und ggplot2. (Denkt auch daran, welche Packages ihr installieren und welche vielleicht nur aktivieren müsst..)\n\n# Hier Lösung einfügen\n\nDer Datensatz, mit dem wir nun arbeiten, nennt sich flights. Unter diesem Namen könnt ihr ihn nach erfolgreicher Aktivierung von nycflights13 finden. Er enthält alle Flüge, die im Jahr 2013 in New York losgeflogen sind. Mehr Informationen zu den Variablen könnt ihr über die Hilfefunktion bekommen.\nHinweis: Speichert euch bei den folgenden Aufgaben eure Änderungen an flights in Objekten mit einem anderen Namen, damit ihr - falls etwas schief geht - immer wieder auf das Original zurückgreifen könnt.\n\n# Nur mal zum Anschauen:\nflights\n\n\n\nAufgabe 2 [1 Punkt]\nErgänzt flights um eine weitere Spalte, in der die Verspätungen bei Ankunft und Abflug (arr_delay und dep_delay) miteinander verrechnet werden. Gestaltet den Code so, dass ihr auch bei späteren Aufgaben auf die Spalte zugreifen könntet.\nVerwendet die Pipe und die euch bekannten dplyr-Befehle.\n\n# Hier Code zur Lösung eintragen\n\n\n\nAufgabe 3 [1 Punkt]\nSortiert flights so, dass ihr einmal die geringste und einmal die größte Verspätung bei Ankunftszeit entnehmen könnt.\n\n# Hier Code zur Lösung eintragen\n\n\n\nAufgabe 4 [1 Punkt]\nWie interpretiert ihr die Ergebnisse aus Aufgabe 3?\nAntwort hier:\n\n\nAufgabe 5 [1 Punkt]\nFür welche Variablen eignet sich group_by typischerweise bei einer “klassischen” Komedia-Studie; wofür hättet ihr sie beispielsweise bei eurer Bachelorarbeit verwenden können?\nAntwort hier:\n\n\nAufgabe 6 [1 Punkt]\nErstellt mittels summarize eine Tabelle, in der für jeden Monat der die durchschnittliche Distanz (Spalte distance) der Flüge und ihre Standardabweichungen angegeben werden.\nVerwendet die Pipe und die euch bekannten dplyr-Befehle.\n\n# Hier Code als Antwort eintragen\n\n\n\nAufgabe 7 [1 Punkt]\nVerwendet die in Aufgabe 6 erstellte Tabelle, um mit ggplot und geom_point einen Plot zu erstellen, in dem auf der x-Achse die Monate und auf der y-Achse die durchschnittliche Distanz zu sehen ist.\n\n# Hier Code als Antwort eintragen\n\n\n\nAufgabe 8 [1 Punkt]\n[für Experten]\nFügt dem Plot aus Aufgabe 7 außerdem Standardabweichungen mithilfe von geom_errorbar() hinzu. (Hinweis: Alles, was ihr für den Input bei geom_errobar() benötigt, befindet sich bereits in der Tabelle von Aufgabe 6)\n\n# Hier Code als Antwort eintragen\n\n\n\nAufgabe 9 [1 Punkt]\nGestaltet den Plot aus Aufgabe 7 oder 8 ästhetischer, indem ihr\n\neinen Titel hinzufügt\ndie Farbe der Punkte zu eurer Lieblingsfarbe verändert\ndie Achsen beschriftet\n\n\n# Hier Code als Antwort einfügen\n\n\n\nAufgabe 10 [1 Punkt]\nRecherchiert geom_jitter und beschreibt in eigenen Worten, was die Funktion macht und in welchen Fällen sie besonders nützlich ist.\nAntwort hier:"
  },
  {
    "objectID": "assignments/assignment6.html",
    "href": "assignments/assignment6.html",
    "title": "Hausaufgabe 6",
    "section": "",
    "text": "Falls ihr an einer Stelle mal nicht weiterkommen solltet, sodass die folgenden Aufgaben nicht mehr lösbar sind, meldet euch bitte bei uns.\n\n\nFür jede Aufgabe bzw. Teilaufgabe gibt es Punkte - diese sind entsprechend kenntlich gemacht. Insgesamt gibt es für jedes Aufgabenblatt 10 Punkte. Aufgaben, die als [Bonus] markiert sind, geben keine Punkte.\n\n\n\nManche Aufgaben erfordern Transferwissen, welches ihr im heutigen Seminar so nicht direkt gelernt hat. Diese Aufgaben sind als [Für Experten] markiert - hier berücksichtigen wir nicht nur die Lösung, sondern schon eure Lösungsversuche (falls ihr auf keine Lösung kommt).\n\n\n\nUm eure Hausaufgabe abzugeben, ladet bitte die .qmd Datei im Moodle hoch. Etwaige anderer Dateien (assets-Ordner usw.) müsst ihr nicht hochladen. Bitte benennt die Dateien entsprechend (bspw. hausaufgabe2_simon_krukowski.qmd, und schreibt hier in der Datei oben bei author euren Namen rein.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")"
  },
  {
    "objectID": "assignments/assignment6.html#aufgabe-1-2-punkte",
    "href": "assignments/assignment6.html#aufgabe-1-2-punkte",
    "title": "Hausaufgabe 6",
    "section": "Aufgabe 1 [2 Punkte]",
    "text": "Aufgabe 1 [2 Punkte]\nZunächst interessieren wir uns für die Verspätungen. Diese habt ihr bereits in der Seminarstunde als late berechnet, aber hier nochmal der Code (führt ihn am besten zur Reproduzierbarkeit aus):\n\ndataset &lt;- dataset %&gt;% \n              mutate(departure = dmy_hms(departure),\n                     scheduled_departure = dmy_hms(scheduled_departure),\n                     arrival = dmy_hms(arrival),\n                     scheduled_arrival = dmy_hms(scheduled_arrival),\n                     late = difftime(arrival,scheduled_arrival,units = \"mins\"))\n\nFiltert nun late so, dass alle Werte, die Ausreißer sind (oder mehr als 3 SDs abweichen), für nachfolgende Berechnungen herausgefiltert werden:\n\ndataset &lt;- dataset %&gt;% \n  mutate(late_scaled = scale(late)) %&gt;% \n  filter(late_scaled &lt; 3 & late_scaled &gt; -3)\n\nWarning: Using one column matrices in `filter()` was deprecated in dplyr 1.1.0.\nℹ Please use one dimensional logical vectors instead."
  },
  {
    "objectID": "assignments/assignment6.html#aufgabe-2-4-punkte",
    "href": "assignments/assignment6.html#aufgabe-2-4-punkte",
    "title": "Hausaufgabe 6",
    "section": "Aufgabe 2 [4 Punkte]",
    "text": "Aufgabe 2 [4 Punkte]\nWir wollen nun wissen, wieviel Verspätung (late) es im Mittel pro Airline (carrier) gibt. Berechnet das entsprechend und beantwortet folgende Frage:\n\nWelche Airline hat die meiste, welche die wenigste Verspätung?\n\n\ndataset %&gt;% \n  group_by(carrier) %&gt;% \n  summarise(mean = mean(late, na.rm = T)) %&gt;% \n  arrange(mean)\n\n# A tibble: 15 × 2\n   carrier mean           \n   &lt;chr&gt;   &lt;drtn&gt;         \n 1 VX      -61.416667 mins\n 2 B6      -43.730971 mins\n 3 F9      -26.727273 mins\n 4 9E      -19.323108 mins\n 5 FL      -15.906977 mins\n 6 EV      -14.757495 mins\n 7 UA      -10.901018 mins\n 8 AA      -10.011259 mins\n 9 AS       -7.300000 mins\n10 DL       -6.976412 mins\n11 US       -2.576512 mins\n12 MQ        1.391188 mins\n13 WN        1.814016 mins\n14 HA       10.727273 mins\n15 YV       14.500000 mins\n\n# oder so:\n\ndataset %&gt;% \n  group_by(carrier) %&gt;% \n  summarise(mean = mean(late, na.rm = T)) %&gt;% \n  slice(which.min(mean),which.max(mean))\n\n# A tibble: 2 × 2\n  carrier mean          \n  &lt;chr&gt;   &lt;drtn&gt;        \n1 VX      -61.41667 mins\n2 YV       14.50000 mins\n\n\nAntwort: VX hat am wenigsten Verspätung, YV am meisten.\nWeiterhin interessiert uns nun nicht wieviel, sondern ob ein Flug Verspätung hat. Das könnt ihr mittlerweile auch berechnen. Meistens sind Verspätungen von bis zu 30 Minuten kein Problem, weshalb wir diese nicht als Verspätung bezeichnen wollen.\nBerechnet nun also die Variable delayed, welche die Ausprägungen TRUE/FALSE hat, je nachdem, ob der einzelne Flug über 30 Minuten Verspätung hat und speichert das ganze in dataset.\n\ndataset %&gt;% \n mutate(delayed = case_when(late &gt; 30 ~ TRUE,\n                            late &lt; 30 ~ FALSE)) -&gt; dataset\n\n\nWelche Airline hat nun nicht im Mittel die meiste, sondern die häufigsten (und wenigsten) Verspätungen über 30 Minuten? Berechnet das.\n\n\ndataset %&gt;% \n  group_by(delayed, carrier) %&gt;% \n  filter(!is.na(delayed)) %&gt;% \n  summarise(sum = n()) %&gt;% \n  arrange(desc(sum))\n\n`summarise()` has grouped output by 'delayed'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 30 × 3\n# Groups:   delayed [2]\n   delayed carrier   sum\n   &lt;lgl&gt;   &lt;chr&gt;   &lt;int&gt;\n 1 FALSE   UA       1529\n 2 FALSE   B6       1291\n 3 FALSE   DL       1242\n 4 FALSE   EV       1202\n 5 FALSE   AA        856\n 6 FALSE   MQ        616\n 7 FALSE   US        502\n 8 FALSE   9E        405\n 9 FALSE   WN        308\n10 TRUE    EV        289\n# ℹ 20 more rows\n\n\nAntwort: UA am meisten, YV am wenigsten.\n\n[Bonus]\n\nWas könnte man an der obigen Berechnung kritisieren?"
  },
  {
    "objectID": "assignments/assignment6.html#aufgabe-3-2-punkte",
    "href": "assignments/assignment6.html#aufgabe-3-2-punkte",
    "title": "Hausaufgabe 6",
    "section": "Aufgabe 3 [2 Punkte]",
    "text": "Aufgabe 3 [2 Punkte]\nDer Datensatz beschreibt alle Abflüge von New Yorker Flughäfen im Jahr 2013 (von allen drei Flughäfen, siehe Variable origin). Wir sind nun auf der Suche nach einem Büro in der Nähe eines Flughafens, an dem wir tagsüber gut arbeiten können, d.h., der Geräuschpegel gering ist. Je mehr Abflüge es gibt, desto höher der Geräuschpegel.\nZieht also entsprechend die Tageszeit aus den Abflugszeiten (hint: das hms Package hilft), und plottet die Abflugszeiten facettiert (facet_wrap) nach Ursprungsflughafen. Dazu eignet sich bspw. geom_density(). Am Ende solltet ihr ein Plot haben, was aus drei Kurven besteht, und auf der X-Achse die Tageszeit zeigt.\n\ndataset %&gt;% \n  mutate(departure_time = hms::as_hms(departure)) %&gt;% \n  ggplot(aes(x=departure_time,color=origin))+\n  geom_density()+\n  facet_grid(origin~.)+\n  theme_classic()+\n  scale_color_manual(values=palette2)"
  },
  {
    "objectID": "assignments/assignment6.html#aufgabe-4-2-punkte",
    "href": "assignments/assignment6.html#aufgabe-4-2-punkte",
    "title": "Hausaufgabe 6",
    "section": "Aufgabe 4 [2 Punkte]",
    "text": "Aufgabe 4 [2 Punkte]\nEin Bekannter möchte aus dataset nur die Flüge herausfiltern, die an die wichtigsten Flughäfen Kaliforniens gingen. Dazu hat er eine Liste der Flughafen-Tags erstellt und filtert die Daten folgendermaßen:\n\nap.cali &lt;- c(\"ACV\", \"BFL\", \"BUR\", \"FAT\", \"LGB\", \"LAX\", \"MRY\", \"OAK\", \"ONT\", \"SNA\", \"PSP\", \"RDD\", \"SMF\", \"SAN\", \"SFO\", \"SJC\", \"SBP\", \"SBA\", \"SMX\", \"STS\", \"SCK\")\n\ndataset %&gt;% \n  filter(dest == ap.cali[1] | dest == ap.cali[2] | dest == ap.cali[3] | dest == ap.cali[4] | dest == ap.cali[5] | dest == ap.cali[6] | dest == ap.cali[7] | dest == ap.cali[8] | dest == ap.cali[9] | dest == ap.cali[10] | dest == ap.cali[11] | dest == ap.cali[12] | dest == ap.cali[13] | dest == ap.cali[14] | dest == ap.cali[15] | dest == ap.cali[16] | dest == ap.cali[17] | dest == ap.cali[18] | dest == ap.cali[19] | dest == ap.cali[20] | dest == ap.cali[21])\n\n        X carrier flight tailnum origin dest distance           departure\n1      13      VX    407  N626VA    JFK  LAX     2475 2013-06-30 09:40:00\n2      15      UA   1165  N74856    EWR  LAX     2454 2013-04-22 18:56:00\n3      19      AA     59  N393AA    JFK  SFO     2586 2013-12-26 08:00:00\n4      38      UA   1165  N24211    EWR  LAX     2454 2013-11-26 18:15:00\n5      49      AA    185  N338AA    JFK  LAX     2475 2013-10-22 21:34:00\n6      50      AA    181  N328AA    JFK  LAX     2475 2013-08-23 17:08:00\n7      53      B6    671  N652JB    JFK  LAX     2475 2013-01-07 07:04:00\n8      78      AA     21  N324AA    JFK  LAX     2475 2013-03-06 19:14:00\n9      87      UA    397  N510UA    JFK  SFO     2586 2013-01-15 08:01:00\n10    107      UA    257  N595UA    JFK  SFO     2586 2013-09-27 15:20:00\n11    144      AA    181  N335AA    JFK  LAX     2475 2013-05-31 17:01:00\n12    145      UA    497  N833UA    EWR  SFO     2565 2013-12-23 08:06:00\n13    148      UA    703  N554UA    JFK  LAX     2475 2013-09-05 11:34:00\n14    163      UA    799  N517UA    JFK  SFO     2586 2013-01-24 07:13:00\n15    183      B6    323  N570JB    JFK  LAX     2475 2013-12-03 12:08:00\n16    205      UA    303  N532UA    JFK  SFO     2586 2013-01-01 06:11:00\n17    212      UA    535  N505UA    JFK  LAX     2475 2013-04-22 19:56:00\n18    220      UA    421  N420UA    EWR  SFO     2565 2013-04-29 05:56:00\n19    238      B6    185  N646JB    JFK  SAN     2446 2013-02-10 17:19:00\n20    241      DL    763  N194DN    JFK  LAX     2475 2013-08-02 07:00:00\n21    252      AA     67  N3DVAA    JFK  SAN     2446 2013-10-21 17:36:00\n22    264      B6    209  N586JB    JFK  LGB     2465 2013-05-10 13:55:00\n23    280      DL    409  N703TW    JFK  SFO     2586 2013-11-22 16:00:00\n24    288      DL    503  N3769L    JFK  SAN     2446 2013-05-07 17:23:00\n25    294      AA     19  N328AA    JFK  LAX     2475 2013-01-01 10:26:00\n26    301      UA    806  N586UA    EWR  LAX     2454 2013-07-09 10:33:00\n27    302      UA    768  N556UA    EWR  LAX     2454 2013-04-11 19:44:00\n28    303      UA   1201  N18112    JFK  LAX     2475 2013-05-19 08:37:00\n29    304      UA   1626  N16709    EWR  SAN     2425 2013-07-03 08:59:00\n30    307      DL    422  N705TW    JFK  LAX     2475 2013-11-02 08:53:00\n31    336      UA   1626  N28457    EWR  SAN     2425 2013-10-19 18:04:00\n32    342      AA    117  N327AA    JFK  LAX     2475 2013-09-06 13:42:00\n33    347      DL   1088   N3753    JFK  SAN     2446 2013-02-27 17:14:00\n34    357      UA   1480  N73270    EWR  SFO     2565 2013-12-27 10:12:00\n35    369      UA    257  N546UA    JFK  SFO     2586 2013-11-14 15:31:00\n36    373      B6     89  N583JB    JFK  SAN     2446 2013-11-17 18:00:00\n37    384      DL    269  N624AG    JFK  SFO     2586 2013-10-04 06:54:00\n38    388      B6    161  N644JB    JFK  SMF     2521 2013-08-18 19:38:00\n39    400      UA    312  N454UA    EWR  SAN     2425 2013-12-11 21:04:00\n40    402      AA    185  N338AA    JFK  LAX     2475 2013-11-01 22:44:00\n41    403      DL   1565  N722TW    JFK  SFO     2586 2013-05-02 13:56:00\n42    406      B6    673  N705JB    JFK  LAX     2475 2013-04-19 11:06:00\n43    413      UA     73  N87507    EWR  SFO     2565 2013-08-28 09:22:00\n44    416      DL    409  N703TW    JFK  SFO     2586 2013-12-20 16:45:00\n45    455      UA   1651  N73275    EWR  SFO     2565 2013-10-04 19:55:00\n46    504      B6    359  N583JB    JFK  BUR     2465 2013-02-23 17:31:00\n47    524      DL   1765  N727TW    JFK  SFO     2586 2013-01-06 10:00:00\n48    534      DL    423  N722TW    JFK  LAX     2475 2013-12-09 11:58:00\n49    536      AA     67  N3JKAA    JFK  SAN     2446 2013-10-18 17:48:00\n50    548      UA   1479  N76503    EWR  LAX     2454 2013-09-22 10:41:00\n51    556      AA    185  N324AA    JFK  LAX     2475 2013-07-01 00:44:00\n52    566      UA    535  N560UA    JFK  LAX     2475 2013-09-26 17:58:00\n53    571      B6    167  N561JB    JFK  OAK     2576 2013-06-30 17:49:00\n54    573      UA    212  N592UA    EWR  SFO     2565 2013-06-07 18:39:00\n55    575      UA    295  N586UA    EWR  SNA     2434 2013-07-19 07:15:00\n56    596      B6    173  N552JB    JFK  SJC     2569 2013-05-28 18:30:00\n57    601      AA    119  N3HYAA    EWR  LAX     2454 2013-11-18 18:46:00\n58    611      UA   1289  N77520    EWR  SFO     2565 2013-10-14 08:32:00\n59    618      DL   1465  N624AG    JFK  SFO     2586 2013-06-29 19:13:00\n60    633      UA   1037  N37466    EWR  LAX     2454 2013-08-21 20:57:00\n61    654      UA   1287  N79402    EWR  SFO     2565 2013-09-13 09:15:00\n62    660      DL     17  N192DN    JFK  LAX     2475 2013-05-13 18:22:00\n63    675      AA     19  N339AA    JFK  LAX     2475 2013-09-10 10:24:00\n64    682      AA      3  N328AA    JFK  LAX     2475 2013-05-20 11:58:00\n65    691      UA   1621  N34282    EWR  SFO     2565 2013-07-25 14:31:00\n66    711      B6    645  N662JB    JFK  SFO     2586 2013-04-18 20:14:00\n67    749      VX    165  N621VA    EWR  LAX     2454 2013-07-26 13:00:00\n68    757      UA    397  N518UA    JFK  SFO     2586 2013-05-18 07:52:00\n69    760      DL    120  N710TW    JFK  LAX     2475 2013-02-10 08:57:00\n70    778      UA   1496  N14704    EWR  SNA     2434 2013-06-27 07:04:00\n71    802      UA   1047  N78509    EWR  SNA     2434 2013-08-11 19:29:00\n72    812      UA    443  N508UA    JFK  LAX     2475 2013-07-26 08:29:00\n73    821      UA    205  N839UA    EWR  SFO     2565 2013-04-07 06:56:00\n74    830      UA   1600  N14118    EWR  LAX     2454 2013-09-28 15:18:00\n75    836      UA    162  N37287    EWR  SFO     2565 2013-03-26 15:02:00\n76    853      DL   1865  N723TW    JFK  SFO     2586 2013-05-29 07:00:00\n77    854      UA   1141  N32404    EWR  SFO     2565 2013-07-28 19:59:00\n78    862      VX    169  N524VA    EWR  LAX     2454 2013-05-13 19:00:00\n79    886      UA    297  N834UA    EWR  LAX     2454 2013-12-11 09:58:00\n80    890      AA    177  N5DDAA    JFK  SFO     2586 2013-10-30 18:50:00\n81    902      UA   1556  N53442    EWR  SFO     2565 2013-08-02 13:44:00\n82    923      DL    430  N624AG    JFK  SFO     2586 2013-12-02 06:59:00\n83    924      DL    427  N1200K    JFK  LAX     2475 2013-10-27 21:07:00\n84    925      UA    797  N595UA    JFK  LAX     2475 2013-09-04 06:34:00\n85    930      AA     85  N357AA    JFK  SFO     2586 2013-03-02 15:25:00\n86    931      VX     11  N844VA    JFK  SFO     2586 2013-01-10 07:27:00\n87    934      VX     11  N361VA    JFK  SFO     2586 2013-10-22 07:30:00\n88    936      UA   1663  N77525    EWR  SFO     2565 2013-02-03 08:23:00\n89    938      UA    821  N555UA    JFK  SFO     2586 2013-10-17 06:58:00\n90    941      VX    399  N631VA    JFK  LAX     2475 2013-08-23 07:16:00\n91    980      AA    145  N3CNAA    JFK  SAN     2446 2013-01-13 17:26:00\n92   1028      UA   1593  N37427    EWR  SFO     2565 2013-08-08 13:47:00\n93   1044      B6    167  N658JB    JFK  OAK     2576 2013-09-23 17:06:00\n94   1053      DL    763  N717TW    JFK  LAX     2475 2013-01-25 06:54:00\n95   1094      UA   1493  N76514    EWR  LAX     2454 2013-09-19 14:29:00\n96   1095      B6    641  N768JB    JFK  SFO     2586 2013-04-09 10:32:00\n97   1098      AA     33  N319AA    JFK  LAX     2475 2013-03-08 08:18:00\n98   1102      UA   1668  N36207    EWR  SFO     2565 2013-05-06 07:21:00\n99   1104      UA   1600  N17139    EWR  LAX     2454 2013-05-02 15:15:00\n100  1108      AA      3  N323AA    JFK  LAX     2475 2013-06-30 11:51:00\n101  1116      UA    593  N581UA    EWR  SNA     2434 2013-02-02 18:12:00\n102  1117      UA    375  N804UA    EWR  LAX     2454 2013-11-09 16:31:00\n103  1136      AA    185  N332AA    JFK  LAX     2475 2013-08-18 21:46:00\n104  1143      B6    161  N796JB    JFK  SMF     2521 2013-07-15 19:35:00\n105  1146      UA    389  N595UA    JFK  SFO     2586 2013-08-28 18:53:00\n106  1151      UA    512  N587UA    JFK  SFO     2586 2013-11-26 17:03:00\n107  1158      UA   1284  N17128    EWR  SFO     2565 2013-01-22 17:08:00\n108  1160      UA   1663  N35204    EWR  SFO     2565 2013-11-11 14:08:00\n109  1161      UA    421  N823UA    EWR  SFO     2565 2013-07-07 07:36:00\n110  1170      UA   1719  N21723    EWR  SNA     2434 2013-04-12 07:07:00\n111  1171      UA   1626  N87527    EWR  SAN     2425 2013-05-13 09:13:00\n112  1177      UA    387  N844UA    EWR  LAX     2454 2013-03-23 06:37:00\n113  1196      UA   1526  N37252    EWR  LAX     2454 2013-10-30 18:51:00\n114  1203      UA   1083  N34131    EWR  LAX     2454 2013-02-17 13:24:00\n115  1206      DL    863  N717TW    JFK  LAX     2475 2013-03-05 11:53:00\n116  1209      UA   1072  N37437    EWR  SFO     2565 2013-08-16 21:40:00\n117  1213      UA    421  N507UA    EWR  SFO     2565 2013-08-03 16:00:00\n118  1218      DL   2363  N705TW    JFK  LAX     2475 2013-05-16 20:57:00\n119  1237      VX    169  N526VA    EWR  LAX     2454 2013-06-17 19:02:00\n120  1239      UA    758  N541UA    EWR  SFO     2565 2013-06-01 11:45:00\n121  1249      AA    117  N339AA    JFK  LAX     2475 2013-10-11 13:39:00\n122  1262      AA      1  N327AA    JFK  LAX     2475 2013-12-28 08:52:00\n123  1283      DL    426  N155DL    JFK  LAX     2475 2013-12-06 18:15:00\n124  1285      UA   1665  N76508    EWR  LAX     2454 2013-04-24 07:03:00\n125  1287      VX    193  N622VA    EWR  SFO     2565 2013-05-06 17:32:00\n126  1289      UA    346  N840UA    EWR  LAX     2454 2013-05-14 18:26:00\n127  1292      VX    187  N631VA    EWR  SFO     2565 2013-09-09 10:22:00\n128  1300      AA    119  N3EJAA    EWR  LAX     2454 2013-06-04 18:25:00\n129  1317      UA    445  N585UA    EWR  LAX     2454 2013-08-06 11:00:00\n130  1342      VX     29  N637VA    JFK  SFO     2586 2013-09-19 19:19:00\n131  1353      DL   1765   N704X    JFK  SFO     2586 2013-01-28 09:53:00\n132  1386      B6    415  N641JB    JFK  SFO     2586 2013-07-10 01:33:00\n133  1394      VX    193  N529VA    EWR  SFO     2565 2013-04-14 21:03:00\n134  1430      DL    426  N1200K    JFK  LAX     2475 2013-11-06 18:12:00\n135  1442      UA    580  N554UA    JFK  SFO     2586 2013-06-20 11:48:00\n136  1455      UA   1574  N76517    EWR  SFO     2565 2013-08-01 05:54:00\n137  1459      UA    434  N560UA    JFK  SFO     2586 2013-05-24 14:29:00\n138  1461      UA   1644  N27733    EWR  SNA     2434 2013-05-24 12:15:00\n139  1463      AA      1  N320AA    JFK  LAX     2475 2013-06-17 09:11:00\n140  1470      B6    223  N618JB    JFK  LAX     2475 2013-07-08 09:32:00\n141  1476      UA   1735  N16217    EWR  LAX     2454 2013-08-20 10:08:00\n142  1478      AA     67  N3KJAA    JFK  SAN     2446 2013-09-07 17:42:00\n143  1484      UA   1626  N37287    EWR  SAN     2425 2013-02-10 08:38:00\n144  1485      UA    571  N530UA    EWR  LAX     2454 2013-12-19 18:02:00\n145  1489      B6    677  N807JB    JFK  LAX     2475 2013-02-20 21:11:00\n146  1492      AA    179  N338AA    JFK  SFO     2586 2013-05-25 09:24:00\n147  1493      B6    423  N646JB    JFK  LAX     2475 2013-07-15 16:52:00\n148  1497      B6    213  N558JB    JFK  LGB     2465 2013-07-11 13:45:00\n149  1498      AA     85  N342AA    JFK  SFO     2586 2013-01-01 15:39:00\n150  1518      B6    181  N646JB    JFK  SAN     2446 2013-03-25 08:28:00\n151  1519      UA    642  N505UA    JFK  SFO     2586 2013-01-10 10:56:00\n152  1530      B6    643  N821JB    JFK  SFO     2586 2013-03-28 07:30:00\n153  1543      UA    512  N508UA    JFK  SFO     2586 2013-08-14 16:54:00\n154  1544      VX    399  N642VA    JFK  LAX     2475 2013-07-24 07:10:00\n155  1546      UA   1532  N35407    EWR  SFO     2565 2013-06-07 19:47:00\n156  1551      UA   1626  N76523    EWR  SAN     2425 2013-05-20 09:09:00\n157  1562      UA    112  N58101    JFK  LAX     2475 2013-02-08 08:39:00\n158  1579      UA    272  N560UA    JFK  SFO     2586 2013-01-30 18:28:00\n159  1580      VX     23  N630VA    JFK  SFO     2586 2013-08-25 10:25:00\n160  1584      AA    185  N319AA    JFK  LAX     2475 2013-03-30 21:28:00\n161  1585      UA    471  N520UA    EWR  SFO     2565 2013-11-19 09:51:00\n162  1591      AA     85  N382AA    JFK  SFO     2586 2013-08-12 15:31:00\n163  1596      AA    145  N3CNAA    JFK  SAN     2446 2013-08-30 17:58:00\n164  1634      VX    411  N633VA    JFK  LAX     2475 2013-03-27 13:23:00\n165  1638      AA      1  N328AA    JFK  LAX     2475 2013-04-09 08:52:00\n166  1645      DL    963  N721TW    JFK  LAX     2475 2013-01-21 14:59:00\n167  1661      AA      1  N328AA    JFK  LAX     2475 2013-06-01 09:00:00\n168  1665      VX    183  N842VA    EWR  SFO     2565 2013-09-13 07:20:00\n169  1672      UA   1030  N14121    JFK  LAX     2475 2013-02-11 06:17:00\n170  1674      UA    703  N560UA    JFK  LAX     2475 2013-10-03 11:21:00\n171  1677      UA    397  N525UA    JFK  SFO     2586 2013-02-24 08:01:00\n172  1679      DL   1565  N703TW    JFK  SFO     2586 2013-09-27 12:58:00\n173  1683      AA    179  N324AA    JFK  SFO     2586 2013-07-30 10:25:00\n174  1688      B6    359  N789JB    JFK  BUR     2465 2013-08-11 19:05:00\n175  1718      UA   1294  N37419    EWR  SFO     2565 2013-11-04 13:12:00\n176  1724      VX    413  N628VA    JFK  LAX     2475 2013-10-07 17:30:00\n177  1728      UA    389  N595UA    JFK  SFO     2586 2013-09-20 19:01:00\n178  1732      VX    165  N621VA    EWR  LAX     2454 2013-09-14 12:56:00\n179  1740      UA    992  N462UA    EWR  LAX     2454 2013-04-15 17:04:00\n180  1756      UA    535  N595UA    JFK  LAX     2475 2013-07-25 18:37:00\n181  1787      VX     11  N837VA    JFK  SFO     2586 2013-11-17 07:29:00\n182  1803      UA    997  N563UA    EWR  LAX     2454 2013-12-22 22:00:00\n183  1804      VX    183  N855VA    EWR  SFO     2565 2013-08-23 07:20:00\n184  1806      UA   1139  N73283    EWR  LAX     2454 2013-01-18 18:46:00\n185  1811      UA   1124  N21723    EWR  SNA     2434 2013-08-25 18:37:00\n186  1814      AA    117  N336AA    JFK  LAX     2475 2013-03-07 13:42:00\n187  1819      VX    411  N642VA    JFK  LAX     2475 2013-11-20 12:55:00\n188  1881      VX    415  N637VA    JFK  LAX     2475 2013-04-19 22:04:00\n189  1903      B6    161  N587JB    JFK  SMF     2521 2013-11-07 19:55:00\n190  1911      UA   1152  N33286    EWR  LAX     2454 2013-08-21 14:28:00\n191  1913      B6    673  N625JB    JFK  LAX     2475 2013-02-16 11:34:00\n192  1914      UA    421  N855UA    EWR  SFO     2565 2013-04-22 05:59:00\n193  1926      VX    413  N625VA    JFK  LAX     2475 2013-03-02 17:02:00\n194  1927      AA    117  N332AA    JFK  LAX     2475 2013-05-09 13:47:00\n195  1947      UA   1455  N76529    EWR  LAX     2454 2013-12-08 07:28:00\n196  1951      UA   1199  N14106    EWR  LAX     2454 2013-11-02 13:49:00\n197  1962      UA    362  N516UA    EWR  SNA     2434 2013-12-26 19:03:00\n198  1969      DL   1865  N727TW    JFK  SFO     2586 2013-05-09 06:53:00\n199  1975      VX     11  N840VA    JFK  SFO     2586 2013-05-21 07:35:00\n200  1977      AA    177  N328AA    JFK  SFO     2586 2013-07-21 18:17:00\n201  1987      UA   1284  N64809    EWR  SFO     2565 2013-12-29 17:17:00\n202  2018      UA   1600  N17128    EWR  LAX     2454 2013-12-21 15:47:00\n203  2037      UA   1223  N57864    EWR  LAX     2454 2013-04-01 08:29:00\n204  2048      UA    263  N526UA    EWR  SAN     2425 2013-09-12 20:19:00\n205  2054      VX     29  N640VA    JFK  SFO     2586 2013-05-14 18:52:00\n206  2064      AA     59  N335AA    JFK  SFO     2586 2013-06-28 07:54:00\n207  2099      B6    189  N615JB    JFK  SAN     2446 2013-12-16 09:16:00\n208  2115      UA    512  N557UA    JFK  SFO     2586 2013-01-20 17:17:00\n209  2121      UA    439  N832UA    EWR  SAN     2425 2013-06-07 14:55:00\n210  2125      B6    173  N644JB    JFK  SJC     2569 2013-02-28 18:10:00\n211  2126      VX     25  N847VA    JFK  SFO     2586 2013-01-03 11:53:00\n212  2132      UA    512  N557UA    JFK  SFO     2586 2013-06-12 17:16:00\n213  2135      DL   2363  N199DN    JFK  LAX     2475 2013-08-08 21:29:00\n214  2139      B6     15  N712JB    JFK  SFO     2586 2013-09-28 08:48:00\n215  2145      UA   1665  N37474    EWR  LAX     2454 2013-06-19 07:32:00\n216  2156      UA   1266  N76529    EWR  SFO     2565 2013-05-01 12:18:00\n217  2165      B6    213  N643JB    JFK  LGB     2465 2013-08-09 13:35:00\n218  2181      UA   1150  N39423    EWR  SFO     2565 2013-07-18 10:49:00\n219  2185      UA    512  N512UA    JFK  SFO     2586 2013-02-23 17:22:00\n220  2192      UA    223  N818UA    EWR  SAN     2425 2013-11-26 13:59:00\n221  2211      DL   1765  N710TW    JFK  SFO     2586 2013-02-14 09:55:00\n222  2219      VX     29  N638VA    JFK  SFO     2586 2013-10-07 20:34:00\n223  2222      UA   1651  N37273    EWR  SFO     2565 2013-10-25 20:02:00\n224  2223      DL   1465   N704X    JFK  SFO     2586 2013-02-04 19:00:00\n225  2231      AA    117  N327AA    JFK  LAX     2475 2013-05-18 13:40:00\n226  2232      UA    257  N557UA    JFK  SFO     2586 2013-05-05 12:25:00\n227  2234      UA    797  N525UA    JFK  LAX     2475 2013-04-06 06:23:00\n228  2240      UA    132  N17122    JFK  LAX     2475 2013-03-22 15:42:00\n229  2243      AA      3  N617AA    JFK  LAX     2475 2013-12-04 11:59:00\n230  2251      DL    503  N3744F    JFK  SAN     2446 2013-04-16 17:11:00\n231  2254      UA    703  N595UA    JFK  LAX     2475 2013-08-24 11:07:00\n232  2258      DL    863   N704X    JFK  LAX     2475 2013-09-22 11:53:00\n233  2259      UA    257  N595UA    JFK  SFO     2586 2013-12-10 15:29:00\n234  2265      UA    771  N525UA    JFK  LAX     2475 2013-07-23 20:59:00\n235  2266      UA    743  N449UA    EWR  LAX     2454 2013-08-17 09:36:00\n236  2272      DL    432  N710TW    JFK  SFO     2586 2013-10-28 12:52:00\n237  2276      VX    169  N530VA    EWR  LAX     2454 2013-08-05 18:47:00\n238  2288      UA    389  N512UA    JFK  SFO     2586 2013-03-27 18:42:00\n239  2295      B6    171  N746JB    JFK  SMF     2521 2013-06-19 20:04:00\n240  2343      AA    181  N327AA    JFK  LAX     2475 2013-11-24 16:42:00\n241  2345      DL    863  N721TW    JFK  LAX     2475 2013-09-24 11:53:00\n242  2374      VX     11  N843VA    JFK  SFO     2586 2013-05-25 07:34:00\n243  2375      UA    257  N518UA    JFK  SFO     2586 2013-10-31 15:21:00\n244  2406      B6    209  N633JB    JFK  LGB     2465 2013-01-06 13:10:00\n245  2413      UA   1651  N37468    EWR  SFO     2565 2013-11-11 21:03:00\n246  2436      AA     33  N328AA    JFK  LAX     2475 2013-02-07 07:27:00\n247  2440      B6    623  N531JB    JFK  LAX     2475 2013-08-05 23:13:00\n248  2443      UA    592  N528UA    EWR  SAN     2425 2013-05-18 19:09:00\n249  2469      B6    675  N632JB    JFK  LAX     2475 2013-06-09 16:29:00\n250  2472      B6    679  N806JB    JFK  LAX     2475 2013-06-02 09:25:00\n251  2487      AA    177  N338AA    JFK  SFO     2586 2013-01-29 17:42:00\n252  2513      B6    423  N584JB    JFK  LAX     2475 2013-09-09 16:37:00\n253  2518      UA   1232  N37437    EWR  LAX     2454 2013-07-03 09:51:00\n254  2551      DL     95  N624AG    JFK  LAX     2475 2013-09-16 16:55:00\n255  2598      B6    415  N587JB    JFK  SFO     2586 2013-07-20 18:00:00\n256  2602      AA      3  N336AA    JFK  LAX     2475 2013-09-21 13:02:00\n257  2614      B6    171  N705JB    JFK  SMF     2521 2013-05-29 19:28:00\n258  2620      VX     23  N849VA    JFK  SFO     2586 2013-08-11 10:32:00\n259  2628      UA    132  N17122    JFK  LAX     2475 2013-03-21 15:42:00\n260  2629      UA    766  N597UA    JFK  SFO     2586 2013-12-19 11:56:00\n261  2634      UA    797  N597UA    JFK  LAX     2475 2013-09-06 06:22:00\n262  2644      UA   1175  N17139    JFK  LAX     2475 2013-06-06 05:59:00\n263  2646      UA    535  N518UA    JFK  LAX     2475 2013-05-14 17:53:00\n264  2652      DL   2065  N723TW    JFK  SFO     2586 2013-05-22 15:58:00\n265  2655      VX    169  N623VA    EWR  LAX     2454 2013-09-11 22:03:00\n266  2662      UA    434  N818UA    EWR  SNA     2434 2013-10-15 09:01:00\n267  2666      UA   1600  N17104    EWR  LAX     2454 2013-05-26 15:20:00\n268  2674      UA    161  N33103    JFK  LAX     2475 2013-01-17 16:00:00\n269  2678      DL   1765  N705TW    JFK  SFO     2586 2013-05-19 09:57:00\n270  2692      UA   1281  N87507    EWR  SFO     2565 2013-05-14 09:25:00\n271  2695      UA    504  N560UA    JFK  SFO     2586 2013-11-13 08:58:00\n272  2699      B6    641  N805JB    JFK  SFO     2586 2013-02-28 10:44:00\n273  2700      AA    179  N319AA    JFK  SFO     2586 2013-07-01 10:24:00\n274  2702      UA    212  N536UA    EWR  SFO     2565 2013-07-26 18:42:00\n275  2703      VX    415  N621VA    JFK  LAX     2475 2013-08-09 22:09:00\n276  2715      UA    642  N597UA    JFK  SFO     2586 2013-09-07 09:55:00\n277  2726      UA    466  N570UA    EWR  LAX     2454 2013-05-01 16:28:00\n278  2735      AA    133  N319AA    JFK  LAX     2475 2013-11-23 15:40:00\n279  2759      UA    220  N449UA    EWR  SFO     2565 2013-04-12 09:57:00\n280  2774      UA   1281  N13248    EWR  SFO     2565 2013-05-22 09:21:00\n281  2792      UA   1127  N18119    EWR  SFO     2565 2013-04-09 18:33:00\n282  2797      UA   1289  N38473    EWR  SFO     2565 2013-11-28 10:00:00\n283  2799      VX     23  N847VA    JFK  SFO     2586 2013-03-22 10:46:00\n284  2806      DL   1465  N727TW    JFK  SFO     2586 2013-05-07 18:59:00\n285  2813      VX     23  N635VA    JFK  SFO     2586 2013-06-02 10:40:00\n286  2815      B6     91  N821JB    JFK  OAK     2576 2013-05-24 17:05:00\n287  2816      UA    204  N830UA    EWR  LAX     2454 2013-04-02 20:02:00\n288  2819      VX    169  N525VA    EWR  LAX     2454 2013-05-15 20:18:00\n289  2822      UA   1471  N17245    EWR  SFO     2565 2013-06-16 18:33:00\n290  2837      UA    398  N568UA    JFK  LAX     2475 2013-12-07 06:36:00\n291  2858      B6   1013  N805JB    JFK  LGB     2465 2013-08-24 18:25:00\n292  2859      UA   1644  N14121    EWR  SFO     2565 2013-03-28 19:52:00\n293  2866      UA   1626  N25705    EWR  SAN     2425 2013-09-01 08:42:00\n294  2868      UA   1200  N36447    EWR  SAN     2425 2013-08-08 14:56:00\n295  2888      AA    181  N336AA    JFK  LAX     2475 2013-07-18 17:37:00\n296  2889      B6    359  N629JB    JFK  BUR     2465 2013-02-02 16:51:00\n297  2898      DL   1865  N707TW    JFK  SFO     2586 2013-03-25 06:56:00\n298  2911      AA     33  N327AA    JFK  LAX     2475 2013-02-22 07:25:00\n299  2929      UA    397  N568UA    JFK  SFO     2586 2013-11-22 07:53:00\n300  2949      AA     33  N339AA    JFK  LAX     2475 2013-04-01 07:22:00\n301  2987      UA    389  N587UA    JFK  SFO     2586 2013-12-05 18:55:00\n302  2990      UA   1721  N35204    EWR  LAX     2454 2013-11-19 16:41:00\n303  3002      B6    673  N793JB    JFK  LAX     2475 2013-03-15 11:34:00\n304  3007      UA   1632  N38467    EWR  SFO     2565 2013-06-28 15:54:00\n305  3013      DL   2363  N721TW    JFK  LAX     2475 2013-02-11 21:13:00\n306  3014      UA   1656  N24706    EWR  SNA     2434 2013-03-19 18:28:00\n307  3040      AA      1  N320AA    JFK  LAX     2475 2013-01-31 08:56:00\n308  3045      VX    415  N623VA    JFK  LAX     2475 2013-11-17 19:59:00\n309  3047      UA    884  N559UA    EWR  SFO     2565 2013-04-11 22:38:00\n310  3057      UA   1205  N73256    EWR  SFO     2565 2013-08-28 15:20:00\n311  3067      VX    415  N622VA    JFK  LAX     2475 2013-12-25 20:07:00\n312  3069      B6    423  N564JB    JFK  LAX     2475 2013-08-17 16:31:00\n313  3073      VX    399  N854VA    JFK  LAX     2475 2013-04-05 07:20:00\n314  3093      UA   1141  N34460    EWR  SFO     2565 2013-07-16 18:45:00\n315  3116      UA    790  N580UA    EWR  SFO     2565 2013-08-17 09:09:00\n316  3117      UA    242  N823UA    EWR  LAX     2454 2013-04-06 10:04:00\n317  3118      UA   1526  N35204    EWR  LAX     2454 2013-11-21 16:45:00\n318  3124      AA      1  N336AA    JFK  LAX     2475 2013-08-29 09:06:00\n319  3145      VX    161  N854VA    EWR  LAX     2454 2013-06-27 09:23:00\n320  3149      UA   1644  N18243    EWR  SFO     2565 2013-03-22 19:54:00\n321  3152      B6     23  N635JB    JFK  LAX     2475 2013-10-18 06:59:00\n322  3157      AA    145  N3HWAA    JFK  SAN     2446 2013-04-04 17:20:00\n323  3177      B6    669  N510JB    JFK  SJC     2569 2013-07-24 18:54:00\n324  3178      DL   1765  N721TW    JFK  SFO     2586 2013-06-13 09:51:00\n325  3184      B6    671  N638JB    JFK  LAX     2475 2013-01-11 06:59:00\n326  3189      UA    841  N512UA    JFK  LAX     2475 2013-12-19 14:49:00\n327  3200      VX    411  N847VA    JFK  LAX     2475 2013-07-25 12:59:00\n328  3222      UA   1626  N73276    EWR  SAN     2425 2013-10-18 08:38:00\n329  3227      AA    119  N3EAAA    EWR  LAX     2454 2013-01-16 18:11:00\n330  3237      UA   1570  N12216    EWR  SFO     2565 2013-05-17 14:02:00\n331  3241      UA    418  N547UA    EWR  SFO     2565 2013-11-04 18:07:00\n332  3242      B6   1013  N641JB    JFK  LGB     2465 2013-11-06 18:03:00\n333  3244      B6    173  N729JB    JFK  SJC     2569 2013-04-25 18:11:00\n334  3260      UA    766  N568UA    JFK  SFO     2586 2013-12-16 12:00:00\n335  3274      B6    209  N796JB    JFK  LGB     2465 2013-05-06 13:56:00\n336  3275      UA   1439  N14214    EWR  LAX     2454 2013-07-19 21:32:00\n337  3288      UA   1526  N36472    EWR  LAX     2454 2013-10-06 19:18:00\n338  3297      B6    423  N806JB    JFK  LAX     2475 2013-12-05 17:55:00\n339  3308      B6    671  N809JB    JFK  LAX     2475 2013-01-10 07:03:00\n340  3333      DL   2363  N713TW    JFK  LAX     2475 2013-05-22 21:34:00\n341  3344      UA   1656  N23707    EWR  SNA     2434 2013-04-02 20:39:00\n342  3348      DL   2363  N706TW    JFK  LAX     2475 2013-03-15 20:55:00\n343  3353      UA    810  N849UA    EWR  SFO     2565 2013-02-02 15:26:00\n344  3359      AA    185  N324AA    JFK  LAX     2475 2013-08-24 21:50:00\n345  3380      B6    915  N821JB    JFK  SFO     2586 2013-12-24 20:20:00\n346  3385      UA    535  N510UA    JFK  LAX     2475 2013-11-03 19:33:00\n347  3393      B6    171  N586JB    JFK  SMF     2521 2013-04-06 18:52:00\n348  3397      UA   1242  N17126    EWR  LAX     2454 2013-05-12 13:23:00\n349  3399      B6    209  N658JB    JFK  LGB     2465 2013-01-02 12:49:00\n350  3402      UA    389  N505UA    JFK  SFO     2586 2013-08-04 18:34:00\n351  3405      UA    766  N512UA    JFK  SFO     2586 2013-10-10 11:55:00\n352  3427      UA    755  N528UA    EWR  LAX     2454 2013-08-20 07:56:00\n353  3433      AA     19  N336AA    JFK  LAX     2475 2013-10-03 10:22:00\n354  3443      UA    257  N596UA    JFK  SFO     2586 2013-10-20 15:47:00\n355  3449      AA     19  N332AA    JFK  LAX     2475 2013-12-15 10:29:00\n356  3451      UA   1626  N87531    EWR  SAN     2425 2013-12-13 08:20:00\n357  3453      DL    763  N711ZX    JFK  LAX     2475 2013-04-24 06:59:00\n358  3471      DL   1765  N718TW    JFK  SFO     2586 2013-05-20 09:54:00\n359  3474      UA    421  N804UA    EWR  SFO     2565 2013-06-23 05:59:00\n360  3497      UA    332  N575UA    EWR  LAX     2454 2013-09-07 07:04:00\n361  3516      DL   1565  N711ZX    JFK  SFO     2586 2013-06-11 14:36:00\n362  3527      UA    132  N17133    JFK  LAX     2475 2013-03-24 15:50:00\n363  3528      DL   1163  N711ZX    JFK  LAX     2475 2013-07-02 17:22:00\n364  3534      AA    177  N339AA    JFK  SFO     2586 2013-11-15 18:40:00\n365  3540      UA   1165  N33289    EWR  LAX     2454 2013-10-21 18:35:00\n366  3556      B6    669  N603JB    JFK  SJC     2569 2013-09-17 18:45:00\n367  3567      DL   1865  N718TW    JFK  SFO     2586 2013-06-03 06:59:00\n368  3568      DL    763  N190DN    JFK  LAX     2475 2013-08-15 06:54:00\n369  3576      B6    167  N645JB    JFK  OAK     2576 2013-11-15 16:56:00\n370  3595      VX    415  N622VA    JFK  LAX     2475 2013-02-04 20:32:00\n371  3597      DL   2363  N723TW    JFK  LAX     2475 2013-01-23 20:58:00\n372  3610      VX    193  N630VA    EWR  SFO     2565 2013-05-21 17:51:00\n373  3619      AA     19  N336AA    JFK  LAX     2475 2013-05-04 10:21:00\n374  3623      B6     89  N625JB    JFK  SAN     2446 2013-11-08 16:50:00\n375  3625      DL    857  N3769L    JFK  SAN     2446 2013-04-13 08:28:00\n376  3632      UA   1735  N87527    EWR  LAX     2454 2013-04-29 10:15:00\n377  3639      UA    281  N556UA    EWR  SFO     2565 2013-11-25 07:57:00\n378  3657      UA    771  N597UA    JFK  LAX     2475 2013-10-25 20:16:00\n379  3667      UA   1439  N73275    EWR  LAX     2454 2013-11-27 06:38:00\n380  3686      UA    642  N512UA    JFK  SFO     2586 2013-12-18 10:23:00\n381  3728      UA   1004  N78506    EWR  LAX     2454 2013-06-14 13:54:00\n382  3746      AA     59  N377AA    JFK  SFO     2586 2013-12-14 07:59:00\n383  3750      UA    303  N512UA    JFK  SFO     2586 2013-05-06 06:06:00\n384  3753      UA   1224  N76503    EWR  LAX     2454 2013-09-25 08:50:00\n385  3758      VX    187  N640VA    EWR  SFO     2565 2013-12-04 10:45:00\n386  3762      B6     15  N807JB    JFK  SFO     2586 2013-12-04 08:44:00\n387  3776      AA    117  N332AA    JFK  LAX     2475 2013-09-09 13:43:00\n388  3779      DL    423  N721TW    JFK  LAX     2475 2013-11-11 11:58:00\n389  3793      UA   1480  N87512    EWR  SFO     2565 2013-02-12 08:31:00\n390  3806      UA   1602  N71411    EWR  SFO     2565 2013-03-03 16:02:00\n391  3815      VX    411  N623VA    JFK  LAX     2475 2013-02-02 13:23:00\n392  3824      DL   1765  N706TW    JFK  SFO     2586 2013-01-17 09:56:00\n393  3835      VX     29  N632VA    JFK  SFO     2586 2013-09-03 18:49:00\n394  3836      UA   1600  N58101    EWR  LAX     2454 2013-07-18 15:25:00\n395  3839      AA     59  N336AA    JFK  SFO     2586 2013-05-17 07:51:00\n396  3840      UA    434  N850UA    EWR  SNA     2434 2013-10-18 08:47:00\n397  3846      AA      3  N339AA    JFK  LAX     2475 2013-05-27 11:55:00\n398  3850      UA    257  N557UA    JFK  SFO     2586 2013-01-18 14:26:00\n399  3859      UA   1496  N39726    EWR  SNA     2434 2013-07-25 11:54:00\n400  3861      VX    183  N851VA    EWR  SFO     2565 2013-11-19 07:13:00\n401  3865      B6    185  N583JB    JFK  SAN     2446 2013-05-24 16:38:00\n402  3874      B6    645  N636JB    JFK  SFO     2586 2013-01-21 19:53:00\n403  3879      UA   1600  N17104    EWR  LAX     2454 2013-02-17 15:27:00\n404  3889      UA    148  N27724    EWR  SNA     2434 2013-04-19 18:37:00\n405  3891      B6    359  N587JB    JFK  BUR     2465 2013-08-14 17:57:00\n406  3909      UA   1692  N75435    EWR  SAN     2425 2013-10-09 17:25:00\n407  3911      DL    120  N624AG    JFK  LAX     2475 2013-05-02 08:55:00\n408  3931      VX     11  N845VA    JFK  SFO     2586 2013-11-25 07:23:00\n409  3935      VX    169  N838VA    EWR  LAX     2454 2013-11-13 17:22:00\n410  3945      UA   1663  N26208    EWR  SFO     2565 2013-11-01 13:57:00\n411  3950      UA   1162  N24702    EWR  SNA     2434 2013-04-04 06:59:00\n412  3959      UA   1175  N14102    JFK  LAX     2475 2013-05-30 06:02:00\n413  3961      AA     33  N339AA    JFK  LAX     2475 2013-04-02 07:29:00\n414  3967      VX     29  N633VA    JFK  SFO     2586 2013-07-07 23:54:00\n415  3968      AA     21  N339AA    JFK  LAX     2475 2013-06-25 19:41:00\n416  3995      B6    423  N612JB    JFK  LAX     2475 2013-10-05 16:33:00\n417  4002      AA     59  N336AA    JFK  SFO     2586 2013-03-26 07:45:00\n418  4008      UA    535  N589UA    JFK  LAX     2475 2013-08-03 17:58:00\n419  4034      B6    647  N793JB    JFK  SFO     2586 2013-06-16 17:29:00\n420  4051      DL    503  N3750D    JFK  SAN     2446 2013-07-05 16:59:00\n421  4052      AA    185  N335AA    JFK  LAX     2475 2013-02-21 21:51:00\n422  4069      B6    167  N563JB    JFK  OAK     2576 2013-12-15 16:56:00\n423  4074      DL    269  N706TW    JFK  SFO     2586 2013-10-12 07:00:00\n424  4076      UA    841  N555UA    JFK  LAX     2475 2013-09-07 14:47:00\n425  4078      B6    161  N662JB    JFK  SMF     2521 2013-09-27 19:56:00\n426  4083      UA    771  N596UA    JFK  LAX     2475 2013-09-13 20:29:00\n427  4093      UA    257  N554UA    JFK  SFO     2586 2013-07-16 16:06:00\n428  4097      UA   1200  N27421    EWR  SAN     2425 2013-12-15 14:10:00\n429  4103      AA      1  N338AA    JFK  LAX     2475 2013-11-15 09:05:00\n430  4111      UA   1496  N25705    EWR  SNA     2434 2013-06-10 07:02:00\n431  4126      UA   1054  N27205    EWR  SFO     2565 2013-02-07 19:04:00\n432  4128      UA   1284  N37470    EWR  SFO     2565 2013-11-26 16:31:00\n433  4151      DL    141  N718TW    JFK  SFO     2586 2013-07-15 16:18:00\n434  4154      UA    389  N589UA    JFK  SFO     2586 2013-11-20 18:34:00\n435  4208      B6    223  N585JB    JFK  LAX     2475 2013-12-25 09:45:00\n436  4211      B6    915  N644JB    JFK  SFO     2586 2013-08-31 20:32:00\n437  4212      UA    397  N560UA    JFK  SFO     2586 2013-09-04 08:26:00\n438  4219      UA     32  N12114    JFK  LAX     2475 2013-04-16 05:56:00\n439  4222      UA   1600  N17126    EWR  LAX     2454 2013-10-19 15:50:00\n440  4227      UA    347  N555UA    JFK  SFO     2586 2013-08-26 06:50:00\n441  4235      UA    257  N557UA    JFK  SFO     2586 2013-08-24 15:35:00\n442  4236      UA   1175  N48127    JFK  LAX     2475 2013-06-09 14:56:00\n443  4237      UA    389  N557UA    JFK  SFO     2586 2013-05-01 18:25:00\n444  4260      UA    314  N587UA    JFK  LAX     2475 2013-11-25 20:46:00\n445  4261      UA   1010  N16703    EWR  SNA     2434 2013-08-14 12:17:00\n446  4262      AA    179  N323AA    JFK  SFO     2586 2013-11-15 10:35:00\n447  4277      UA   1175  N12109    JFK  LAX     2475 2013-06-19 18:15:00\n448  4284      DL    430  N707TW    JFK  SFO     2586 2013-10-29 06:58:00\n449  4299      VX    187  N627VA    EWR  SFO     2565 2013-04-15 10:29:00\n450  4302      DL    763  N624AG    JFK  LAX     2475 2013-04-12 07:01:00\n451  4308      VX    187  N621VA    EWR  SFO     2565 2013-10-22 10:26:00\n452  4309      B6    415  N585JB    JFK  SFO     2586 2013-10-12 16:42:00\n453  4314      UA   1054  N18220    EWR  LAX     2454 2013-09-21 14:36:00\n454  4319      AA      1  N323AA    JFK  LAX     2475 2013-01-13 08:51:00\n455  4330      VX    407  N629VA    JFK  LAX     2475 2013-04-19 09:54:00\n456  4331      UA   1439  N73276    EWR  LAX     2454 2013-12-03 06:53:00\n457  4361      UA   1555  N31412    EWR  SAN     2425 2013-08-05 19:43:00\n458  4367      VX     23  N626VA    JFK  SFO     2586 2013-09-06 10:26:00\n459  4372      B6    189  N603JB    JFK  SAN     2446 2013-12-13 08:57:00\n460  4374      VX    169  N530VA    EWR  LAX     2454 2013-05-25 18:47:00\n461  4384      UA    389  N502UA    JFK  SFO     2586 2013-06-09 18:32:00\n462  4399      AA      1  N328AA    JFK  LAX     2475 2013-02-11 09:00:00\n463  4405      UA   1037  N77518    EWR  LAX     2454 2013-09-12 21:45:00\n464  4409      DL   1565  N705TW    JFK  SFO     2586 2013-03-31 16:28:00\n465  4411      VX    183  N626VA    EWR  SFO     2565 2013-07-08 07:24:00\n466  4412      B6    323  N607JB    JFK  LAX     2475 2013-07-06 12:04:00\n467  4415      B6    675  N806JB    JFK  LAX     2475 2013-05-26 16:29:00\n468  4432      VX     11  N846VA    JFK  SFO     2586 2013-09-04 07:39:00\n469  4449      AA     59  N327AA    JFK  SFO     2586 2013-01-08 07:41:00\n470  4450      UA   1284  N75433    EWR  SFO     2565 2013-09-16 16:35:00\n471  4453      UA    557  N534UA    EWR  SFO     2565 2013-05-01 08:16:00\n472  4478      UA    281  N558UA    EWR  SFO     2565 2013-11-11 08:54:00\n473  4483      UA   1439  N16234    EWR  LAX     2454 2013-08-02 21:12:00\n474  4484      AA      1  N328AA    JFK  LAX     2475 2013-04-14 09:03:00\n475  4488      UA    766  N595UA    JFK  SFO     2586 2013-10-01 12:00:00\n476  4489      VX     23  N642VA    JFK  SFO     2586 2013-11-23 10:43:00\n477  4505      AA    145  N3FVAA    JFK  SAN     2446 2013-04-21 17:19:00\n478  4510      VX    399  N633VA    JFK  LAX     2475 2013-06-29 07:16:00\n479  4512      UA   1493  N35271    EWR  LAX     2454 2013-11-19 14:12:00\n480  4548      AA    119  N3BLAA    EWR  LAX     2454 2013-10-27 18:48:00\n481  4550      UA    257  N510UA    JFK  SFO     2586 2013-03-18 14:19:00\n482  4553      AA      1  N336AA    JFK  LAX     2475 2013-08-09 09:09:00\n483  4563      VX    411  N630VA    JFK  LAX     2475 2013-10-11 12:58:00\n484  4572      UA   1120  N39418    EWR  SFO     2565 2013-06-04 10:21:00\n485  4576      VX    411  N632VA    JFK  LAX     2475 2013-05-06 13:01:00\n486  4590      B6    645  N789JB    JFK  SFO     2586 2013-03-12 19:35:00\n487  4595      UA    257  N597UA    JFK  SFO     2586 2013-10-11 15:39:00\n488  4604      AA    117  N332AA    JFK  LAX     2475 2013-11-14 13:41:00\n489  4631      B6    181  N715JB    JFK  SAN     2446 2013-06-13 08:37:00\n490  4641      AA    117  N320AA    JFK  LAX     2475 2013-03-14 13:42:00\n491  4643      VX    183  N847VA    EWR  SFO     2565 2013-09-12 07:20:00\n492  4651      UA    771  N508UA    JFK  LAX     2475 2013-08-20 20:32:00\n493  4666      UA   1600  N33103    EWR  LAX     2454 2013-07-27 15:31:00\n494  4679      AA     85  N370AA    JFK  SFO     2586 2013-10-21 15:24:00\n495  4680      AA     59  N324AA    JFK  SFO     2586 2013-05-03 08:00:00\n496  4691      UA   1010  N16709    EWR  SNA     2434 2013-04-23 07:06:00\n497  4696      UA    398  N589UA    JFK  LAX     2475 2013-11-26 06:37:00\n498  4710      UA    443  N597UA    JFK  LAX     2475 2013-07-01 08:33:00\n499  4711      UA   1205  N34131    EWR  SFO     2565 2013-12-03 14:37:00\n500  4713      DL     17  N195DN    JFK  LAX     2475 2013-10-13 18:15:00\n501  4724      AA      3  N328AA    JFK  LAX     2475 2013-10-11 11:58:00\n502  4739      UA    389  N596UA    JFK  SFO     2586 2013-09-23 19:28:00\n503  4740      DL    141  N194DN    JFK  SFO     2586 2013-06-22 15:58:00\n504  4741      VX    399  N636VA    JFK  LAX     2475 2013-03-01 07:16:00\n505  4746      UA   1555  N77525    EWR  SAN     2425 2013-08-26 19:47:00\n506  4751      UA    997  N561UA    EWR  LAX     2454 2013-10-08 08:54:00\n507  4755      AA    145  N3HNAA    JFK  SAN     2446 2013-05-23 17:33:00\n508  4759      VX     11  N845VA    JFK  SFO     2586 2013-10-06 07:29:00\n509  4764      UA    207  N524UA    EWR  SFO     2565 2013-07-15 16:13:00\n510  4778      DL   1088   N3766    JFK  SAN     2446 2013-02-19 17:13:00\n511  4794      UA   1161  N38424    EWR  SAN     2425 2013-07-08 19:08:00\n512  4799      VX     23  N641VA    JFK  SFO     2586 2013-10-14 10:27:00\n513  4805      VX    187  N631VA    EWR  SFO     2565 2013-12-10 10:28:00\n514  4818      DL   1576  N3747D    JFK  SAN     2446 2013-10-21 18:32:00\n515  4830      AA     33  N328AA    JFK  LAX     2475 2013-07-30 07:30:00\n516  4848      UA    282  N489UA    EWR  LAX     2454 2013-04-12 05:59:00\n517  4853      UA    207  N465UA    EWR  SNA     2434 2013-07-02 07:15:00\n518  4854      UA    535  N557UA    JFK  LAX     2475 2013-01-06 17:46:00\n519  4857      UA   1668  N53441    EWR  SFO     2565 2013-09-27 06:37:00\n520  4859      DL    763  N194DN    JFK  LAX     2475 2013-08-16 06:59:00\n521  4860      DL     31  N727TW    JFK  SFO     2586 2013-01-28 16:56:00\n522  4877      B6    677  N646JB    JFK  LAX     2475 2013-06-05 20:29:00\n523  4880      AA    177  N328AA    JFK  SFO     2586 2013-02-10 17:46:00\n524  4883      UA   1600  N14115    EWR  LAX     2454 2013-09-14 15:15:00\n525  4884      UA    596  N464UA    EWR  SFO     2565 2013-04-22 10:10:00\n526  4886      VX     27  N621VA    JFK  SFO     2586 2013-03-12 17:15:00\n527  4889      AA    185  N329AA    JFK  LAX     2475 2013-07-14 21:53:00\n528  4902      UA   1668  N37281    EWR  SFO     2565 2013-12-31 13:55:00\n529  4904      DL    417  N196DN    JFK  LAX     2475 2013-12-18 15:30:00\n530  4911      DL    763  N721TW    JFK  LAX     2475 2013-04-25 07:06:00\n531  4920      UA   1200  N79279    EWR  SAN     2425 2013-02-25 15:37:00\n532  4930      UA   1024  N33209    EWR  SFO     2565 2013-06-28 05:50:00\n533  4945      UA    841  N512UA    JFK  LAX     2475 2013-12-06 14:43:00\n534  4957      UA    512  N532UA    JFK  SFO     2586 2013-03-17 17:21:00\n535  4963      UA   1022  N33714    EWR  SNA     2434 2013-10-25 18:21:00\n536  4971      AA    119  N3FHAA    EWR  LAX     2454 2013-09-02 18:48:00\n537  4989      DL     87  N176DN    JFK  LAX     2475 2013-04-30 19:14:00\n538  4992      AA    145  N3GHAA    JFK  SAN     2446 2013-04-25 17:14:00\n539  4993      UA    303  N505UA    JFK  SFO     2586 2013-03-09 06:06:00\n540  5001      UA   1480  N57862    EWR  SFO     2565 2013-09-19 08:27:00\n541  5007      UA   1575  N35271    EWR  SAN     2425 2013-05-27 19:27:00\n542  5017      UA   1600  N57111    EWR  LAX     2454 2013-12-27 15:41:00\n543  5054      VX     11  N635VA    JFK  SFO     2586 2013-01-25 07:37:00\n544  5109      UA    771  N554UA    JFK  LAX     2475 2013-02-17 20:23:00\n545  5118      DL     87  N713TW    JFK  LAX     2475 2013-03-15 19:28:00\n546  5140      AA     67  N3FNAA    JFK  SAN     2446 2013-12-03 17:10:00\n547  5143      UA    434  N832UA    EWR  SNA     2434 2013-10-04 08:52:00\n548  5147      UA    112  N41140    JFK  LAX     2475 2013-01-12 08:38:00\n549  5149      UA    250  N840UA    EWR  LAX     2454 2013-02-05 16:55:00\n550  5154      UA    389  N539UA    JFK  SFO     2586 2013-10-20 18:30:00\n551  5156      AA    133  N323AA    JFK  LAX     2475 2013-04-01 15:45:00\n552  5178      VX    399  N635VA    JFK  LAX     2475 2013-05-25 07:00:00\n553  5182      VX     11  N853VA    JFK  SFO     2586 2013-10-04 07:38:00\n554  5183      DL    841  N713TW    JFK  SFO     2586 2013-09-19 17:32:00\n555  5190      AA    177  N339AA    JFK  SFO     2586 2013-08-25 18:08:00\n556  5193      UA   1526  N35260    EWR  LAX     2454 2013-10-12 19:27:00\n557  5194      UA   1673  N87531    EWR  SFO     2565 2013-07-06 05:58:00\n558  5224      UA   1668  N33294    EWR  SFO     2565 2013-09-04 06:26:00\n559  5234      UA   1601  N29129    JFK  LAX     2475 2013-05-24 15:47:00\n560  5259      B6    915  N570JB    JFK  SFO     2586 2013-07-10 23:17:00\n561  5270      B6    213  N588JB    JFK  LGB     2465 2013-07-31 13:36:00\n562  5273      AA     19  N328AA    JFK  LAX     2475 2013-09-19 10:26:00\n563  5282      VX     23  N846VA    JFK  SFO     2586 2013-02-20 10:26:00\n564  5285      AA    185  N323AA    JFK  LAX     2475 2013-08-27 21:35:00\n565  5299      DL    423  N702TW    JFK  LAX     2475 2013-12-05 11:57:00\n566  5304      UA    786  N592UA    EWR  LAX     2454 2013-06-19 11:00:00\n567  5313      VX    169  N627VA    EWR  LAX     2454 2013-10-31 17:28:00\n568  5314      UA    535  N525UA    JFK  LAX     2475 2013-04-03 17:53:00\n569  5319      DL    120  N723TW    JFK  LAX     2475 2013-04-02 08:54:00\n570  5324      VX     23  N635VA    JFK  SFO     2586 2013-07-20 10:41:00\n571  5330      B6    359  N552JB    JFK  BUR     2465 2013-08-09 18:00:00\n572  5331      VX    415  N628VA    JFK  LAX     2475 2020-05-23 13:07:00\n573  5354      DL   1865  N624AG    JFK  SFO     2586 2013-03-20 06:55:00\n574  5361      UA   1600  N12116    EWR  LAX     2454 2013-03-11 15:14:00\n575  5364      AA     21  N336AA    JFK  LAX     2475 2013-10-26 19:10:00\n576  5365      B6    915  N706JB    JFK  SFO     2586 2013-07-17 20:54:00\n577  5376      B6    323  N768JB    JFK  LAX     2475 2013-11-28 12:58:00\n578  5383      AA    119  N3JAAA    EWR  LAX     2454 2013-07-18 18:43:00\n579  5391      AA      3  N324AA    JFK  LAX     2475 2013-02-14 11:49:00\n580  5394      UA   1223  N18220    EWR  LAX     2454 2013-09-18 08:54:00\n581  5400      DL    763  N624AG    JFK  LAX     2475 2013-04-19 07:10:00\n582  5407      VX    183  N838VA    EWR  SFO     2565 2013-12-03 07:26:00\n583  5422      AA      3  N328AA    JFK  LAX     2475 2013-10-26 11:52:00\n584  5425      UA    389  N598UA    JFK  SFO     2586 2013-09-12 19:12:00\n585  5426      B6    213  N508JB    JFK  LGB     2465 2013-07-15 13:35:00\n586  5433      VX     29  N631VA    JFK  SFO     2586 2013-07-05 19:33:00\n587  5434      UA   1439  N14228    EWR  LAX     2454 2013-07-08 21:01:00\n588  5454      VX     23  N633VA    JFK  SFO     2586 2013-05-20 10:45:00\n589  5476      B6    671  N583JB    JFK  LAX     2475 2013-01-30 06:54:00\n590  5492      VX    415  N633VA    JFK  LAX     2475 2013-07-21 20:25:00\n591  5502      UA    471  N853UA    EWR  SFO     2565 2013-11-23 11:35:00\n592  5511      VX    399  N836VA    JFK  LAX     2475 2013-04-08 07:09:00\n593  5518      VX    187  N528VA    EWR  SFO     2565 2013-06-26 12:06:00\n594  5543      UA    771  N589UA    JFK  LAX     2475 2013-09-20 20:48:00\n595  5555      VX     23  N847VA    JFK  SFO     2586 2013-01-08 10:30:00\n596  5571      B6    359  N779JB    JFK  BUR     2465 2013-03-25 17:41:00\n597  5588      B6    915  N827JB    JFK  SFO     2586 2013-12-08 20:57:00\n598  5606      UA    398  N559UA    EWR  LAX     2454 2013-06-07 09:08:00\n599  5612      AA      3  N338AA    JFK  LAX     2475 2013-10-14 11:52:00\n600  5613      UA    347  N589UA    JFK  SFO     2586 2013-09-12 06:57:00\n601  5631      UA    841  N595UA    JFK  LAX     2475 2013-11-29 14:53:00\n602  5643      UA    443  N560UA    JFK  LAX     2475 2013-03-11 08:35:00\n603  5664      UA    434  N801UA    EWR  SNA     2434 2013-10-21 08:51:00\n604  5718      VX    183  N845VA    EWR  SFO     2565 2013-09-30 07:24:00\n605  5725      UA   1212  N30401    EWR  SFO     2565 2013-11-11 17:28:00\n606  5766      DL    120  N722TW    JFK  LAX     2475 2013-05-20 09:10:00\n607  5768      DL    427  N727TW    JFK  LAX     2475 2013-10-01 20:56:00\n608  5769      B6    213  N796JB    JFK  LGB     2465 2013-06-21 13:43:00\n609  5780      B6    359  N559JB    JFK  BUR     2465 2013-05-05 17:47:00\n610  5789      B6    359  N807JB    JFK  BUR     2465 2013-10-14 17:57:00\n611  5791      UA    398  N596UA    JFK  LAX     2475 2013-11-14 06:37:00\n612  5802      UA    887  N532UA    JFK  SFO     2586 2013-03-03 13:32:00\n613  5822      UA    421  N563UA    EWR  SFO     2565 2013-06-29 09:50:00\n614  5823      DL    863  N722TW    JFK  LAX     2475 2013-08-13 12:00:00\n615  5826      VX     23  N634VA    JFK  SFO     2586 2013-12-09 10:40:00\n616  5827      UA   1526  N26208    EWR  LAX     2454 2013-11-04 19:11:00\n617  5830      UA   1075  N27724    EWR  SNA     2434 2013-08-17 18:06:00\n618  5868      AA     59  N319AA    JFK  SFO     2586 2013-03-14 07:43:00\n619  5947      VX     27  N851VA    JFK  SFO     2586 2013-02-04 17:47:00\n620  5962      UA    797  N598UA    JFK  LAX     2475 2013-10-01 06:27:00\n621  5964      UA    512  N555UA    JFK  SFO     2586 2013-07-09 18:33:00\n622  5977      B6    359  N504JB    JFK  BUR     2465 2013-12-23 17:26:00\n623  5985      UA   1178  N29129    EWR  SFO     2565 2013-02-01 17:12:00\n624  5986      UA   1223  N56859    EWR  LAX     2454 2013-02-28 08:40:00\n625  5990      AA    133  N319AA    JFK  LAX     2475 2013-07-26 15:41:00\n626  6016      UA    743  N513UA    EWR  LAX     2454 2013-06-08 10:51:00\n627  6018      UA    642  N555UA    JFK  SFO     2586 2013-03-18 10:58:00\n628  6024      DL    763  N197DN    JFK  LAX     2475 2013-09-09 06:52:00\n629  6033      VX    413  N637VA    JFK  LAX     2475 2013-01-15 16:53:00\n630  6088      UA   1480  N17233    EWR  SFO     2565 2013-10-11 08:31:00\n631  6096      B6    673  N652JB    JFK  LAX     2475 2013-02-07 11:21:00\n632  6099      B6    623  N646JB    JFK  LAX     2475 2020-07-22 13:07:00\n633  6108      UA   1489  N66808    EWR  SFO     2565 2013-12-20 16:11:00\n634  6111      DL    422  N199DN    JFK  LAX     2475 2013-12-20 08:59:00\n635  6112      B6    189  N520JB    JFK  SAN     2446 2013-06-26 09:52:00\n636  6114      AA     85  N373AA    JFK  SFO     2586 2013-09-20 18:11:00\n637  6131      DL    863  N727TW    JFK  LAX     2475 2013-04-12 11:54:00\n638  6133      VX    407  N636VA    JFK  LAX     2475 2013-03-07 09:08:00\n639  6137      UA   1583  N12221    EWR  SFO     2565 2013-09-25 16:23:00\n640  6146      AA      3  N324AA    JFK  LAX     2475 2013-12-11 11:53:00\n641  6168      UA   1692  N75428    EWR  SAN     2425 2013-11-21 17:54:00\n642  6171      UA    394  N530UA    EWR  SFO     2565 2013-09-09 18:47:00\n643  6181      DL     31  N727TW    JFK  SFO     2586 2013-01-23 16:50:00\n644  6184      UA   1165  N76522    EWR  LAX     2454 2013-09-30 18:15:00\n645  6187      UA    642  N532UA    JFK  SFO     2586 2013-03-01 11:03:00\n646  6189      VX    407  N635VA    JFK  LAX     2475 2013-02-24 09:00:00\n647  6212      VX    169  N622VA    EWR  LAX     2454 2013-10-14 18:49:00\n648  6216      AA    119  N3BWAA    EWR  LAX     2454 2013-05-02 18:23:00\n649  6218      AA    179  N332AA    JFK  SFO     2586 2013-08-28 12:02:00\n650  6224      VX     29  N639VA    JFK  SFO     2586 2013-05-05 20:37:00\n651  6235      UA    443  N588UA    JFK  LAX     2475 2013-10-05 08:24:00\n652  6236      VX    399  N852VA    JFK  LAX     2475 2013-08-10 07:07:00\n653  6247      VX    165  N621VA    EWR  LAX     2454 2013-05-28 13:00:00\n654  6248      AA    133  N327AA    JFK  LAX     2475 2013-12-09 16:04:00\n655  6249      B6    669  N559JB    JFK  SJC     2569 2013-11-25 18:28:00\n656  6252      AA    117  N339AA    JFK  LAX     2475 2013-04-19 13:42:00\n657  6256      DL   1163  N721TW    JFK  LAX     2475 2013-08-14 16:59:00\n658  6258      VX    415  N630VA    JFK  LAX     2475 2013-05-08 23:31:00\n659  6263      VX     27  N848VA    JFK  SFO     2586 2013-08-10 16:28:00\n660  6271      B6    359  N640JB    JFK  BUR     2465 2013-07-26 17:57:00\n661  6273      UA    551  N835UA    EWR  SFO     2565 2013-01-03 15:03:00\n662  6274      AA     85  N371AA    JFK  SFO     2586 2013-03-14 16:04:00\n663  6283      B6     15  N712JB    JFK  SFO     2586 2013-08-12 09:01:00\n664  6320      UA   1127  N37267    EWR  SFO     2565 2013-06-05 18:26:00\n665  6339      UA    397  N560UA    JFK  SFO     2586 2013-03-10 08:07:00\n666  6344      DL   1865  N712TW    JFK  SFO     2586 2013-05-30 07:06:00\n667  6369      UA    405  N518UA    JFK  SFO     2586 2013-04-11 10:29:00\n668  6373      UA    703  N595UA    JFK  LAX     2475 2013-07-18 11:23:00\n669  6380      B6    643  N806JB    JFK  SFO     2586 2013-01-17 07:47:00\n670  6389      VX     29  N840VA    JFK  SFO     2586 2013-09-01 18:49:00\n671  6391      B6    671  N705JB    JFK  LAX     2475 2013-05-16 06:52:00\n672  6393      AA     85  N376AA    JFK  SFO     2586 2013-02-21 15:39:00\n673  6399      VX     27  N622VA    JFK  SFO     2586 2013-04-05 16:29:00\n674  6402      DL   2357  N723TW    JFK  LAX     2475 2013-03-01 17:55:00\n675  6412      AA     21  N332AA    JFK  LAX     2475 2013-04-22 19:48:00\n676  6418      UA   1150  N37474    EWR  SFO     2565 2013-07-05 10:27:00\n677  6425      UA    841  N589UA    JFK  LAX     2475 2013-12-17 14:45:00\n678  6433      DL   1565  N705TW    JFK  SFO     2586 2013-05-10 13:55:00\n679  6434      UA   1532  N38458    EWR  SFO     2565 2013-05-21 17:29:00\n680  6435      DL     17  N192DN    JFK  LAX     2475 2013-07-10 18:14:00\n681  6436      DL    857   N3752    JFK  SAN     2446 2013-09-13 08:03:00\n682  6446      UA    535  N595UA    JFK  LAX     2475 2013-07-10 19:33:00\n683  6460      UA    642  N588UA    JFK  SFO     2586 2013-09-14 10:13:00\n684  6468      DL   2344  N718TW    JFK  LAX     2475 2013-02-22 14:59:00\n685  6487      UA   1595  N33294    EWR  SNA     2434 2013-07-12 20:02:00\n686  6505      DL     95  N187DN    JFK  LAX     2475 2013-07-20 15:46:00\n687  6509      UA    394  N578UA    EWR  SFO     2565 2013-09-16 18:43:00\n688  6533      UA    771  N512UA    JFK  LAX     2475 2013-09-16 20:20:00\n689  6537      VX    411  N628VA    JFK  LAX     2475 2013-02-01 13:23:00\n690  6541      UA   1281  N14214    EWR  SFO     2565 2013-07-02 14:35:00\n691  6545      UA    580  N557UA    JFK  SFO     2586 2013-07-08 12:03:00\n692  6546      UA   1737  N75429    EWR  LAX     2454 2013-01-06 06:07:00\n693  6552      VX     29  N634VA    JFK  SFO     2586 2013-05-25 18:49:00\n694  6559      UA    789  N830UA    EWR  LAX     2454 2013-05-09 16:55:00\n695  6561      B6     89  N623JB    JFK  SAN     2446 2013-11-12 16:52:00\n696  6586      B6    167  N585JB    JFK  OAK     2576 2013-09-27 17:07:00\n697  6589      VX     27  N634VA    JFK  SFO     2586 2013-03-11 16:36:00\n698  6593      DL    141  N707TW    JFK  SFO     2586 2013-08-16 15:57:00\n699  6608      DL     17  N193DN    JFK  LAX     2475 2013-06-15 18:15:00\n700  6631      B6    359  N586JB    JFK  BUR     2465 2013-02-16 17:25:00\n701  6638      UA    207  N577UA    EWR  SFO     2565 2013-07-31 08:33:00\n702  6655      UA   1668  N34282    EWR  SFO     2565 2013-12-05 08:50:00\n703  6659      VX    193  N623VA    EWR  SFO     2565 2013-10-23 17:26:00\n704  6674      AA    133  N327AA    JFK  LAX     2475 2013-02-19 16:41:00\n705  6694      B6    189  N639JB    JFK  SAN     2446 2013-06-28 09:31:00\n706  6706      DL    503  N3747D    JFK  SAN     2446 2013-02-06 17:12:00\n707  6708      UA    506  N507UA    EWR  LAX     2454 2013-07-23 19:38:00\n708  6714      VX    169  N837VA    EWR  LAX     2454 2013-04-17 18:50:00\n709  6722      UA   1663  N36207    EWR  SFO     2565 2013-09-27 13:57:00\n710  6744      B6    669  N637JB    JFK  SJC     2569 2013-12-16 18:27:00\n711  6753      AA    185  N338AA    JFK  LAX     2475 2013-02-03 22:01:00\n712  6755      UA    535  N510UA    JFK  LAX     2475 2013-04-26 17:52:00\n713  6785      VX     23  N626VA    JFK  SFO     2586 2013-05-12 10:44:00\n714  6802      VX    161  N837VA    EWR  LAX     2454 2013-07-07 09:15:00\n715  6809      AA      3  N327AA    JFK  LAX     2475 2013-01-20 11:58:00\n716  6851      UA   1665  N38268    EWR  LAX     2454 2013-07-18 07:05:00\n717  6879      B6    185  N603JB    JFK  SAN     2446 2013-04-23 16:32:00\n718  6887      AA    177  N336AA    JFK  SFO     2586 2013-02-19 17:45:00\n719  6898      UA   1583  N24212    EWR  SFO     2565 2013-11-24 14:30:00\n720  6901      B6    677  N779JB    JFK  LAX     2475 2013-06-19 20:29:00\n721  6909      AA     85  N388AA    JFK  SFO     2586 2013-01-16 15:29:00\n722  6939      VX     27  N854VA    JFK  SFO     2586 2013-06-08 16:49:00\n723  6941      AA     19  N323AA    JFK  LAX     2475 2013-11-04 10:29:00\n724  6942      UA   1200  N77520    EWR  SAN     2425 2013-01-21 16:17:00\n725  6944      UA    397  N557UA    JFK  SFO     2586 2013-06-23 08:32:00\n726  6986      DL    857  N3760C    JFK  SAN     2446 2013-10-15 08:08:00\n727  6989      UA    786  N574UA    EWR  LAX     2454 2013-07-01 11:27:00\n728  7006      VX    399  N640VA    JFK  LAX     2475 2013-08-06 07:14:00\n729  7007      B6    181  N809JB    JFK  SAN     2446 2013-06-02 08:31:00\n730  7012      B6    173  N625JB    JFK  SJC     2569 2013-04-11 18:12:00\n731  7038      B6    323  N529JB    JFK  LAX     2475 2013-08-03 13:08:00\n732  7040      VX     23  N844VA    JFK  SFO     2586 2013-02-07 10:24:00\n733  7042      VX    415  N842VA    JFK  LAX     2475 2013-11-06 19:58:00\n734  7050      DL    422  N702TW    JFK  LAX     2475 2013-11-06 08:59:00\n735  7054      AA    117  N328AA    JFK  LAX     2475 2013-01-11 13:40:00\n736  7056      UA    207  N568UA    EWR  SFO     2565 2013-07-03 09:04:00\n737  7061      DL   1765  N703TW    JFK  SFO     2586 2013-06-06 09:53:00\n738  7063      VX    165  N629VA    EWR  LAX     2454 2013-09-27 12:55:00\n739  7069      VX    411  N623VA    JFK  LAX     2475 2013-01-30 13:22:00\n740  7071      UA   1284  N37466    EWR  SFO     2565 2013-07-29 17:30:00\n741  7075      UA   1742  N36472    EWR  SFO     2565 2013-06-24 13:55:00\n742  7083      UA    504  N555UA    JFK  SFO     2586 2013-11-21 08:58:00\n743  7088      UA   1671  N37470    EWR  SFO     2565 2013-04-23 20:26:00\n744  7089      UA   1141  N27421    EWR  SFO     2565 2013-07-26 18:20:00\n745  7095      UA    389  N505UA    JFK  SFO     2586 2013-06-17 18:31:00\n746  7101      DL    841  N721TW    JFK  SFO     2586 2013-06-30 17:56:00\n747  7102      UA   1224  N76269    EWR  LAX     2454 2013-12-05 20:26:00\n748  7104      DL   1465  N713TW    JFK  SFO     2586 2013-06-05 19:04:00\n749  7106      UA    389  N505UA    JFK  SFO     2586 2013-07-24 18:34:00\n750  7116      UA    799  N512UA    JFK  SFO     2586 2013-01-22 07:03:00\n751  7122      UA   1496  N24729    EWR  SNA     2434 2013-12-03 08:38:00\n752  7133      B6     23  N794JB    JFK  LAX     2475 2013-12-12 06:55:00\n753  7140      B6    423  N563JB    JFK  LAX     2475 2013-09-06 16:36:00\n754  7143      B6    359  N565JB    JFK  BUR     2465 2013-08-30 17:56:00\n755  7144      DL     95  N196DN    JFK  LAX     2475 2013-07-04 15:42:00\n756  7156      UA   1228  N37409    EWR  LAX     2454 2013-09-14 10:03:00\n757  7174      UA   1022  N27724    EWR  SNA     2434 2013-09-27 18:15:00\n758  7176      UA   1561  N77431    EWR  SFO     2565 2013-05-23 18:17:00\n759  7182      DL    120   N704X    JFK  LAX     2475 2013-01-20 11:09:00\n760  7199      UA   1466  N76508    EWR  SAN     2425 2013-04-16 16:26:00\n761  7219      UA   1205  N14118    EWR  SFO     2565 2013-12-11 14:27:00\n762  7224      DL    434  N702TW    JFK  SFO     2586 2013-12-24 17:28:00\n763  7232      UA    299  N574UA    EWR  SFO     2565 2013-08-08 21:16:00\n764  7233      UA    398  N512UA    JFK  LAX     2475 2013-11-23 06:31:00\n765  7242      DL   1565  N722TW    JFK  SFO     2586 2013-05-31 13:57:00\n766  7246      AA     59  N336AA    JFK  SFO     2586 2013-03-01 07:42:00\n767  7254      AA    177  N332AA    JFK  SFO     2586 2013-11-08 18:42:00\n768  7256      AA    133  N324AA    JFK  LAX     2475 2013-01-08 15:46:00\n769  7269      UA   1455  N47414    EWR  LAX     2454 2013-12-06 07:31:00\n770  7272      UA    236  N598UA    JFK  LAX     2475 2013-08-15 06:26:00\n771  7286      AA      3  N338AA    JFK  LAX     2475 2013-03-02 11:55:00\n772  7287      B6    189  N517JB    JFK  SAN     2446 2013-09-10 08:24:00\n773  7288      DL    417  N194DN    JFK  LAX     2475 2013-12-28 15:24:00\n774  7290      AA    117  N327AA    JFK  LAX     2475 2013-09-10 13:40:00\n775  7295      UA   1668  N78438    EWR  SFO     2565 2013-06-24 07:32:00\n776  7307      DL    432  N702TW    JFK  SFO     2586 2013-12-15 13:19:00\n777  7324      B6    217  N712JB    JFK  LGB     2465 2013-01-21 18:03:00\n778  7328      UA    257  N589UA    JFK  SFO     2586 2013-09-24 15:35:00\n779  7335      UA    207  N509UA    EWR  SFO     2565 2013-06-16 17:19:00\n780  7342      DL    420  N197DN    JFK  LAX     2475 2013-10-09 06:58:00\n781  7345      UA   1049  N45440    EWR  SFO     2565 2013-11-18 21:26:00\n782  7350      AA    119  N3CGAA    EWR  LAX     2454 2013-04-22 18:23:00\n783  7351      AA     33  N320AA    JFK  LAX     2475 2013-06-16 07:23:00\n784  7354      VX    411  N635VA    JFK  LAX     2475 2013-02-27 13:22:00\n785  7355      UA   1539  N14102    EWR  SFO     2565 2013-03-06 19:44:00\n786  7357      UA   1054  N17126    EWR  LAX     2454 2013-03-22 13:26:00\n787  7369      UA    535  N596UA    JFK  LAX     2475 2013-08-22 18:10:00\n788  7391      DL    477   N704X    JFK  LAX     2475 2013-10-27 17:25:00\n789  7414      VX    183  N836VA    EWR  SFO     2565 2013-09-14 07:26:00\n790  7417      UA    443  N502UA    JFK  LAX     2475 2013-10-04 08:24:00\n791  7424      UA    365  N823UA    EWR  SAN     2425 2013-10-24 14:29:00\n792  7428      VX    183  N844VA    EWR  SFO     2565 2013-12-02 07:30:00\n793  7430      VX    161  N849VA    EWR  LAX     2454 2013-09-30 09:13:00\n794  7434      UA    743  N812UA    EWR  LAX     2454 2013-05-24 06:48:00\n795  7443      UA   1532  N76523    EWR  SFO     2565 2013-08-12 19:58:00\n796  7470      UA    387  N507UA    EWR  LAX     2454 2013-03-07 06:33:00\n797  7472      DL    503  N3761R    JFK  SAN     2446 2013-01-30 17:12:00\n798  7481      VX     29  N623VA    JFK  SFO     2586 2013-10-17 18:51:00\n799  7483      AA    133  N327AA    JFK  LAX     2475 2013-04-10 15:41:00\n800  7501      AA    117  N335AA    JFK  LAX     2475 2013-10-18 13:49:00\n801  7516      UA    257  N505UA    JFK  SFO     2586 2013-06-29 15:27:00\n802  7542      UA    497  N530UA    EWR  SFO     2565 2013-10-20 07:23:00\n803  7553      VX    193  N629VA    EWR  SFO     2565 2013-08-22 18:15:00\n804  7561      UA    443  N589UA    JFK  LAX     2475 2013-08-30 08:47:00\n805  7571      UA    495  N504UA    EWR  LAX     2454 2013-08-03 14:51:00\n806  7572      VX     29  N627VA    JFK  SFO     2586 2013-10-16 18:50:00\n807  7590      UA   1266  N36469    EWR  LAX     2454 2013-08-01 19:22:00\n808  7593      VX    413  N624VA    JFK  LAX     2475 2013-03-15 16:53:00\n809  7608      UA    312  N840UA    EWR  SAN     2425 2013-12-26 18:52:00\n810  7609      VX    413  N640VA    JFK  LAX     2475 2013-09-06 16:55:00\n811  7619      B6    185  N535JB    JFK  SAN     2446 2013-01-12 17:05:00\n812  7627      UA    535  N512UA    JFK  LAX     2475 2013-01-09 17:48:00\n813  7639      UA    703  N554UA    JFK  LAX     2475 2013-06-21 11:25:00\n814  7642      B6    641  N705JB    JFK  SFO     2586 2013-01-07 10:26:00\n815  7649      AA    133  N329AA    JFK  LAX     2475 2013-02-28 15:43:00\n816  7655      UA   1583  N37253    EWR  SFO     2565 2013-10-31 08:32:00\n817  7664      UA    208  N802UA    EWR  SAN     2425 2013-11-02 08:33:00\n818  7710      UA   1668  N68453    EWR  SFO     2565 2013-09-26 06:24:00\n819  7711      DL   1465  N723TW    JFK  SFO     2586 2013-08-24 18:58:00\n820  7713      UA    132  N17105    JFK  LAX     2475 2013-03-31 15:46:00\n821  7715      UA    593  N848UA    EWR  SNA     2434 2013-01-15 18:25:00\n822  7719      UA    998  N823UA    EWR  SAN     2425 2013-08-14 17:03:00\n823  7730      DL   1565  N707TW    JFK  SFO     2586 2013-05-13 13:55:00\n824  7732      AA    181  N332AA    JFK  LAX     2475 2013-06-10 16:58:00\n825  7752      DL    503  N3762Y    JFK  SAN     2446 2013-03-21 17:16:00\n826  7754      VX    187  N521VA    EWR  SFO     2565 2013-08-25 10:27:00\n827  7755      UA   1439  N73276    EWR  LAX     2454 2013-11-20 06:32:00\n828  7760      AA      1  N339AA    JFK  LAX     2475 2013-07-04 09:16:00\n829  7764      B6    415  N779JB    JFK  SFO     2586 2013-07-27 18:00:00\n830  7786      DL    426  N188DN    JFK  LAX     2475 2013-11-05 18:09:00\n831  7793      B6    217  N706JB    JFK  LGB     2465 2013-05-17 17:59:00\n832  7794      B6    523  N789JB    JFK  LAX     2475 2013-08-08 21:26:00\n833  7816      AA     21  N328AA    JFK  LAX     2475 2013-08-24 19:12:00\n834  7827      AA     19  N327AA    JFK  LAX     2475 2013-11-13 10:25:00\n835  7828      UA   1289  N34460    EWR  SFO     2565 2013-11-23 15:19:00\n836  7842      UA    309  N557UA    JFK  SFO     2586 2013-02-21 06:57:00\n837  7852      UA    220  N445UA    EWR  SFO     2565 2013-04-23 09:26:00\n838  7860      UA   1739  N14121    EWR  SFO     2565 2013-01-11 17:09:00\n839  7870      UA    250  N820UA    EWR  LAX     2454 2013-02-07 17:24:00\n840  7877      B6    675  N646JB    JFK  LAX     2475 2013-05-01 16:32:00\n841  7887      AA    179  N335AA    JFK  SFO     2586 2013-01-06 10:21:00\n842  7894      B6    185  N523JB    JFK  SAN     2446 2013-05-07 16:49:00\n843  7896      DL     31  N624AG    JFK  SFO     2586 2013-04-14 18:42:00\n844  7898      AA    185  N339AA    JFK  LAX     2475 2013-02-02 21:31:00\n845  7905      UA   1493  N16234    EWR  LAX     2454 2013-09-23 14:30:00\n846  7916      AA    177  N338AA    JFK  SFO     2586 2013-04-26 17:54:00\n847  7934      UA    347  N557UA    JFK  SFO     2586 2013-04-06 07:00:00\n848  7937      UA    465  N847UA    EWR  LAX     2454 2013-05-26 16:24:00\n849  7962      UA   1200  N75426    EWR  SAN     2425 2013-12-09 15:46:00\n850  7995      UA    161  N75858    EWR  LAX     2454 2013-03-17 08:29:00\n851  8009      DL    417  N197DN    JFK  LAX     2475 2013-12-01 15:29:00\n852  8015      AA    117  N327AA    JFK  LAX     2475 2013-05-02 13:54:00\n853  8035      AA    117  N339AA    JFK  LAX     2475 2013-06-29 13:43:00\n854  8054      VX    399  N854VA    JFK  LAX     2475 2013-10-25 06:59:00\n855  8068      UA    910  N854UA    EWR  LAX     2454 2013-06-03 20:14:00\n856  8101      UA    303  N502UA    JFK  SFO     2586 2013-04-08 05:53:00\n857  8105      UA   1600  N58101    EWR  LAX     2454 2013-09-18 15:17:00\n858  8110      UA    642  N518UA    JFK  SFO     2586 2013-04-29 11:54:00\n859  8115      UA   1534  N33209    EWR  SFO     2565 2013-08-21 18:55:00\n860  8140      UA    703  N597UA    JFK  LAX     2475 2013-07-07 11:15:00\n861  8141      VX     11  N847VA    JFK  SFO     2586 2013-08-14 07:44:00\n862  8150      AA    133  N328AA    JFK  LAX     2475 2013-06-06 15:46:00\n863  8165      AA      3  N338AA    JFK  LAX     2475 2013-02-16 11:56:00\n864  8170      DL    430  N707TW    JFK  SFO     2586 2013-12-05 06:57:00\n865  8183      VX     23  N626VA    JFK  SFO     2586 2013-11-22 10:28:00\n866  8205      UA    303  N555UA    JFK  SFO     2586 2013-10-26 05:57:00\n867  8210      UA    303  N522UA    JFK  SFO     2586 2013-09-25 05:55:00\n868  8214      DL    863  N705TW    JFK  LAX     2475 2013-09-02 11:54:00\n869  8225      B6    359  N649JB    JFK  BUR     2465 2013-03-27 17:24:00\n870  8231      UA   1632  N37470    EWR  SFO     2565 2013-07-01 16:33:00\n871  8233      DL    434  N705TW    JFK  SFO     2586 2013-10-30 17:21:00\n872  8236      AA     19  N332AA    JFK  LAX     2475 2013-07-21 10:24:00\n873  8237      VX    413  N629VA    JFK  LAX     2475 2013-03-27 17:00:00\n874  8238      AA     59  N365AA    JFK  SFO     2586 2013-08-21 07:57:00\n875  8244      VX     11  N855VA    JFK  SFO     2586 2013-01-05 07:28:00\n876  8247      B6   1013  N834JB    JFK  LGB     2465 2013-10-17 18:20:00\n877  8252      DL    503  N3744F    JFK  SAN     2446 2013-06-13 17:38:00\n878  8275      UA    220  N497UA    EWR  SFO     2565 2013-04-25 09:28:00\n879  8290      UA    535  N555UA    JFK  LAX     2475 2013-09-12 18:54:00\n880  8297      UA   1424  N13716    EWR  SNA     2434 2013-05-15 12:23:00\n881  8317      AA    145  N3KMAA    JFK  SAN     2446 2013-08-12 17:25:00\n882  8348      UA    362  N577UA    EWR  SNA     2434 2013-11-11 18:13:00\n883  8356      UA    771  N502UA    JFK  LAX     2475 2013-02-13 20:26:00\n884  8372      AA    181  N339AA    JFK  LAX     2475 2013-04-16 18:17:00\n885  8379      UA    522  N416UA    EWR  LAX     2454 2013-04-27 07:59:00\n886  8392      B6    359  N633JB    JFK  BUR     2465 2013-02-05 16:51:00\n887  8396      B6    523  N789JB    JFK  LAX     2475 2013-06-26 21:20:00\n888  8400      VX    415  N641VA    JFK  LAX     2475 2013-03-07 20:01:00\n889  8407      VX    407  N631VA    JFK  LAX     2475 2013-12-23 09:16:00\n890  8426      UA   1281  N14219    EWR  SFO     2565 2013-05-05 09:13:00\n891  8437      AA    181  N332AA    JFK  LAX     2475 2013-02-14 16:47:00\n892  8445      UA    435  N822UA    EWR  SAN     2425 2013-06-06 17:21:00\n893  8447      UA   1275  N57870    EWR  LAX     2454 2013-01-18 09:16:00\n894  8450      UA    535  N598UA    JFK  LAX     2475 2013-11-24 17:57:00\n895  8465      AA    177  N332AA    JFK  SFO     2586 2013-09-13 18:43:00\n896  8487      AA    179  N378AA    JFK  SFO     2586 2013-03-02 12:58:00\n897  8493      B6    181  N625JB    JFK  SAN     2446 2013-04-14 08:10:00\n898  8495      AA     33  N338AA    JFK  LAX     2475 2013-02-28 07:25:00\n899  8538      DL   1865  N723TW    JFK  SFO     2586 2013-05-23 06:52:00\n900  8557      AA    145  N3FHAA    JFK  SAN     2446 2013-06-16 17:35:00\n901  8573      UA    226  N589UA    JFK  SFO     2586 2013-11-04 16:59:00\n902  8578      UA   1651  N14118    EWR  SFO     2565 2013-09-05 15:27:00\n903  8581      VX    399  N633VA    JFK  LAX     2475 2013-07-20 07:15:00\n904  8592      UA    797  N525UA    JFK  LAX     2475 2013-09-19 06:25:00\n905  8596      DL   1576  N3744F    JFK  SAN     2446 2013-10-04 19:16:00\n906  8603      AA    119  N3GRAA    EWR  LAX     2454 2013-10-25 18:51:00\n907  8627      UA   1196  N37462    EWR  SFO     2565 2013-06-26 16:48:00\n908  8646      VX    161  N845VA    EWR  LAX     2454 2013-11-23 09:02:00\n909  8647      VX    187  N528VA    EWR  SFO     2565 2013-05-27 10:29:00\n910  8665      B6    423  N529JB    JFK  LAX     2475 2013-10-30 16:57:00\n911  8667      VX     11  N844VA    JFK  SFO     2586 2013-11-01 07:26:00\n912  8669      UA    483  N526UA    EWR  LAX     2454 2013-07-26 17:09:00\n913  8670      UA   1600  N18112    EWR  LAX     2454 2013-11-20 14:58:00\n914  8685      UA    771  N508UA    JFK  LAX     2475 2013-06-23 20:27:00\n915  8687      UA    375  N804UA    EWR  LAX     2454 2013-11-23 16:24:00\n916  8698      B6   1013  N564JB    JFK  LGB     2465 2013-07-25 19:11:00\n917  8728      AA      3  N327AA    JFK  LAX     2475 2013-04-27 12:19:00\n918  8730      UA    535  N597UA    JFK  LAX     2475 2013-07-12 18:32:00\n919  8734      DL   1576  N3750D    JFK  SAN     2446 2013-10-24 18:55:00\n920  8741      AA    181  N336AA    JFK  LAX     2475 2013-02-18 16:56:00\n921  8749      UA   1162  N33714    EWR  SNA     2434 2013-03-06 07:02:00\n922  8762      UA   1284  N38257    EWR  SFO     2565 2013-10-17 17:07:00\n923  8782      UA   1455  N27213    EWR  LAX     2454 2013-10-30 18:11:00\n924  8784      B6    679  N639JB    JFK  LAX     2475 2013-05-16 09:39:00\n925  8785      UA    205  N477UA    EWR  SFO     2565 2013-04-02 06:57:00\n926  8787      AA     19  N338AA    JFK  LAX     2475 2013-01-11 10:24:00\n927  8821      AA    177  N320AA    JFK  SFO     2586 2013-03-18 17:44:00\n928  8840      B6    669  N503JB    JFK  SJC     2569 2013-11-28 18:24:00\n929  8846      VX    407  N629VA    JFK  LAX     2475 2013-12-18 09:56:00\n930  8848      VX    411  N628VA    JFK  LAX     2475 2013-06-06 12:59:00\n931  8870      UA   1101  N12125    JFK  LAX     2475 2013-04-18 16:32:00\n932  8871      UA   1462  N18243    EWR  SFO     2565 2013-02-26 19:09:00\n933  8878      UA    263  N530UA    EWR  SAN     2425 2013-09-16 17:33:00\n934  8888      B6    671  N775JB    JFK  LAX     2475 2013-03-21 07:08:00\n935  8899      B6    647  N807JB    JFK  SFO     2586 2013-05-30 17:41:00\n936  8928      UA   1496  N13716    EWR  SNA     2434 2013-10-22 12:21:00\n937  8935      VX    407  N623VA    JFK  LAX     2475 2013-08-21 09:20:00\n938  8938      AA     33  N336AA    JFK  LAX     2475 2013-12-03 07:35:00\n939  8948      UA    731  N557UA    JFK  LAX     2475 2013-08-30 18:34:00\n940  8951      UA   1466  N79279    EWR  SAN     2425 2013-04-23 16:25:00\n941  8973      VX     27  N625VA    JFK  SFO     2586 2013-11-02 16:30:00\n942  8977      AA    117  N319AA    JFK  LAX     2475 2013-02-19 13:34:00\n943  8980      UA   1698  N77530    EWR  SFO     2565 2013-01-25 15:18:00\n944  8982      UA    112  N12109    JFK  LAX     2475 2013-02-02 08:28:00\n945  8994      B6    523  N523JB    JFK  LAX     2475 2013-08-31 21:06:00\n946  8995      DL    424  N192DN    JFK  LAX     2475 2013-11-01 13:06:00\n947  8996      UA    389  N518UA    JFK  SFO     2586 2013-06-02 20:12:00\n948  8999      AA     21  N336AA    JFK  LAX     2475 2013-04-10 20:25:00\n949  9001      AA      3  N320AA    JFK  LAX     2475 2013-10-04 11:55:00\n950  9003      DL   1865  N706TW    JFK  SFO     2586 2013-02-11 06:58:00\n951  9017      AA    145  N3JMAA    JFK  SAN     2446 2013-02-11 21:06:00\n952  9041      UA   1179  N36280    EWR  SFO     2565 2013-06-27 10:35:00\n953  9052      UA    161  N14102    JFK  LAX     2475 2013-01-07 15:47:00\n954  9075      VX    399  N635VA    JFK  LAX     2475 2013-10-31 06:50:00\n955  9091      DL    422  N710TW    JFK  LAX     2475 2013-12-11 09:35:00\n956  9092      VX    169  N527VA    EWR  LAX     2454 2013-07-08 19:45:00\n957  9097      UA    797  N510UA    JFK  LAX     2475 2013-03-20 06:03:00\n958  9103      UA    314  N518UA    JFK  LAX     2475 2013-12-28 11:23:00\n959  9106      DL     87  N624AG    JFK  LAX     2475 2013-03-22 18:59:00\n960  9108      UA   1656  N29717    EWR  SNA     2434 2013-03-27 18:22:00\n961  9114      VX     27  N840VA    JFK  SFO     2586 2013-09-25 16:33:00\n962  9120      UA   1574  N24224    EWR  SFO     2565 2013-08-08 06:03:00\n963  9124      UA    389  N546UA    JFK  SFO     2586 2013-12-12 19:27:00\n964  9127      UA    389  N510UA    JFK  SFO     2586 2013-09-19 19:33:00\n965  9128      VX     27  N846VA    JFK  SFO     2586 2013-06-26 19:03:00\n966  9130      UA    580  N518UA    JFK  SFO     2586 2013-08-02 12:05:00\n967  9135      UA    257  N512UA    JFK  SFO     2586 2013-08-09 16:01:00\n968  9146      B6   1013  N706JB    JFK  LGB     2465 2013-07-20 21:54:00\n969  9150      UA    771  N512UA    JFK  LAX     2475 2013-04-11 20:21:00\n970  9170      UA    742  N581UA    EWR  LAX     2454 2013-07-29 06:15:00\n971  9195      VX    165  N840VA    EWR  LAX     2454 2013-06-18 13:31:00\n972  9196      UA   1294  N38443    EWR  SFO     2565 2013-10-21 12:58:00\n973  9200      VX    187  N624VA    EWR  SFO     2565 2013-04-11 10:53:00\n974  9205      B6    359  N715JB    JFK  BUR     2465 2013-01-19 16:48:00\n975  9207      UA    284  N572UA    EWR  SAN     2425 2013-07-14 09:11:00\n976  9221      UA    347  N505UA    JFK  SFO     2586 2013-08-22 06:58:00\n977  9230      DL    763  N723TW    JFK  LAX     2475 2013-05-20 06:59:00\n978  9241      VX     29  N633VA    JFK  SFO     2586 2013-04-16 18:58:00\n979  9246      UA   1402  N33103    JFK  LAX     2475 2013-07-01 06:34:00\n980  9265      UA   1047  N17233    EWR  SFO     2565 2013-12-31 19:00:00\n981  9275      B6    423  N624JB    JFK  LAX     2475 2013-07-03 16:45:00\n982  9277      UA    483  N584UA    EWR  LAX     2454 2013-07-15 16:56:00\n983  9286      UA   1735  N39726    EWR  LAX     2454 2013-11-08 09:41:00\n984  9294      UA   1141  N27421    EWR  SFO     2565 2013-06-30 17:39:00\n985  9306      UA    726  N840UA    EWR  SFO     2565 2013-01-05 06:30:00\n986  9314      VX    161  N836VA    EWR  LAX     2454 2013-10-18 09:11:00\n987  9316      VX    399  N638VA    JFK  LAX     2475 2013-11-24 06:59:00\n988  9321      AA    119  N3HFAA    EWR  LAX     2454 2013-08-02 18:24:00\n989  9333      UA   1054  N17105    EWR  LAX     2454 2013-11-11 13:22:00\n990  9337      B6    671  N806JB    JFK  LAX     2475 2013-05-29 06:58:00\n991  9363      DL    963  N718TW    JFK  LAX     2475 2013-03-24 14:44:00\n992  9367      AA    177  N336AA    JFK  SFO     2586 2013-05-19 19:31:00\n993  9373      DL    120  N722TW    JFK  LAX     2475 2013-08-25 08:55:00\n994  9382      VX    415  N361VA    JFK  LAX     2475 2013-10-30 19:56:00\n995  9393      UA   1425  N41135    EWR  LAX     2454 2013-04-14 13:15:00\n996  9395      VX    187  N639VA    EWR  SFO     2565 2013-12-27 10:26:00\n997  9396      VX    413  N638VA    JFK  LAX     2475 2013-04-09 16:53:00\n998  9399      UA   1275  N57869    EWR  LAX     2454 2013-01-24 09:19:00\n999  9428      UA    428  N817UA    EWR  SAN     2425 2013-06-21 17:36:00\n1000 9439      DL    503  N3754A    JFK  SAN     2446 2013-05-13 17:14:00\n1001 9445      UA   1223  N57868    EWR  LAX     2454 2013-11-23 09:34:00\n1002 9455      UA    387  N509UA    EWR  LAX     2454 2013-04-13 07:07:00\n1003 9457      UA   1493  N12238    EWR  LAX     2454 2013-11-25 14:14:00\n1004 9459      UA    535  N525UA    JFK  LAX     2475 2013-02-03 17:48:00\n1005 9465      B6    181  N645JB    JFK  SAN     2446 2013-05-10 08:28:00\n1006 9472      B6    423  N708JB    JFK  LAX     2475 2013-10-18 16:25:00\n1007 9478      UA   1670  N36207    EWR  SFO     2565 2013-04-23 13:52:00\n1008 9482      UA    642  N510UA    JFK  SFO     2586 2013-09-04 09:53:00\n1009 9487      B6    173  N659JB    JFK  SJC     2569 2013-06-08 18:53:00\n1010 9505      B6    647  N648JB    JFK  SFO     2586 2013-05-21 17:38:00\n1011 9508      AA     85  N398AA    JFK  SFO     2586 2013-02-17 15:34:00\n1012 9509      VX     11  N840VA    JFK  SFO     2586 2013-12-18 07:29:00\n1013 9514      B6    415  N556JB    JFK  SFO     2586 2013-10-09 16:41:00\n1014 9520      UA    274  N851UA    EWR  LAX     2454 2013-12-16 11:14:00\n1015 9526      VX     11  N848VA    JFK  SFO     2586 2013-02-28 07:29:00\n1016 9540      VX    411  N636VA    JFK  LAX     2475 2013-08-31 12:55:00\n1017 9549      UA    999  N533UA    EWR  LAX     2454 2013-08-21 06:57:00\n1018 9567      DL    841  N711ZX    JFK  SFO     2586 2013-08-25 17:34:00\n1019 9584      UA    428  N493UA    EWR  LAX     2454 2013-04-30 20:09:00\n1020 9594      DL    120  N718TW    JFK  LAX     2475 2013-01-26 08:57:00\n1021 9600      VX    193  N621VA    EWR  SFO     2565 2013-04-20 17:32:00\n1022 9615      AA    185  N323AA    JFK  LAX     2475 2013-12-22 22:13:00\n1023 9633      VX    165  N624VA    EWR  LAX     2454 2013-09-26 12:55:00\n1024 9652      UA    387  N574UA    EWR  LAX     2454 2013-04-15 07:03:00\n1025 9660      UA   1453  N75433    EWR  SAN     2425 2013-12-29 18:37:00\n1026 9668      VX    187  N845VA    EWR  SFO     2565 2013-04-22 10:29:00\n1027 9690      UA    362  N577UA    EWR  SNA     2434 2013-11-08 18:29:00\n1028 9704      UA    257  N525UA    JFK  SFO     2586 2013-03-01 14:23:00\n1029 9714      B6    209  N821JB    JFK  LGB     2465 2013-04-30 14:08:00\n1030 9721      UA    703  N555UA    JFK  LAX     2475 2013-08-30 11:19:00\n     scheduled_departure             arrival   scheduled_arrival       late\n1    2013-06-30 09:25:00 2013-06-30 12:16:00 2013-06-30 12:20:00    -4 mins\n2    2013-04-22 17:42:00 2013-04-22 22:01:00 2013-04-22 20:55:00    66 mins\n3    2013-12-26 08:00:00 2013-12-26 10:54:00 2013-12-26 11:35:00   -41 mins\n4    2013-11-26 18:04:00 2013-11-26 21:23:00 2013-11-26 21:30:00    -7 mins\n5    2013-10-22 21:40:00 2013-10-22 00:48:00 2013-10-22 00:40:00     8 mins\n6    2013-08-23 17:10:00 2013-08-23 19:59:00 2013-08-23 20:15:00   -16 mins\n7    2013-01-07 07:00:00 2013-01-07 09:44:00 2013-01-07 10:27:00   -43 mins\n8    2013-03-06 19:05:00 2013-03-06 22:11:00 2013-03-06 22:25:00   -14 mins\n9    2013-01-15 08:00:00 2013-01-15 11:30:00 2013-01-15 11:25:00     5 mins\n10   2013-09-27 15:30:00 2013-09-27 19:07:00 2013-09-27 18:54:00    13 mins\n11   2013-05-31 17:00:00 2013-05-31 20:11:00 2013-05-31 20:25:00   -14 mins\n12   2013-12-23 07:51:00 2013-12-23 11:31:00 2013-12-23 11:37:00    -6 mins\n13   2013-09-05 11:25:00 2013-09-05 13:51:00 2013-09-05 14:25:00   -34 mins\n14   2013-01-24 07:15:00 2013-01-24 10:44:00 2013-01-24 10:40:00     4 mins\n15   2013-12-03 11:47:00 2013-12-03 15:44:00 2013-12-03 14:57:00    47 mins\n16   2013-01-01 06:00:00 2013-01-01 09:45:00 2013-01-01 09:31:00    14 mins\n17   2013-04-22 17:55:00 2013-04-22 23:05:00 2013-04-22 21:03:00   122 mins\n18   2013-04-29 06:01:00 2013-04-29 08:52:00 2013-04-29 09:33:00   -41 mins\n19   2013-02-10 16:55:00 2013-02-10 20:39:00 2013-02-10 20:09:00    30 mins\n20   2013-08-02 07:00:00 2013-08-02 09:50:00 2013-08-02 10:04:00   -14 mins\n21   2013-10-21 17:40:00 2013-10-21 20:26:00 2013-10-21 20:35:00    -9 mins\n22   2013-05-10 13:58:00 2013-05-10 16:49:00 2013-05-10 17:04:00   -15 mins\n23   2013-11-22 16:00:00 2013-11-22 20:00:00 2013-11-22 19:47:00    13 mins\n24   2013-05-07 17:15:00 2013-05-07 20:14:00 2013-05-07 20:12:00     2 mins\n25   2013-01-01 10:30:00 2013-01-01 13:51:00 2013-01-01 13:40:00    11 mins\n26   2013-07-09 10:13:00 2013-07-09 12:54:00 2013-07-09 12:56:00    -2 mins\n27   2013-04-11 19:44:00 2013-04-11 22:43:00 2013-04-11 22:55:00   -12 mins\n28   2013-05-19 08:30:00 2013-05-19 11:32:00 2013-05-19 11:47:00   -15 mins\n29   2013-07-03 09:03:00 2013-07-03 11:12:00 2013-07-03 12:00:00   -48 mins\n30   2013-11-02 09:00:00 2013-11-02 11:54:00 2013-11-02 12:10:00   -16 mins\n31   2013-10-19 17:29:00 2013-10-19 20:51:00 2013-10-19 20:30:00    21 mins\n32   2013-09-06 13:45:00 2013-09-06 16:06:00 2013-09-06 16:50:00   -44 mins\n33   2013-02-27 17:15:00 2013-02-27 20:20:00 2013-02-27 20:40:00   -20 mins\n34   2013-12-27 10:00:00 2013-12-27 13:05:00 2013-12-27 13:37:00   -32 mins\n35   2013-11-14 15:30:00 2013-11-14 18:53:00 2013-11-14 19:05:00   -12 mins\n36   2013-11-17 16:50:00 2013-11-17 21:16:00 2013-11-17 20:02:00    74 mins\n37   2013-10-04 07:00:00 2013-10-04 10:21:00 2013-10-04 10:25:00    -4 mins\n38   2013-08-18 19:40:00 2013-08-18 22:59:00 2013-08-18 22:55:00     4 mins\n39   2013-12-11 18:05:00 2013-12-11 23:55:00 2013-12-11 21:23:00   152 mins\n40   2013-11-01 21:40:00 2013-11-01 01:48:00 2013-11-01 00:40:00    68 mins\n41   2013-05-02 14:00:00 2013-05-02 17:05:00 2013-05-02 17:30:00   -25 mins\n42   2013-04-19 11:08:00 2013-04-19 13:56:00 2013-04-19 14:12:00   -16 mins\n43   2013-08-28 09:18:00 2013-08-28 12:36:00 2013-08-28 12:40:00    -4 mins\n44   2013-12-20 16:00:00 2013-12-20 20:23:00 2013-12-20 19:48:00    35 mins\n45   2013-10-04 20:00:00 2013-10-04 23:18:00 2013-10-04 23:28:00   -10 mins\n46   2013-02-23 17:30:00 2013-02-23 21:39:00 2013-02-23 20:46:00    53 mins\n47   2013-01-06 10:00:00 2013-01-06 13:25:00 2013-01-06 13:41:00   -16 mins\n48   2013-12-09 12:00:00 2013-12-09 15:19:00 2013-12-09 15:21:00    -2 mins\n49   2013-10-18 17:40:00 2013-10-18 20:49:00 2013-10-18 20:35:00    14 mins\n50   2013-09-22 10:45:00 2013-09-22 13:24:00 2013-09-22 13:49:00   -25 mins\n51   2013-07-01 21:50:00 2013-07-01 03:00:00 2013-07-01 01:00:00   120 mins\n52   2013-09-26 17:59:00 2013-09-26 21:01:00 2013-09-26 21:02:00    -1 mins\n53   2013-06-30 17:11:00 2013-06-30 21:12:00 2013-06-30 20:39:00    33 mins\n54   2013-06-07 18:36:00 2013-06-07 22:32:00 2013-06-07 21:55:00    37 mins\n55   2013-07-19 07:15:00 2013-07-19 09:29:00 2013-07-19 09:58:00   -29 mins\n56   2013-05-28 18:35:00 2013-05-28 21:38:00 2013-05-28 22:13:00   -35 mins\n57   2013-11-18 18:50:00 2013-11-18 21:56:00 2013-11-18 22:00:00    -4 mins\n58   2013-10-14 08:34:00 2013-10-14 12:21:00 2013-10-14 11:56:00    25 mins\n59   2013-06-29 19:00:00 2013-06-29 22:32:00 2013-06-29 22:45:00   -13 mins\n60   2013-08-21 20:56:00 2013-08-21 23:29:00 2013-08-21 23:59:00   -30 mins\n61   2013-09-13 09:18:00 2013-09-13 12:18:00 2013-09-13 12:40:00   -22 mins\n62   2013-05-13 18:00:00 2013-05-13 21:06:00 2013-05-13 21:15:00    -9 mins\n63   2013-09-10 10:30:00 2013-09-10 12:57:00 2013-09-10 13:25:00   -28 mins\n64   2013-05-20 12:00:00 2013-05-20 14:22:00 2013-05-20 15:05:00   -43 mins\n65   2013-07-25 14:30:00 2013-07-25 19:26:00 2013-07-25 17:54:00    92 mins\n66   2013-04-18 19:50:00 2013-04-18 23:28:00 2013-04-18 23:40:00   -12 mins\n67   2013-07-26 13:00:00 2013-07-26 15:50:00 2013-07-26 15:55:00    -5 mins\n68   2013-05-18 08:00:00 2013-05-18 10:53:00 2013-05-18 11:27:00   -34 mins\n69   2013-02-10 09:00:00 2013-02-10 12:05:00 2013-02-10 12:27:00   -22 mins\n70   2013-06-27 07:05:00 2013-06-27 09:40:00 2013-06-27 10:04:00   -24 mins\n71   2013-08-11 19:22:00 2013-08-11 22:49:00 2013-08-11 22:30:00    19 mins\n72   2013-07-26 08:40:00 2013-07-26 11:41:00 2013-07-26 11:32:00     9 mins\n73   2013-04-07 07:00:00 2013-04-07 10:26:00 2013-04-07 10:31:00    -5 mins\n74   2013-09-28 15:21:00 2013-09-28 18:04:00 2013-09-28 18:19:00   -15 mins\n75   2013-03-26 14:59:00 2013-03-26 18:04:00 2013-03-26 18:25:00   -21 mins\n76   2013-05-29 07:00:00 2013-05-29 10:13:00 2013-05-29 10:34:00   -21 mins\n77   2013-07-28 18:12:00 2013-07-28 00:17:00 2013-07-28 21:47:00 -1290 mins\n78   2013-05-13 18:55:00 2013-05-13 21:59:00 2013-05-13 22:20:00   -21 mins\n79   2013-12-11 09:46:00 2013-12-11 13:17:00 2013-12-11 13:13:00     4 mins\n80   2013-10-30 18:45:00 2013-10-30 22:27:00 2013-10-30 22:10:00    17 mins\n81   2013-08-02 13:47:00 2013-08-02 16:40:00 2013-08-02 16:58:00   -18 mins\n82   2013-12-02 07:00:00 2013-12-02 10:40:00 2013-12-02 10:37:00     3 mins\n83   2013-10-27 21:00:00 2013-10-27 00:14:00 2013-10-27 00:20:00    -6 mins\n84   2013-09-04 06:30:00 2013-09-04 09:09:00 2013-09-04 09:30:00   -21 mins\n85   2013-03-02 15:30:00 2013-03-02 18:37:00 2013-03-02 19:10:00   -33 mins\n86   2013-01-10 07:30:00 2013-01-10 11:01:00 2013-01-10 11:15:00   -14 mins\n87   2013-10-22 07:30:00 2013-10-22 10:34:00 2013-10-22 11:00:00   -26 mins\n88   2013-02-03 08:19:00 2013-02-03 12:17:00 2013-02-03 12:05:00    12 mins\n89   2013-10-17 07:00:00 2013-10-17 09:55:00 2013-10-17 10:20:00   -25 mins\n90   2013-08-23 07:15:00 2013-08-23 09:54:00 2013-08-23 10:10:00   -16 mins\n91   2013-01-13 17:25:00 2013-01-13 20:41:00 2013-01-13 20:40:00     1 mins\n92   2013-08-08 13:23:00 2013-08-08 16:38:00 2013-08-08 16:34:00     4 mins\n93   2013-09-23 17:10:00 2013-09-23 20:21:00 2013-09-23 20:33:00   -12 mins\n94   2013-01-25 07:00:00 2013-01-25 10:46:00 2013-01-25 10:34:00    12 mins\n95   2013-09-19 14:30:00 2013-09-19 17:41:00 2013-09-19 17:34:00     7 mins\n96   2013-04-09 10:35:00 2013-04-09 13:29:00 2013-04-09 14:08:00   -39 mins\n97   2013-03-08 07:30:00 2013-03-08 12:00:00 2013-03-08 11:00:00    60 mins\n98   2013-05-06 07:26:00 2013-05-06 10:00:00 2013-05-06 10:57:00   -57 mins\n99   2013-05-02 15:15:00 2013-05-02 17:50:00 2013-05-02 18:16:00   -26 mins\n100  2013-06-30 12:00:00 2013-06-30 14:26:00 2013-06-30 14:50:00   -24 mins\n101  2013-02-02 18:19:00 2013-02-02 21:07:00 2013-02-02 21:31:00   -24 mins\n102  2013-11-09 16:30:00 2013-11-09 19:29:00 2013-11-09 19:43:00   -14 mins\n103  2013-08-18 21:50:00 2013-08-18 00:21:00 2013-08-18 01:00:00   -39 mins\n104  2013-07-15 19:40:00 2013-07-15 21:59:00 2013-07-15 22:55:00   -56 mins\n105  2013-08-28 18:30:00 2013-08-28 22:17:00 2013-08-28 21:57:00    20 mins\n106  2013-11-26 17:00:00 2013-11-26 20:23:00 2013-11-26 20:35:00   -12 mins\n107  2013-01-22 17:10:00 2013-01-22 20:27:00 2013-01-22 20:36:00    -9 mins\n108  2013-11-11 13:57:00 2013-11-11 17:24:00 2013-11-11 17:28:00    -4 mins\n109  2013-07-07 07:41:00 2013-07-07 11:03:00 2013-07-07 11:01:00     2 mins\n110  2013-04-12 07:08:00 2013-04-12 10:18:00 2013-04-12 10:29:00   -11 mins\n111  2013-05-13 09:09:00 2013-05-13 11:16:00 2013-05-13 12:18:00   -62 mins\n112  2013-03-23 06:40:00 2013-03-23 09:48:00 2013-03-23 10:00:00   -12 mins\n113  2013-10-30 19:01:00 2013-10-30 22:01:00 2013-10-30 22:15:00   -14 mins\n114  2013-02-17 13:25:00 2013-02-17 16:36:00 2013-02-17 16:33:00     3 mins\n115  2013-03-05 12:00:00 2013-03-05 15:26:00 2013-03-05 15:11:00    15 mins\n116  2013-08-16 20:49:00 2013-08-16 00:20:00 2013-08-16 00:10:00    10 mins\n117  2013-08-03 16:00:00 2013-08-03 19:13:00 2013-08-03 19:13:00     0 mins\n118  2013-05-16 21:00:00 2013-05-16 23:50:00 2013-05-16 00:30:00  1400 mins\n119  2013-06-17 18:55:00 2013-06-17 22:57:00 2013-06-17 22:05:00    52 mins\n120  2013-06-01 11:43:00 2013-06-01 14:23:00 2013-06-01 15:00:00   -37 mins\n121  2013-10-11 13:45:00 2013-10-11 16:30:00 2013-10-11 16:50:00   -20 mins\n122  2013-12-28 09:00:00 2013-12-28 11:51:00 2013-12-28 12:25:00   -34 mins\n123  2013-12-06 18:15:00 2013-12-06 22:05:00 2013-12-06 21:57:00     8 mins\n124  2013-04-24 07:09:00 2013-04-24 10:23:00 2013-04-24 10:16:00     7 mins\n125  2013-05-06 17:29:00 2013-05-06 20:21:00 2013-05-06 21:10:00   -49 mins\n126  2013-05-14 18:25:00 2013-05-14 21:52:00 2013-05-14 21:50:00     2 mins\n127  2013-09-09 10:30:00 2013-09-09 13:10:00 2013-09-09 13:40:00   -30 mins\n128  2013-06-04 18:30:00 2013-06-04 21:42:00 2013-06-04 22:00:00   -18 mins\n129  2013-08-06 11:03:00 2013-08-06 13:39:00 2013-08-06 13:45:00    -6 mins\n130  2013-09-19 18:50:00 2013-09-19 22:58:00 2013-09-19 22:20:00    38 mins\n131  2013-01-28 10:00:00 2013-01-28 13:40:00 2013-01-28 13:41:00    -1 mins\n132  2013-07-10 18:00:00 2013-07-10 04:55:00 2013-07-10 21:30:00  -995 mins\n133  2013-04-14 17:29:00 2013-04-14 01:03:00 2013-04-14 21:05:00 -1202 mins\n134  2013-11-06 18:15:00 2013-11-06 21:25:00 2013-11-06 21:46:00   -21 mins\n135  2013-06-20 12:00:00 2013-06-20 14:50:00 2013-06-20 15:07:00   -17 mins\n136  2013-08-01 05:59:00 2013-08-01 09:09:00 2013-08-01 09:02:00     7 mins\n137  2013-05-24 14:35:00 2013-05-24 17:53:00 2013-05-24 17:54:00    -1 mins\n138  2013-05-24 12:14:00 2013-05-24 15:08:00 2013-05-24 15:20:00   -12 mins\n139  2013-06-17 09:15:00 2013-06-17 12:05:00 2013-06-17 12:10:00    -5 mins\n140  2013-07-08 09:35:00 2013-07-08 12:05:00 2013-07-08 12:21:00   -16 mins\n141  2013-08-20 10:06:00 2013-08-20 12:31:00 2013-08-20 12:55:00   -24 mins\n142  2013-09-07 17:40:00 2013-09-07 19:58:00 2013-09-07 20:35:00   -37 mins\n143  2013-02-10 08:40:00 2013-02-10 11:54:00 2013-02-10 11:51:00     3 mins\n144  2013-12-19 18:02:00 2013-12-19 21:31:00 2013-12-19 21:21:00    10 mins\n145  2013-02-20 20:45:00 2013-02-20 00:16:00 2013-02-20 23:57:00 -1421 mins\n146  2013-05-25 09:30:00 2013-05-25 12:55:00 2013-05-25 12:55:00     0 mins\n147  2013-07-15 16:30:00 2013-07-15 19:04:00 2013-07-15 19:39:00   -35 mins\n148  2013-07-11 13:38:00 2013-07-11 16:23:00 2013-07-11 16:34:00   -11 mins\n149  2013-01-01 15:30:00 2013-01-01 19:04:00 2013-01-01 19:10:00    -6 mins\n150  2013-03-25 08:25:00 2013-03-25 11:12:00 2013-03-25 11:33:00   -21 mins\n151  2013-01-10 11:00:00 2013-01-10 14:09:00 2013-01-10 14:25:00   -16 mins\n152  2013-03-28 07:36:00 2013-03-28 10:54:00 2013-03-28 11:15:00   -21 mins\n153  2013-08-14 17:05:00 2013-08-14 20:26:00 2013-08-14 20:30:00    -4 mins\n154  2013-07-24 07:15:00 2013-07-24 09:52:00 2013-07-24 10:10:00   -18 mins\n155  2013-06-07 19:39:00 2013-06-07 23:12:00 2013-06-07 23:18:00    -6 mins\n156  2013-05-20 09:09:00 2013-05-20 11:47:00 2013-05-20 12:18:00   -31 mins\n157  2013-02-08 08:40:00 2013-02-08 12:26:00 2013-02-08 12:04:00    22 mins\n158  2013-01-30 18:30:00 2013-01-30 21:45:00 2013-01-30 22:02:00   -17 mins\n159  2013-08-25 10:30:00 2013-08-25 13:29:00 2013-08-25 13:50:00   -21 mins\n160  2013-03-30 21:35:00 2013-03-30 00:32:00 2013-03-30 00:50:00   -18 mins\n161  2013-11-19 10:01:00 2013-11-19 13:55:00 2013-11-19 13:22:00    33 mins\n162  2013-08-12 15:30:00 2013-08-12 19:08:00 2013-08-12 18:55:00    13 mins\n163  2013-08-30 17:40:00 2013-08-30 20:12:00 2013-08-30 20:35:00   -23 mins\n164  2013-03-27 13:25:00 2013-03-27 16:33:00 2013-03-27 16:50:00   -17 mins\n165  2013-04-09 09:00:00 2013-04-09 11:38:00 2013-04-09 12:25:00   -47 mins\n166  2013-01-21 15:00:00 2013-01-21 17:58:00 2013-01-21 18:37:00   -39 mins\n167  2013-06-01 09:00:00 2013-06-01 11:46:00 2013-06-01 12:25:00   -39 mins\n168  2013-09-13 07:30:00 2013-09-13 10:11:00 2013-09-13 10:45:00   -34 mins\n169  2013-02-11 06:01:00 2013-02-11 09:51:00 2013-02-11 09:18:00    33 mins\n170  2013-10-03 11:25:00 2013-10-03 14:20:00 2013-10-03 14:25:00    -5 mins\n171  2013-02-24 08:04:00 2013-02-24 11:00:00 2013-02-24 11:29:00   -29 mins\n172  2013-09-27 13:00:00 2013-09-27 16:05:00 2013-09-27 16:14:00    -9 mins\n173  2013-07-30 10:30:00 2013-07-30 13:43:00 2013-07-30 13:45:00    -2 mins\n174  2013-08-11 18:00:00 2013-08-11 22:31:00 2013-08-11 21:02:00    89 mins\n175  2013-11-04 12:45:00 2013-11-04 17:01:00 2013-11-04 16:00:00    61 mins\n176  2013-10-07 16:55:00 2013-10-07 20:28:00 2013-10-07 20:15:00    13 mins\n177  2013-09-20 18:30:00 2013-09-20 23:18:00 2013-09-20 21:57:00    81 mins\n178  2013-09-14 13:00:00 2013-09-14 15:31:00 2013-09-14 15:55:00   -24 mins\n179  2013-04-15 16:33:00 2013-04-15 20:17:00 2013-04-15 19:45:00    32 mins\n180  2013-07-25 17:59:00 2013-07-25 22:03:00 2013-07-25 20:58:00    65 mins\n181  2013-11-17 07:30:00 2013-11-17 11:01:00 2013-11-17 11:00:00     1 mins\n182  2013-12-22 20:26:00 2013-12-22 00:44:00 2013-12-22 23:44:00 -1380 mins\n183  2013-08-23 07:30:00 2013-08-23 10:13:00 2013-08-23 10:45:00   -32 mins\n184  2013-01-18 18:30:00 2013-01-18 22:00:00 2013-01-18 21:48:00    12 mins\n185  2013-08-25 18:23:00 2013-08-25 21:16:00 2013-08-25 21:40:00   -24 mins\n186  2013-03-07 13:45:00 2013-03-07 16:56:00 2013-03-07 17:05:00    -9 mins\n187  2013-11-20 13:00:00 2013-11-20 16:10:00 2013-11-20 16:10:00     0 mins\n188  2013-04-19 20:00:00 2013-04-19 01:33:00 2013-04-19 23:25:00 -1312 mins\n189  2013-11-07 19:32:00 2013-11-07 23:40:00 2013-11-07 23:05:00    35 mins\n190  2013-08-21 14:10:00 2013-08-21 16:59:00 2013-08-21 17:01:00    -2 mins\n191  2013-02-16 11:15:00 2013-02-16 14:10:00 2013-02-16 14:24:00   -14 mins\n192  2013-04-22 06:01:00 2013-04-22 09:09:00 2013-04-22 09:33:00   -24 mins\n193  2013-03-02 16:55:00 2013-03-02 19:43:00 2013-03-02 20:30:00   -47 mins\n194  2013-05-09 13:45:00 2013-05-09 16:26:00 2013-05-09 17:00:00   -34 mins\n195  2013-12-08 07:29:00 2013-12-08 11:03:00 2013-12-08 10:45:00    18 mins\n196  2013-11-02 13:26:00 2013-11-02 16:23:00 2013-11-02 16:24:00    -1 mins\n197  2013-12-26 18:45:00 2013-12-26 21:39:00 2013-12-26 22:12:00   -33 mins\n198  2013-05-09 07:00:00 2013-05-09 09:48:00 2013-05-09 10:34:00   -46 mins\n199  2013-05-21 07:35:00 2013-05-21 10:40:00 2013-05-21 11:10:00   -30 mins\n200  2013-07-21 17:55:00 2013-07-21 21:58:00 2013-07-21 21:20:00    38 mins\n201  2013-12-29 16:36:00 2013-12-29 20:21:00 2013-12-29 20:26:00    -5 mins\n202  2013-12-21 15:15:00 2013-12-21 18:41:00 2013-12-21 18:33:00     8 mins\n203  2013-04-01 08:31:00 2013-04-01 11:26:00 2013-04-01 11:51:00   -25 mins\n204  2013-09-12 17:25:00 2013-09-12 23:59:00 2013-09-12 20:16:00   223 mins\n205  2013-05-14 18:50:00 2013-05-14 21:58:00 2013-05-14 22:25:00   -27 mins\n206  2013-06-28 07:55:00 2013-06-28 10:49:00 2013-06-28 11:15:00   -26 mins\n207  2013-12-16 09:00:00 2013-12-16 12:13:00 2013-12-16 12:10:00     3 mins\n208  2013-01-20 17:25:00 2013-01-20 20:53:00 2013-01-20 20:50:00     3 mins\n209  2013-06-07 14:55:00 2013-06-07 17:14:00 2013-06-07 17:52:00   -38 mins\n210  2013-02-28 18:15:00 2013-02-28 21:01:00 2013-02-28 21:47:00   -46 mins\n211  2013-01-03 12:00:00 2013-01-03 14:42:00 2013-01-03 15:45:00   -63 mins\n212  2013-06-12 17:15:00 2013-06-12 20:56:00 2013-06-12 20:40:00    16 mins\n213  2013-08-08 21:00:00 2013-08-08 01:00:00 2013-08-08 00:22:00    38 mins\n214  2013-09-28 08:54:00 2013-09-28 11:48:00 2013-09-28 12:13:00   -25 mins\n215  2013-06-19 07:06:00 2013-06-19 10:18:00 2013-06-19 10:01:00    17 mins\n216  2013-05-01 12:21:00 2013-05-01 15:20:00 2013-05-01 15:37:00   -17 mins\n217  2013-08-09 13:38:00 2013-08-09 16:43:00 2013-08-09 16:34:00     9 mins\n218  2013-07-18 10:28:00 2013-07-18 13:16:00 2013-07-18 13:39:00   -23 mins\n219  2013-02-23 17:25:00 2013-02-23 21:20:00 2013-02-23 20:50:00    30 mins\n220  2013-11-26 14:05:00 2013-11-26 16:55:00 2013-11-26 17:12:00   -17 mins\n221  2013-02-14 10:00:00 2013-02-14 12:59:00 2013-02-14 13:41:00   -42 mins\n222  2013-10-07 18:50:00 2013-10-07 23:28:00 2013-10-07 22:25:00    63 mins\n223  2013-10-25 20:00:00 2013-10-25 23:02:00 2013-10-25 23:28:00   -26 mins\n224  2013-02-04 19:00:00 2013-02-04 22:32:00 2013-02-04 23:01:00   -29 mins\n225  2013-05-18 13:45:00 2013-05-18 16:11:00 2013-05-18 17:00:00   -49 mins\n226  2013-05-05 12:00:00 2013-05-05 15:47:00 2013-05-05 15:19:00    28 mins\n227  2013-04-06 06:30:00 2013-04-06 09:20:00 2013-04-06 09:45:00   -25 mins\n228  2013-03-22 15:45:00 2013-03-22 19:43:00 2013-03-22 19:07:00    36 mins\n229  2013-12-04 12:00:00 2013-12-04 15:40:00 2013-12-04 15:10:00    30 mins\n230  2013-04-16 17:15:00 2013-04-16 20:15:00 2013-04-16 20:37:00   -22 mins\n231  2013-08-24 11:15:00 2013-08-24 13:31:00 2013-08-24 14:04:00   -33 mins\n232  2013-09-22 12:00:00 2013-09-22 15:00:00 2013-09-22 14:54:00     6 mins\n233  2013-12-10 15:30:00 2013-12-10 19:05:00 2013-12-10 18:56:00     9 mins\n234  2013-07-23 20:25:00 2013-07-23 00:33:00 2013-07-23 23:24:00 -1371 mins\n235  2013-08-17 09:41:00 2013-08-17 11:59:00 2013-08-17 12:35:00   -36 mins\n236  2013-10-28 13:00:00 2013-10-28 16:24:00 2013-10-28 16:22:00     2 mins\n237  2013-08-05 18:55:00 2013-08-05 22:12:00 2013-08-05 22:05:00     7 mins\n238  2013-03-27 18:47:00 2013-03-27 22:10:00 2013-03-27 22:19:00    -9 mins\n239  2013-06-19 19:31:00 2013-06-19 23:12:00 2013-06-19 23:05:00     7 mins\n240  2013-11-24 16:45:00 2013-11-24 19:50:00 2013-11-24 20:10:00   -20 mins\n241  2013-09-24 12:00:00 2013-09-24 14:52:00 2013-09-24 14:54:00    -2 mins\n242  2013-05-25 07:35:00 2013-05-25 10:49:00 2013-05-25 11:10:00   -21 mins\n243  2013-10-31 15:30:00 2013-10-31 18:43:00 2013-10-31 18:54:00   -11 mins\n244  2013-01-06 12:58:00 2013-01-06 16:36:00 2013-01-06 16:10:00    26 mins\n245  2013-11-11 20:20:00 2013-11-11 00:11:00 2013-11-11 23:59:00 -1428 mins\n246  2013-02-07 07:30:00 2013-02-07 10:49:00 2013-02-07 11:00:00   -11 mins\n247  2013-08-05 22:45:00 2013-08-05 02:28:00 2013-08-05 01:35:00    53 mins\n248  2013-05-18 18:52:00 2013-05-18 21:52:00 2013-05-18 21:48:00     4 mins\n249  2013-06-09 16:32:00 2013-06-09 19:35:00 2013-06-09 19:56:00   -21 mins\n250  2013-06-02 09:29:00 2013-06-02 12:19:00 2013-06-02 12:41:00   -22 mins\n251  2013-01-29 17:45:00 2013-01-29 21:37:00 2013-01-29 21:20:00    17 mins\n252  2013-09-09 16:40:00 2013-09-09 19:32:00 2013-09-09 19:47:00   -15 mins\n253  2013-07-03 09:10:00 2013-07-03 12:02:00 2013-07-03 12:15:00   -13 mins\n254  2013-09-16 17:00:00 2013-09-16 19:54:00 2013-09-16 20:18:00   -24 mins\n255  2013-07-20 18:00:00 2013-07-20 20:52:00 2013-07-20 21:30:00   -38 mins\n256  2013-09-21 12:00:00 2013-09-21 16:16:00 2013-09-21 14:55:00    81 mins\n257  2013-05-29 19:31:00 2013-05-29 23:02:00 2013-05-29 23:05:00    -3 mins\n258  2013-08-11 10:30:00 2013-08-11 13:49:00 2013-08-11 13:50:00    -1 mins\n259  2013-03-21 15:45:00 2013-03-21 19:08:00 2013-03-21 19:07:00     1 mins\n260  2013-12-19 12:00:00 2013-12-19 15:22:00 2013-12-19 15:35:00   -13 mins\n261  2013-09-06 06:30:00 2013-09-06 08:52:00 2013-09-06 09:30:00   -38 mins\n262  2013-06-06 06:00:00 2013-06-06 08:32:00 2013-06-06 09:00:00   -28 mins\n263  2013-05-14 17:55:00 2013-05-14 20:23:00 2013-05-14 21:03:00   -40 mins\n264  2013-05-22 16:00:00 2013-05-22 19:29:00 2013-05-22 19:51:00   -22 mins\n265  2013-09-11 18:55:00 2013-09-11 00:30:00 2013-09-11 22:00:00 -1290 mins\n266  2013-10-15 08:52:00 2013-10-15 11:51:00 2013-10-15 12:08:00   -17 mins\n267  2013-05-26 15:20:00 2013-05-26 18:11:00 2013-05-26 18:25:00   -14 mins\n268  2013-01-17 15:40:00 2013-01-17 19:03:00 2013-01-17 19:00:00     3 mins\n269  2013-05-19 10:00:00 2013-05-19 12:42:00 2013-05-19 13:29:00   -47 mins\n270  2013-05-14 09:30:00 2013-05-14 12:49:00 2013-05-14 13:05:00   -16 mins\n271  2013-11-13 09:00:00 2013-11-13 11:54:00 2013-11-13 12:35:00   -41 mins\n272  2013-02-28 10:35:00 2013-02-28 13:35:00 2013-02-28 14:04:00   -29 mins\n273  2013-07-01 10:30:00 2013-07-01 14:16:00 2013-07-01 13:45:00    31 mins\n274  2013-07-26 18:00:00 2013-07-26 22:25:00 2013-07-26 21:19:00    66 mins\n275  2013-08-09 20:01:00 2013-08-09 01:21:00 2013-08-09 23:05:00 -1304 mins\n276  2013-09-07 09:59:00 2013-09-07 13:01:00 2013-09-07 13:14:00   -13 mins\n277  2013-05-01 16:29:00 2013-05-01 19:30:00 2013-05-01 19:38:00    -8 mins\n278  2013-11-23 15:45:00 2013-11-23 19:18:00 2013-11-23 19:20:00    -2 mins\n279  2013-04-12 09:30:00 2013-04-12 13:12:00 2013-04-12 13:09:00     3 mins\n280  2013-05-22 09:24:00 2013-05-22 12:55:00 2013-05-22 12:59:00    -4 mins\n281  2013-04-09 18:00:00 2013-04-09 21:42:00 2013-04-09 21:36:00     6 mins\n282  2013-11-28 10:01:00 2013-11-28 13:15:00 2013-11-28 13:30:00   -15 mins\n283  2013-03-22 10:30:00 2013-03-22 14:02:00 2013-03-22 14:10:00    -8 mins\n284  2013-05-07 19:00:00 2013-05-07 21:49:00 2013-05-07 22:51:00   -62 mins\n285  2013-06-02 10:30:00 2013-06-02 13:45:00 2013-06-02 13:50:00    -5 mins\n286  2013-05-24 17:00:00 2013-05-24 21:05:00 2013-05-24 20:35:00    30 mins\n287  2013-04-02 20:05:00 2013-04-02 22:55:00 2013-04-02 23:23:00   -28 mins\n288  2013-05-15 18:55:00 2013-05-15 23:10:00 2013-05-15 22:20:00    50 mins\n289  2013-06-16 18:21:00 2013-06-16 22:35:00 2013-06-16 21:49:00    46 mins\n290  2013-12-07 06:40:00 2013-12-07 10:32:00 2013-12-07 10:03:00    29 mins\n291  2013-08-24 18:24:00 2013-08-24 20:48:00 2013-08-24 21:29:00   -41 mins\n292  2013-03-28 19:49:00 2013-03-28 23:12:00 2013-03-28 23:21:00    -9 mins\n293  2013-09-01 08:46:00 2013-09-01 11:11:00 2013-09-01 11:40:00   -29 mins\n294  2013-08-08 14:48:00 2013-08-08 17:41:00 2013-08-08 17:45:00    -4 mins\n295  2013-07-18 17:10:00 2013-07-18 20:15:00 2013-07-18 20:15:00     0 mins\n296  2013-02-02 16:55:00 2013-02-02 20:00:00 2013-02-02 20:15:00   -15 mins\n297  2013-03-25 07:00:00 2013-03-25 09:53:00 2013-03-25 10:44:00   -51 mins\n298  2013-02-22 07:30:00 2013-02-22 10:40:00 2013-02-22 11:00:00   -20 mins\n299  2013-11-22 08:00:00 2013-11-22 11:32:00 2013-11-22 11:36:00    -4 mins\n300  2013-04-01 07:30:00 2013-04-01 11:57:00 2013-04-01 11:00:00    57 mins\n301  2013-12-05 18:38:00 2013-12-05 22:39:00 2013-12-05 22:14:00    25 mins\n302  2013-11-19 16:45:00 2013-11-19 19:50:00 2013-11-19 20:00:00   -10 mins\n303  2013-03-15 11:15:00 2013-03-15 14:15:00 2013-03-15 14:24:00    -9 mins\n304  2013-06-28 15:28:00 2013-06-28 19:23:00 2013-06-28 18:55:00    28 mins\n305  2013-02-11 21:00:00 2013-02-11 00:17:00 2013-02-11 00:31:00   -14 mins\n306  2013-03-19 18:29:00 2013-03-19 21:22:00 2013-03-19 21:47:00   -25 mins\n307  2013-01-31 09:00:00 2013-01-31 12:26:00 2013-01-31 12:20:00     6 mins\n308  2013-11-17 20:00:00 2013-11-17 23:42:00 2013-11-17 23:15:00    27 mins\n309  2013-04-11 19:40:00 2013-04-11 01:18:00 2013-04-11 22:58:00 -1300 mins\n310  2013-08-28 14:53:00 2013-08-28 18:31:00 2013-08-28 18:11:00    20 mins\n311  2013-12-25 20:00:00 2013-12-25 23:22:00 2013-12-25 23:25:00    -3 mins\n312  2013-08-17 16:35:00 2013-08-17 18:51:00 2013-08-17 19:44:00   -53 mins\n313  2013-04-05 07:10:00 2013-04-05 10:19:00 2013-04-05 10:35:00   -16 mins\n314  2013-07-16 18:22:00 2013-07-16 22:11:00 2013-07-16 21:55:00    16 mins\n315  2013-08-17 08:39:00 2013-08-17 11:58:00 2013-08-17 11:41:00    17 mins\n316  2013-04-06 10:05:00 2013-04-06 13:10:00 2013-04-06 13:13:00    -3 mins\n317  2013-11-21 16:45:00 2013-11-21 20:20:00 2013-11-21 20:00:00    20 mins\n318  2013-08-29 09:10:00 2013-08-29 11:47:00 2013-08-29 12:20:00   -33 mins\n319  2013-06-27 09:15:00 2013-06-27 11:59:00 2013-06-27 12:15:00   -16 mins\n320  2013-03-22 19:49:00 2013-03-22 23:19:00 2013-03-22 23:21:00    -2 mins\n321  2013-10-18 07:00:00 2013-10-18 10:04:00 2013-10-18 10:03:00     1 mins\n322  2013-04-04 17:25:00 2013-04-04 20:13:00 2013-04-04 20:40:00   -27 mins\n323  2013-07-24 18:55:00 2013-07-24 22:14:00 2013-07-24 22:16:00    -2 mins\n324  2013-06-13 10:00:00 2013-06-13 13:44:00 2013-06-13 13:19:00    25 mins\n325  2013-01-11 07:00:00 2013-01-11 10:26:00 2013-01-11 10:27:00    -1 mins\n326  2013-12-19 14:45:00 2013-12-19 18:19:00 2013-12-19 18:13:00     6 mins\n327  2013-07-25 13:00:00 2013-07-25 15:54:00 2013-07-25 15:55:00    -1 mins\n328  2013-10-18 08:45:00 2013-10-18 11:33:00 2013-10-18 11:40:00    -7 mins\n329  2013-01-16 18:20:00 2013-01-16 21:51:00 2013-01-16 21:50:00     1 mins\n330  2013-05-17 14:00:00 2013-05-17 17:05:00 2013-05-17 17:15:00   -10 mins\n331  2013-11-04 17:34:00 2013-11-04 21:37:00 2013-11-04 20:46:00    51 mins\n332  2013-11-06 18:10:00 2013-11-06 21:27:00 2013-11-06 21:29:00    -2 mins\n333  2013-04-25 18:04:00 2013-04-25 22:03:00 2013-04-25 21:45:00    18 mins\n334  2013-12-16 12:00:00 2013-12-16 16:25:00 2013-12-16 15:26:00    59 mins\n335  2013-05-06 13:58:00 2013-05-06 16:34:00 2013-05-06 17:04:00   -30 mins\n336  2013-07-19 20:59:00 2013-07-19 00:57:00 2013-07-19 00:12:00    45 mins\n337  2013-10-06 19:08:00 2013-10-06 22:08:00 2013-10-06 22:16:00    -8 mins\n338  2013-12-05 16:29:00 2013-12-05 22:05:00 2013-12-05 19:46:00   139 mins\n339  2013-01-10 07:00:00 2013-01-10 10:06:00 2013-01-10 10:27:00   -21 mins\n340  2013-05-22 21:00:00 2013-05-22 01:06:00 2013-05-22 00:30:00    36 mins\n341  2013-04-02 18:29:00 2013-04-02 23:20:00 2013-04-02 21:47:00    93 mins\n342  2013-03-15 21:00:00 2013-03-15 00:13:00 2013-03-15 00:32:00   -19 mins\n343  2013-02-02 15:27:00 2013-02-02 18:50:00 2013-02-02 18:53:00    -3 mins\n344  2013-08-24 21:50:00 2013-08-24 00:33:00 2013-08-24 01:00:00   -27 mins\n345  2013-12-24 20:21:00 2013-12-24 23:38:00 2013-12-24 23:57:00   -19 mins\n346  2013-11-03 17:59:00 2013-11-03 22:59:00 2013-11-03 20:52:00   127 mins\n347  2013-04-06 18:45:00 2013-04-06 21:56:00 2013-04-06 22:17:00   -21 mins\n348  2013-05-12 13:15:00 2013-05-12 15:41:00 2013-05-12 16:16:00   -35 mins\n349  2013-01-02 12:58:00 2013-01-02 15:35:00 2013-01-02 16:10:00   -35 mins\n350  2013-08-04 18:30:00 2013-08-04 22:35:00 2013-08-04 21:55:00    40 mins\n351  2013-10-10 12:00:00 2013-10-10 14:59:00 2013-10-10 15:15:00   -16 mins\n352  2013-08-20 07:59:00 2013-08-20 11:16:00 2013-08-20 11:03:00    13 mins\n353  2013-10-03 10:30:00 2013-10-03 13:54:00 2013-10-03 13:25:00    29 mins\n354  2013-10-20 15:30:00 2013-10-20 19:06:00 2013-10-20 18:54:00    12 mins\n355  2013-12-15 10:30:00 2013-12-15 13:23:00 2013-12-15 13:40:00   -17 mins\n356  2013-12-13 08:22:00 2013-12-13 11:36:00 2013-12-13 11:42:00    -6 mins\n357  2013-04-24 07:05:00 2013-04-24 10:35:00 2013-04-24 10:30:00     5 mins\n358  2013-05-20 10:00:00 2013-05-20 12:41:00 2013-05-20 13:29:00   -48 mins\n359  2013-06-23 06:00:00 2013-06-23 08:46:00 2013-06-23 09:10:00   -24 mins\n360  2013-09-07 06:59:00 2013-09-07 09:14:00 2013-09-07 09:49:00   -35 mins\n361  2013-06-11 13:59:00 2013-06-11 17:49:00 2013-06-11 17:24:00    25 mins\n362  2013-03-24 15:45:00 2013-03-24 18:55:00 2013-03-24 19:02:00    -7 mins\n363  2013-07-02 17:00:00 2013-07-02 20:42:00 2013-07-02 20:16:00    26 mins\n364  2013-11-15 18:45:00 2013-11-15 22:11:00 2013-11-15 22:10:00     1 mins\n365  2013-10-21 18:03:00 2013-10-21 21:36:00 2013-10-21 21:17:00    19 mins\n366  2013-09-17 18:50:00 2013-09-17 21:56:00 2013-09-17 22:12:00   -16 mins\n367  2013-06-03 07:00:00 2013-06-03 10:18:00 2013-06-03 10:34:00   -16 mins\n368  2013-08-15 07:00:00 2013-08-15 09:51:00 2013-08-15 10:04:00   -13 mins\n369  2013-11-15 16:59:00 2013-11-15 20:11:00 2013-11-15 20:34:00   -23 mins\n370  2013-02-04 20:05:00 2013-02-04 23:36:00 2013-02-04 23:35:00     1 mins\n371  2013-01-23 21:00:00 2013-01-23 00:25:00 2013-01-23 00:31:00    -6 mins\n372  2013-05-21 17:29:00 2013-05-21 21:03:00 2013-05-21 21:10:00    -7 mins\n373  2013-05-04 10:30:00 2013-05-04 13:00:00 2013-05-04 13:40:00   -40 mins\n374  2013-11-08 16:50:00 2013-11-08 20:11:00 2013-11-08 20:02:00     9 mins\n375  2013-04-13 08:35:00 2013-04-13 11:36:00 2013-04-13 11:48:00   -12 mins\n376  2013-04-29 10:11:00 2013-04-29 13:22:00 2013-04-29 13:17:00     5 mins\n377  2013-11-25 08:00:00 2013-11-25 11:28:00 2013-11-25 11:34:00    -6 mins\n378  2013-10-25 20:17:00 2013-10-25 22:38:00 2013-10-25 23:20:00   -42 mins\n379  2013-11-27 06:39:00 2013-11-27 09:30:00 2013-11-27 09:55:00   -25 mins\n380  2013-12-18 10:19:00 2013-12-18 14:08:00 2013-12-18 13:50:00    18 mins\n381  2013-06-14 13:54:00 2013-06-14 16:37:00 2013-06-14 16:42:00    -5 mins\n382  2013-12-14 08:00:00 2013-12-14 11:05:00 2013-12-14 11:35:00   -30 mins\n383  2013-05-06 06:13:00 2013-05-06 08:57:00 2013-05-06 09:35:00   -38 mins\n384  2013-09-25 08:57:00 2013-09-25 12:06:00 2013-09-25 11:58:00     8 mins\n385  2013-12-04 10:30:00 2013-12-04 14:30:00 2013-12-04 14:05:00    25 mins\n386  2013-12-04 08:50:00 2013-12-04 12:49:00 2013-12-04 12:28:00    21 mins\n387  2013-09-09 13:45:00 2013-09-09 16:10:00 2013-09-09 16:50:00   -40 mins\n388  2013-11-11 12:00:00 2013-11-11 15:07:00 2013-11-11 15:20:00   -13 mins\n389  2013-02-12 08:35:00 2013-02-12 11:38:00 2013-02-12 12:15:00   -37 mins\n390  2013-03-03 15:56:00 2013-03-03 19:34:00 2013-03-03 19:25:00     9 mins\n391  2013-02-02 13:20:00 2013-02-02 16:51:00 2013-02-02 16:50:00     1 mins\n392  2013-01-17 10:00:00 2013-01-17 13:15:00 2013-01-17 13:41:00   -26 mins\n393  2013-09-03 18:50:00 2013-09-03 22:28:00 2013-09-03 22:20:00     8 mins\n394  2013-07-18 15:20:00 2013-07-18 17:44:00 2013-07-18 18:14:00   -30 mins\n395  2013-05-17 08:00:00 2013-05-17 10:41:00 2013-05-17 11:35:00   -54 mins\n396  2013-10-18 08:52:00 2013-10-18 11:28:00 2013-10-18 12:08:00   -40 mins\n397  2013-05-27 12:00:00 2013-05-27 14:54:00 2013-05-27 15:05:00   -11 mins\n398  2013-01-18 14:29:00 2013-01-18 17:40:00 2013-01-18 17:54:00   -14 mins\n399  2013-07-25 12:00:00 2013-07-25 14:38:00 2013-07-25 15:01:00   -23 mins\n400  2013-11-19 07:30:00 2013-11-19 10:36:00 2013-11-19 10:55:00   -19 mins\n401  2013-05-24 16:40:00 2013-05-24 19:54:00 2013-05-24 19:56:00    -2 mins\n402  2013-01-21 19:50:00 2013-01-21 23:23:00 2013-01-21 23:35:00   -12 mins\n403  2013-02-17 15:15:00 2013-02-17 18:17:00 2013-02-17 18:25:00    -8 mins\n404  2013-04-19 18:30:00 2013-04-19 21:43:00 2013-04-19 21:51:00    -8 mins\n405  2013-08-14 18:00:00 2013-08-14 21:28:00 2013-08-14 21:02:00    26 mins\n406  2013-10-09 17:29:00 2013-10-09 20:22:00 2013-10-09 20:30:00    -8 mins\n407  2013-05-02 09:00:00 2013-05-02 11:51:00 2013-05-02 12:10:00   -19 mins\n408  2013-11-25 07:30:00 2013-11-25 10:34:00 2013-11-25 11:10:00   -36 mins\n409  2013-11-13 17:25:00 2013-11-13 19:56:00 2013-11-13 20:40:00   -44 mins\n410  2013-11-01 13:55:00 2013-11-01 16:58:00 2013-11-01 17:17:00   -19 mins\n411  2013-04-04 07:00:00 2013-04-04 09:54:00 2013-04-04 10:29:00   -35 mins\n412  2013-05-30 06:00:00 2013-05-30 09:01:00 2013-05-30 09:16:00   -15 mins\n413  2013-04-02 07:30:00 2013-04-02 10:43:00 2013-04-02 10:50:00    -7 mins\n414  2013-07-07 18:55:00 2013-07-07 03:09:00 2013-07-07 22:15:00 -1146 mins\n415  2013-06-25 19:15:00 2013-06-25 22:59:00 2013-06-25 22:30:00    29 mins\n416  2013-10-05 16:25:00 2013-10-05 19:17:00 2013-10-05 19:32:00   -15 mins\n417  2013-03-26 07:45:00 2013-03-26 11:03:00 2013-03-26 11:25:00   -22 mins\n418  2013-08-03 17:59:00 2013-08-03 20:43:00 2013-08-03 20:58:00   -15 mins\n419  2013-06-16 17:32:00 2013-06-16 21:16:00 2013-06-16 21:14:00     2 mins\n420  2013-07-05 17:05:00 2013-07-05 19:38:00 2013-07-05 19:57:00   -19 mins\n421  2013-02-21 21:35:00 2013-02-21 00:52:00 2013-02-21 00:50:00     2 mins\n422  2013-12-15 16:59:00 2013-12-15 20:21:00 2013-12-15 20:34:00   -13 mins\n423  2013-10-12 07:00:00 2013-10-12 10:20:00 2013-10-12 10:25:00    -5 mins\n424  2013-09-07 14:48:00 2013-09-07 17:25:00 2013-09-07 18:01:00   -36 mins\n425  2013-09-27 19:47:00 2013-09-27 22:45:00 2013-09-27 22:59:00   -14 mins\n426  2013-09-13 20:25:00 2013-09-13 23:10:00 2013-09-13 23:28:00   -18 mins\n427  2013-07-16 15:40:00 2013-07-16 19:21:00 2013-07-16 18:58:00    23 mins\n428  2013-12-15 14:00:00 2013-12-15 16:54:00 2013-12-15 17:10:00   -16 mins\n429  2013-11-15 09:10:00 2013-11-15 12:14:00 2013-11-15 12:20:00    -6 mins\n430  2013-06-10 07:05:00 2013-06-10 09:56:00 2013-06-10 10:04:00    -8 mins\n431  2013-02-07 19:05:00 2013-02-07 22:53:00 2013-02-07 22:35:00    18 mins\n432  2013-11-26 16:32:00 2013-11-26 19:34:00 2013-11-26 20:14:00   -40 mins\n433  2013-07-15 16:00:00 2013-07-15 18:59:00 2013-07-15 19:38:00   -39 mins\n434  2013-11-20 18:30:00 2013-11-20 22:32:00 2013-11-20 22:06:00    26 mins\n435  2013-12-25 09:21:00 2013-12-25 12:44:00 2013-12-25 12:35:00     9 mins\n436  2013-08-31 20:29:00 2013-08-31 23:39:00 2013-08-31 23:59:00   -20 mins\n437  2013-09-04 08:25:00 2013-09-04 11:24:00 2013-09-04 11:48:00   -24 mins\n438  2013-04-16 06:00:00 2013-04-16 09:04:00 2013-04-16 09:22:00   -18 mins\n439  2013-10-19 15:21:00 2013-10-19 18:33:00 2013-10-19 18:19:00    14 mins\n440  2013-08-26 07:00:00 2013-08-26 09:44:00 2013-08-26 10:14:00   -30 mins\n441  2013-08-24 15:35:00 2013-08-24 18:25:00 2013-08-24 18:53:00   -28 mins\n442  2013-06-09 14:59:00 2013-06-09 17:51:00 2013-06-09 18:05:00   -14 mins\n443  2013-05-01 18:30:00 2013-05-01 21:30:00 2013-05-01 22:00:00   -30 mins\n444  2013-11-25 20:25:00 2013-11-25 23:45:00 2013-11-25 23:40:00     5 mins\n445  2013-08-14 12:18:00 2013-08-14 15:12:00 2013-08-14 15:16:00    -4 mins\n446  2013-11-15 10:30:00 2013-11-15 14:05:00 2013-11-15 13:35:00    30 mins\n447  2013-06-19 17:54:00 2013-06-19 21:20:00 2013-06-19 21:00:00    20 mins\n448  2013-10-29 07:00:00 2013-10-29 10:28:00 2013-10-29 10:25:00     3 mins\n449  2013-04-15 10:30:00 2013-04-15 14:12:00 2013-04-15 14:05:00     7 mins\n450  2013-04-12 07:05:00 2013-04-12 10:17:00 2013-04-12 10:30:00   -13 mins\n451  2013-10-22 10:30:00 2013-10-22 13:29:00 2013-10-22 13:55:00   -26 mins\n452  2013-10-12 16:45:00 2013-10-12 20:07:00 2013-10-12 20:15:00    -8 mins\n453  2013-09-21 14:25:00 2013-09-21 17:30:00 2013-09-21 17:29:00     1 mins\n454  2013-01-13 09:00:00 2013-01-13 12:25:00 2013-01-13 12:20:00     5 mins\n455  2013-04-19 09:10:00 2013-04-19 13:03:00 2013-04-19 12:35:00    28 mins\n456  2013-12-03 06:39:00 2013-12-03 10:30:00 2013-12-03 09:55:00    35 mins\n457  2013-08-05 19:39:00 2013-08-05 23:01:00 2013-08-05 22:34:00    27 mins\n458  2013-09-06 10:30:00 2013-09-06 13:19:00 2013-09-06 13:50:00   -31 mins\n459  2013-12-13 09:00:00 2013-12-13 12:01:00 2013-12-13 12:10:00    -9 mins\n460  2013-05-25 18:55:00 2013-05-25 22:13:00 2013-05-25 22:20:00    -7 mins\n461  2013-06-09 18:30:00 2013-06-09 22:14:00 2013-06-09 21:55:00    19 mins\n462  2013-02-11 09:00:00 2013-02-11 12:26:00 2013-02-11 12:20:00     6 mins\n463  2013-09-12 19:30:00 2013-09-12 01:11:00 2013-09-12 22:44:00 -1293 mins\n464  2013-03-31 15:30:00 2013-03-31 20:04:00 2013-03-31 19:22:00    42 mins\n465  2013-07-08 07:30:00 2013-07-08 10:26:00 2013-07-08 10:45:00   -19 mins\n466  2013-07-06 12:08:00 2013-07-06 14:51:00 2013-07-06 14:52:00    -1 mins\n467  2013-05-26 16:32:00 2013-05-26 19:49:00 2013-05-26 19:56:00    -7 mins\n468  2013-09-04 07:40:00 2013-09-04 10:30:00 2013-09-04 10:55:00   -25 mins\n469  2013-01-08 07:45:00 2013-01-08 10:58:00 2013-01-08 11:25:00   -27 mins\n470  2013-09-16 16:19:00 2013-09-16 19:32:00 2013-09-16 19:43:00   -11 mins\n471  2013-05-01 08:20:00 2013-05-01 11:35:00 2013-05-01 11:50:00   -15 mins\n472  2013-11-11 07:59:00 2013-11-11 12:02:00 2013-11-11 11:33:00    29 mins\n473  2013-08-02 20:59:00 2013-08-02 23:51:00 2013-08-02 00:12:00  1419 mins\n474  2013-04-14 09:00:00 2013-04-14 12:10:00 2013-04-14 12:25:00   -15 mins\n475  2013-10-01 12:00:00 2013-10-01 14:44:00 2013-10-01 15:15:00   -31 mins\n476  2013-11-23 10:30:00 2013-11-23 14:18:00 2013-11-23 13:55:00    23 mins\n477  2013-04-21 17:25:00 2013-04-21 20:16:00 2013-04-21 20:40:00   -24 mins\n478  2013-06-29 07:15:00 2013-06-29 09:59:00 2013-06-29 10:10:00   -11 mins\n479  2013-11-19 14:15:00 2013-11-19 17:11:00 2013-11-19 17:36:00   -25 mins\n480  2013-10-27 18:50:00 2013-10-27 22:09:00 2013-10-27 22:00:00     9 mins\n481  2013-03-18 14:25:00 2013-03-18 17:53:00 2013-03-18 17:50:00     3 mins\n482  2013-08-09 09:15:00 2013-08-09 12:18:00 2013-08-09 12:10:00     8 mins\n483  2013-10-11 13:00:00 2013-10-11 16:00:00 2013-10-11 16:10:00   -10 mins\n484  2013-06-04 10:30:00 2013-06-04 13:19:00 2013-06-04 13:50:00   -31 mins\n485  2013-05-06 13:00:00 2013-05-06 15:53:00 2013-05-06 16:15:00   -22 mins\n486  2013-03-12 19:35:00 2013-03-12 22:49:00 2013-03-12 23:16:00   -27 mins\n487  2013-10-11 15:30:00 2013-10-11 18:44:00 2013-10-11 18:54:00   -10 mins\n488  2013-11-14 13:45:00 2013-11-14 16:35:00 2013-11-14 16:50:00   -15 mins\n489  2013-06-13 08:33:00 2013-06-13 12:20:00 2013-06-13 11:39:00    41 mins\n490  2013-03-14 13:45:00 2013-03-14 16:15:00 2013-03-14 17:05:00   -50 mins\n491  2013-09-12 07:30:00 2013-09-12 10:36:00 2013-09-12 10:45:00    -9 mins\n492  2013-08-20 20:25:00 2013-08-20 23:13:00 2013-08-20 23:24:00   -11 mins\n493  2013-07-27 15:26:00 2013-07-27 18:18:00 2013-07-27 18:20:00    -2 mins\n494  2013-10-21 15:30:00 2013-10-21 18:43:00 2013-10-21 18:45:00    -2 mins\n495  2013-05-03 08:00:00 2013-05-03 10:56:00 2013-05-03 11:35:00   -39 mins\n496  2013-04-23 07:08:00 2013-04-23 10:32:00 2013-04-23 10:29:00     3 mins\n497  2013-11-26 06:39:00 2013-11-26 10:04:00 2013-11-26 10:02:00     2 mins\n498  2013-07-01 08:40:00 2013-07-01 11:26:00 2013-07-01 11:39:00   -13 mins\n499  2013-12-03 14:32:00 2013-12-03 18:23:00 2013-12-03 17:59:00    24 mins\n500  2013-10-13 18:15:00 2013-10-13 21:32:00 2013-10-13 21:38:00    -6 mins\n501  2013-10-11 12:00:00 2013-10-11 14:35:00 2013-10-11 14:55:00   -20 mins\n502  2013-09-23 18:30:00 2013-09-23 22:25:00 2013-09-23 21:57:00    28 mins\n503  2013-06-22 16:00:00 2013-06-22 19:26:00 2013-06-22 19:35:00    -9 mins\n504  2013-03-01 07:10:00 2013-03-01 09:58:00 2013-03-01 10:35:00   -37 mins\n505  2013-08-26 19:51:00 2013-08-26 22:02:00 2013-08-26 22:47:00   -45 mins\n506  2013-10-08 08:57:00 2013-10-08 11:51:00 2013-10-08 11:51:00     0 mins\n507  2013-05-23 17:25:00 2013-05-23 22:00:00 2013-05-23 20:40:00    80 mins\n508  2013-10-06 07:30:00 2013-10-06 10:05:00 2013-10-06 11:00:00   -55 mins\n509  2013-07-15 16:11:00 2013-07-15 18:54:00 2013-07-15 19:24:00   -30 mins\n510  2013-02-19 17:15:00 2013-02-19 20:45:00 2013-02-19 20:40:00     5 mins\n511  2013-07-08 17:41:00 2013-07-08 21:40:00 2013-07-08 20:37:00    63 mins\n512  2013-10-14 10:30:00 2013-10-14 13:43:00 2013-10-14 13:55:00   -12 mins\n513  2013-12-10 10:30:00 2013-12-10 14:33:00 2013-12-10 14:05:00    28 mins\n514  2013-10-21 18:35:00 2013-10-21 21:35:00 2013-10-21 21:38:00    -3 mins\n515  2013-07-30 07:30:00 2013-07-30 10:27:00 2013-07-30 10:25:00     2 mins\n516  2013-04-12 06:00:00 2013-04-12 09:06:00 2013-04-12 09:03:00     3 mins\n517  2013-07-02 07:15:00 2013-07-02 09:35:00 2013-07-02 10:05:00   -30 mins\n518  2013-01-06 17:51:00 2013-01-06 20:41:00 2013-01-06 21:03:00   -22 mins\n519  2013-09-27 06:30:00 2013-09-27 09:40:00 2013-09-27 09:46:00    -6 mins\n520  2013-08-16 07:00:00 2013-08-16 09:37:00 2013-08-16 10:04:00   -27 mins\n521  2013-01-28 17:00:00 2013-01-28 20:14:00 2013-01-28 20:49:00   -35 mins\n522  2013-06-05 20:30:00 2013-06-05 23:41:00 2013-06-05 23:56:00   -15 mins\n523  2013-02-10 17:45:00 2013-02-10 20:48:00 2013-02-10 21:20:00   -32 mins\n524  2013-09-14 15:20:00 2013-09-14 17:57:00 2013-09-14 18:18:00   -21 mins\n525  2013-04-22 10:15:00 2013-04-22 13:36:00 2013-04-22 13:36:00     0 mins\n526  2013-03-12 16:30:00 2013-03-12 21:25:00 2013-03-12 20:15:00    70 mins\n527  2013-07-14 21:50:00 2013-07-14 00:20:00 2013-07-14 01:00:00   -40 mins\n528  2013-12-31 13:50:00 2013-12-31 17:33:00 2013-12-31 17:30:00     3 mins\n529  2013-12-18 15:30:00 2013-12-18 18:55:00 2013-12-18 19:03:00    -8 mins\n530  2013-04-25 07:05:00 2013-04-25 10:34:00 2013-04-25 10:30:00     4 mins\n531  2013-02-25 15:29:00 2013-02-25 18:23:00 2013-02-25 18:41:00   -18 mins\n532  2013-06-28 05:49:00 2013-06-28 08:48:00 2013-06-28 08:58:00   -10 mins\n533  2013-12-06 14:45:00 2013-12-06 17:56:00 2013-12-06 18:09:00   -13 mins\n534  2013-03-17 17:25:00 2013-03-17 21:11:00 2013-03-17 20:50:00    21 mins\n535  2013-10-25 18:15:00 2013-10-25 21:16:00 2013-10-25 21:30:00   -14 mins\n536  2013-09-02 18:50:00 2013-09-02 21:54:00 2013-09-02 22:00:00    -6 mins\n537  2013-04-30 19:00:00 2013-04-30 22:20:00 2013-04-30 22:40:00   -20 mins\n538  2013-04-25 17:25:00 2013-04-25 20:54:00 2013-04-25 20:40:00    14 mins\n539  2013-03-09 06:07:00 2013-03-09 09:27:00 2013-03-09 09:32:00    -5 mins\n540  2013-09-19 08:30:00 2013-09-19 11:28:00 2013-09-19 11:37:00    -9 mins\n541  2013-05-27 19:30:00 2013-05-27 22:20:00 2013-05-27 22:37:00   -17 mins\n542  2013-12-27 15:15:00 2013-12-27 18:23:00 2013-12-27 18:33:00   -10 mins\n543  2013-01-25 07:30:00 2013-01-25 11:11:00 2013-01-25 11:15:00    -4 mins\n544  2013-02-17 20:27:00 2013-02-17 23:18:00 2013-02-17 23:42:00   -24 mins\n545  2013-03-15 19:00:00 2013-03-15 23:08:00 2013-03-15 22:40:00    28 mins\n546  2013-12-03 17:05:00 2013-12-03 20:41:00 2013-12-03 20:15:00    26 mins\n547  2013-10-04 08:52:00 2013-10-04 12:07:00 2013-10-04 12:08:00    -1 mins\n548  2013-01-12 08:30:00 2013-01-12 11:47:00 2013-01-12 11:54:00    -7 mins\n549  2013-02-05 16:59:00 2013-02-05 19:43:00 2013-02-05 20:15:00   -32 mins\n550  2013-10-20 18:39:00 2013-10-20 21:32:00 2013-10-20 21:56:00   -24 mins\n551  2013-04-01 15:45:00 2013-04-01 19:47:00 2013-04-01 19:10:00    37 mins\n552  2013-05-25 07:00:00 2013-05-25 10:03:00 2013-05-25 10:15:00   -12 mins\n553  2013-10-04 07:40:00 2013-10-04 10:46:00 2013-10-04 10:55:00    -9 mins\n554  2013-09-19 17:30:00 2013-09-19 20:51:00 2013-09-19 21:00:00    -9 mins\n555  2013-08-25 17:55:00 2013-08-25 20:59:00 2013-08-25 21:20:00   -21 mins\n556  2013-10-12 19:16:00 2013-10-12 22:13:00 2013-10-12 22:25:00   -12 mins\n557  2013-07-06 06:00:00 2013-07-06 09:01:00 2013-07-06 09:00:00     1 mins\n558  2013-09-04 06:30:00 2013-09-04 09:33:00 2013-09-04 09:52:00   -19 mins\n559  2013-05-24 15:40:00 2013-05-24 19:15:00 2013-05-24 18:55:00    20 mins\n560  2013-07-10 20:29:00 2013-07-10 03:49:00 2013-07-10 23:59:00 -1210 mins\n561  2013-07-31 13:38:00 2013-07-31 16:19:00 2013-07-31 16:34:00   -15 mins\n562  2013-09-19 10:30:00 2013-09-19 13:18:00 2013-09-19 13:25:00    -7 mins\n563  2013-02-20 10:30:00 2013-02-20 13:47:00 2013-02-20 14:15:00   -28 mins\n564  2013-08-27 21:40:00 2013-08-27 23:57:00 2013-08-27 00:40:00  1397 mins\n565  2013-12-05 12:00:00 2013-12-05 15:25:00 2013-12-05 15:21:00     4 mins\n566  2013-06-19 11:02:00 2013-06-19 13:54:00 2013-06-19 13:41:00    13 mins\n567  2013-10-31 17:25:00 2013-10-31 20:12:00 2013-10-31 20:40:00   -28 mins\n568  2013-04-03 17:53:00 2013-04-03 21:45:00 2013-04-03 21:05:00    40 mins\n569  2013-04-02 09:00:00 2013-04-02 12:29:00 2013-04-02 12:24:00     5 mins\n570  2013-07-20 10:30:00 2013-07-20 14:02:00 2013-07-20 13:50:00    12 mins\n571  2013-08-09 18:00:00 2013-08-09 21:39:00 2013-08-09 21:02:00    37 mins\n572  2013-05-23 20:01:00 2013-05-23 02:56:00 2013-05-23 23:20:00 -1224 mins\n573  2013-03-20 07:00:00 2013-03-20 10:23:00 2013-03-20 10:44:00   -21 mins\n574  2013-03-11 15:10:00 2013-03-11 18:00:00 2013-03-11 18:18:00   -18 mins\n575  2013-10-26 19:10:00 2013-10-26 21:47:00 2013-10-26 22:15:00   -28 mins\n576  2013-07-17 20:29:00 2013-07-17 23:55:00 2013-07-17 23:59:00    -4 mins\n577  2013-11-28 11:51:00 2013-11-28 16:07:00 2013-11-28 14:59:00    68 mins\n578  2013-07-18 18:30:00 2013-07-18 22:42:00 2013-07-18 21:45:00    57 mins\n579  2013-02-14 12:00:00 2013-02-14 14:51:00 2013-02-14 15:10:00   -19 mins\n580  2013-09-18 08:52:00 2013-09-18 11:48:00 2013-09-18 11:56:00    -8 mins\n581  2013-04-19 07:05:00 2013-04-19 10:14:00 2013-04-19 10:30:00   -16 mins\n582  2013-12-03 07:30:00 2013-12-03 11:12:00 2013-12-03 11:05:00     7 mins\n583  2013-10-26 12:00:00 2013-10-26 14:39:00 2013-10-26 14:55:00   -16 mins\n584  2013-09-12 18:30:00 2013-09-12 23:05:00 2013-09-12 21:57:00    68 mins\n585  2013-07-15 13:38:00 2013-07-15 15:44:00 2013-07-15 16:34:00   -50 mins\n586  2013-07-05 18:55:00 2013-07-05 22:41:00 2013-07-05 22:15:00    26 mins\n587  2013-07-08 20:59:00 2013-07-08 23:39:00 2013-07-08 00:12:00  1407 mins\n588  2013-05-20 10:45:00 2013-05-20 13:31:00 2013-05-20 14:20:00   -49 mins\n589  2013-01-30 07:00:00 2013-01-30 09:59:00 2013-01-30 10:27:00   -28 mins\n590  2013-07-21 20:01:00 2013-07-21 23:20:00 2013-07-21 23:05:00    15 mins\n591  2013-11-23 11:37:00 2013-11-23 15:10:00 2013-11-23 15:11:00    -1 mins\n592  2013-04-08 07:10:00 2013-04-08 10:37:00 2013-04-08 10:35:00     2 mins\n593  2013-06-26 10:30:00 2013-06-26 15:40:00 2013-06-26 13:45:00   115 mins\n594  2013-09-20 20:25:00 2013-09-20 23:12:00 2013-09-20 23:28:00   -16 mins\n595  2013-01-08 10:30:00 2013-01-08 13:43:00 2013-01-08 14:15:00   -32 mins\n596  2013-03-25 17:30:00 2013-03-25 20:23:00 2013-03-25 20:46:00   -23 mins\n597  2013-12-08 20:21:00 2013-12-08 01:17:00 2013-12-08 23:57:00 -1360 mins\n598  2013-06-07 09:00:00 2013-06-07 12:33:00 2013-06-07 11:56:00    37 mins\n599  2013-10-14 12:00:00 2013-10-14 14:47:00 2013-10-14 14:55:00    -8 mins\n600  2013-09-12 07:00:00 2013-09-12 09:47:00 2013-09-12 10:23:00   -36 mins\n601  2013-11-29 14:55:00 2013-11-29 18:14:00 2013-11-29 18:19:00    -5 mins\n602  2013-03-11 08:40:00 2013-03-11 11:24:00 2013-03-11 11:50:00   -26 mins\n603  2013-10-21 08:52:00 2013-10-21 11:41:00 2013-10-21 12:08:00   -27 mins\n604  2013-09-30 07:30:00 2013-09-30 10:10:00 2013-09-30 10:45:00   -35 mins\n605  2013-11-11 17:29:00 2013-11-11 21:06:00 2013-11-11 21:11:00    -5 mins\n606  2013-05-20 09:00:00 2013-05-20 12:00:00 2013-05-20 12:10:00   -10 mins\n607  2013-10-01 21:00:00 2013-10-01 23:48:00 2013-10-01 00:18:00  1410 mins\n608  2013-06-21 13:38:00 2013-06-21 16:16:00 2013-06-21 16:34:00   -18 mins\n609  2013-05-05 17:31:00 2013-05-05 20:53:00 2013-05-05 20:44:00     9 mins\n610  2013-10-14 18:00:00 2013-10-14 21:03:00 2013-10-14 21:04:00    -1 mins\n611  2013-11-14 06:39:00 2013-11-14 09:57:00 2013-11-14 10:02:00    -5 mins\n612  2013-03-03 13:29:00 2013-03-03 16:56:00 2013-03-03 16:54:00     2 mins\n613  2013-06-29 08:47:00 2013-06-29 12:21:00 2013-06-29 11:56:00    25 mins\n614  2013-08-13 12:00:00 2013-08-13 15:08:00 2013-08-13 14:55:00    13 mins\n615  2013-12-09 10:35:00 2013-12-09 14:25:00 2013-12-09 14:05:00    20 mins\n616  2013-11-04 19:19:00 2013-11-04 22:48:00 2013-11-04 22:33:00    15 mins\n617  2013-08-17 18:13:00 2013-08-17 20:40:00 2013-08-17 21:28:00   -48 mins\n618  2013-03-14 07:45:00 2013-03-14 10:53:00 2013-03-14 11:25:00   -32 mins\n619  2013-02-04 16:30:00 2013-02-04 21:11:00 2013-02-04 20:15:00    56 mins\n620  2013-10-01 06:30:00 2013-10-01 09:17:00 2013-10-01 09:22:00    -5 mins\n621  2013-07-09 17:10:00 2013-07-09 23:08:00 2013-07-09 20:35:00   153 mins\n622  2013-12-23 17:30:00 2013-12-23 20:36:00 2013-12-23 20:46:00   -10 mins\n623  2013-02-01 17:10:00 2013-02-01 20:28:00 2013-02-01 20:36:00    -8 mins\n624  2013-02-28 08:16:00 2013-02-28 10:57:00 2013-02-28 11:35:00   -38 mins\n625  2013-07-26 15:45:00 2013-07-26 18:38:00 2013-07-26 19:00:00   -22 mins\n626  2013-06-08 10:57:00 2013-06-08 13:20:00 2013-06-08 13:35:00   -15 mins\n627  2013-03-18 11:06:00 2013-03-18 14:18:00 2013-03-18 14:31:00   -13 mins\n628  2013-09-09 07:00:00 2013-09-09 10:09:00 2013-09-09 10:10:00    -1 mins\n629  2013-01-15 16:55:00 2013-01-15 19:53:00 2013-01-15 20:35:00   -42 mins\n630  2013-10-11 08:30:00 2013-10-11 11:53:00 2013-10-11 11:52:00     1 mins\n631  2013-02-07 11:25:00 2013-02-07 14:18:00 2013-02-07 14:38:00   -20 mins\n632  2013-07-22 22:45:00 2013-07-22 03:38:00 2013-07-22 01:35:00   123 mins\n633  2013-12-20 15:40:00 2013-12-20 19:41:00 2013-12-20 19:18:00    23 mins\n634  2013-12-20 09:00:00 2013-12-20 12:01:00 2013-12-20 12:29:00   -28 mins\n635  2013-06-26 09:00:00 2013-06-26 12:19:00 2013-06-26 11:42:00    37 mins\n636  2013-09-20 15:30:00 2013-09-20 22:03:00 2013-09-20 18:45:00   198 mins\n637  2013-04-12 12:00:00 2013-04-12 14:50:00 2013-04-12 15:11:00   -21 mins\n638  2013-03-07 09:10:00 2013-03-07 12:20:00 2013-03-07 12:35:00   -15 mins\n639  2013-09-25 15:48:00 2013-09-25 19:59:00 2013-09-25 19:06:00    53 mins\n640  2013-12-11 12:00:00 2013-12-11 14:58:00 2013-12-11 15:10:00   -12 mins\n641  2013-11-21 17:45:00 2013-11-21 21:33:00 2013-11-21 21:04:00    29 mins\n642  2013-09-09 18:35:00 2013-09-09 22:19:00 2013-09-09 21:55:00    24 mins\n643  2013-01-23 17:00:00 2013-01-23 20:50:00 2013-01-23 20:49:00     1 mins\n644  2013-09-30 18:03:00 2013-09-30 21:13:00 2013-09-30 21:17:00    -4 mins\n645  2013-03-01 11:06:00 2013-03-01 14:00:00 2013-03-01 14:31:00   -31 mins\n646  2013-02-24 09:05:00 2013-02-24 11:59:00 2013-02-24 12:35:00   -36 mins\n647  2013-10-14 18:55:00 2013-10-14 22:15:00 2013-10-14 22:15:00     0 mins\n648  2013-05-02 18:30:00 2013-05-02 21:20:00 2013-05-02 22:00:00   -40 mins\n649  2013-08-28 10:30:00 2013-08-28 15:16:00 2013-08-28 13:35:00   101 mins\n650  2013-05-05 18:50:00 2013-05-05 23:50:00 2013-05-05 22:25:00    85 mins\n651  2013-10-05 08:30:00 2013-10-05 11:05:00 2013-10-05 11:30:00   -25 mins\n652  2013-08-10 07:15:00 2013-08-10 10:09:00 2013-08-10 10:10:00    -1 mins\n653  2013-05-28 13:00:00 2013-05-28 15:52:00 2013-05-28 15:55:00    -3 mins\n654  2013-12-09 15:45:00 2013-12-09 19:54:00 2013-12-09 19:20:00    34 mins\n655  2013-11-25 18:30:00 2013-11-25 21:35:00 2013-11-25 22:05:00   -30 mins\n656  2013-04-19 13:45:00 2013-04-19 16:39:00 2013-04-19 17:00:00   -21 mins\n657  2013-08-14 17:00:00 2013-08-14 20:51:00 2013-08-14 20:18:00    33 mins\n658  2013-05-08 20:01:00 2013-05-08 02:15:00 2013-05-08 23:20:00 -1265 mins\n659  2013-08-10 16:30:00 2013-08-10 20:05:00 2013-08-10 19:59:00     6 mins\n660  2013-07-26 18:00:00 2013-07-26 20:48:00 2013-07-26 21:02:00   -14 mins\n661  2013-01-03 12:21:00 2013-01-03 18:03:00 2013-01-03 15:55:00   128 mins\n662  2013-03-14 15:30:00 2013-03-14 19:39:00 2013-03-14 19:10:00    29 mins\n663  2013-08-12 08:53:00 2013-08-12 12:37:00 2013-08-12 12:12:00    25 mins\n664  2013-06-05 18:29:00 2013-06-05 21:36:00 2013-06-05 22:03:00   -27 mins\n665  2013-03-10 08:10:00 2013-03-10 11:10:00 2013-03-10 11:35:00   -25 mins\n666  2013-05-30 07:00:00 2013-05-30 10:20:00 2013-05-30 10:34:00   -14 mins\n667  2013-04-11 10:03:00 2013-04-11 13:26:00 2013-04-11 13:22:00     4 mins\n668  2013-07-18 11:25:00 2013-07-18 13:40:00 2013-07-18 14:14:00   -34 mins\n669  2013-01-17 07:47:00 2013-01-17 11:04:00 2013-01-17 11:26:00   -22 mins\n670  2013-09-01 18:50:00 2013-09-01 22:12:00 2013-09-01 22:10:00     2 mins\n671  2013-05-16 07:00:00 2013-05-16 09:35:00 2013-05-16 10:19:00   -44 mins\n672  2013-02-21 15:30:00 2013-02-21 19:16:00 2013-02-21 19:10:00     6 mins\n673  2013-04-05 16:30:00 2013-04-05 20:03:00 2013-04-05 20:15:00   -12 mins\n674  2013-03-01 18:00:00 2013-03-01 20:43:00 2013-03-01 21:36:00   -53 mins\n675  2013-04-22 19:10:00 2013-04-22 22:52:00 2013-04-22 22:40:00    12 mins\n676  2013-07-05 10:28:00 2013-07-05 13:16:00 2013-07-05 13:39:00   -23 mins\n677  2013-12-17 14:45:00 2013-12-17 18:30:00 2013-12-17 18:09:00    21 mins\n678  2013-05-10 14:00:00 2013-05-10 16:49:00 2013-05-10 17:30:00   -41 mins\n679  2013-05-21 17:29:00 2013-05-21 20:40:00 2013-05-21 21:10:00   -30 mins\n680  2013-07-10 18:15:00 2013-07-10 22:40:00 2013-07-10 21:35:00    65 mins\n681  2013-09-13 08:10:00 2013-09-13 10:48:00 2013-09-13 10:54:00    -6 mins\n682  2013-07-10 17:59:00 2013-07-10 23:27:00 2013-07-10 20:58:00   149 mins\n683  2013-09-14 09:59:00 2013-09-14 13:15:00 2013-09-14 13:14:00     1 mins\n684  2013-02-22 15:00:00 2013-02-22 18:15:00 2013-02-22 18:37:00   -22 mins\n685  2013-07-12 18:25:00 2013-07-12 22:24:00 2013-07-12 21:31:00    53 mins\n686  2013-07-20 15:30:00 2013-07-20 18:57:00 2013-07-20 18:46:00    11 mins\n687  2013-09-16 18:35:00 2013-09-16 22:20:00 2013-09-16 21:55:00    25 mins\n688  2013-09-16 20:25:00 2013-09-16 22:51:00 2013-09-16 23:28:00   -37 mins\n689  2013-02-01 13:20:00 2013-02-01 16:54:00 2013-02-01 16:50:00     4 mins\n690  2013-07-02 14:30:00 2013-07-02 17:20:00 2013-07-02 17:54:00   -34 mins\n691  2013-07-08 12:00:00 2013-07-08 16:04:00 2013-07-08 15:07:00    57 mins\n692  2013-01-06 06:00:00 2013-01-06 09:08:00 2013-01-06 09:27:00   -19 mins\n693  2013-05-25 18:50:00 2013-05-25 22:29:00 2013-05-25 22:25:00     4 mins\n694  2013-05-09 16:29:00 2013-05-09 20:16:00 2013-05-09 19:41:00    35 mins\n695  2013-11-12 16:50:00 2013-11-12 19:31:00 2013-11-12 20:02:00   -31 mins\n696  2013-09-27 17:10:00 2013-09-27 20:21:00 2013-09-27 20:33:00   -12 mins\n697  2013-03-11 16:30:00 2013-03-11 20:21:00 2013-03-11 20:15:00     6 mins\n698  2013-08-16 16:00:00 2013-08-16 18:57:00 2013-08-16 19:38:00   -41 mins\n699  2013-06-15 18:15:00 2013-06-15 21:41:00 2013-06-15 21:40:00     1 mins\n700  2013-02-16 17:30:00 2013-02-16 20:24:00 2013-02-16 20:46:00   -22 mins\n701  2013-07-31 08:40:00 2013-07-31 12:04:00 2013-07-31 11:43:00    21 mins\n702  2013-12-05 08:54:00 2013-12-05 13:21:00 2013-12-05 12:35:00    46 mins\n703  2013-10-23 17:29:00 2013-10-23 20:17:00 2013-10-23 21:05:00   -48 mins\n704  2013-02-19 15:45:00 2013-02-19 19:59:00 2013-02-19 19:10:00    49 mins\n705  2013-06-28 09:00:00 2013-06-28 12:24:00 2013-06-28 11:42:00    42 mins\n706  2013-02-06 17:15:00 2013-02-06 20:13:00 2013-02-06 20:40:00   -27 mins\n707  2013-07-23 19:10:00 2013-07-23 22:27:00 2013-07-23 22:06:00    21 mins\n708  2013-04-17 18:55:00 2013-04-17 22:24:00 2013-04-17 22:10:00    14 mins\n709  2013-09-27 13:55:00 2013-09-27 17:08:00 2013-09-27 17:17:00    -9 mins\n710  2013-12-16 18:30:00 2013-12-16 21:52:00 2013-12-16 22:05:00   -13 mins\n711  2013-02-03 21:35:00 2013-02-03 00:57:00 2013-02-03 00:50:00     7 mins\n712  2013-04-26 17:55:00 2013-04-26 21:01:00 2013-04-26 21:03:00    -2 mins\n713  2013-05-12 10:45:00 2013-05-12 13:28:00 2013-05-12 14:20:00   -52 mins\n714  2013-07-07 09:15:00 2013-07-07 11:54:00 2013-07-07 12:15:00   -21 mins\n715  2013-01-20 12:00:00 2013-01-20 14:57:00 2013-01-20 15:10:00   -13 mins\n716  2013-07-18 07:09:00 2013-07-18 09:27:00 2013-07-18 09:59:00   -32 mins\n717  2013-04-23 16:35:00 2013-04-23 19:46:00 2013-04-23 19:54:00    -8 mins\n718  2013-02-19 17:45:00 2013-02-19 21:30:00 2013-02-19 21:20:00    10 mins\n719  2013-11-24 13:57:00 2013-11-24 17:26:00 2013-11-24 17:28:00    -2 mins\n720  2013-06-19 20:30:00 2013-06-19 23:34:00 2013-06-19 23:56:00   -22 mins\n721  2013-01-16 15:30:00 2013-01-16 19:21:00 2013-01-16 19:10:00    11 mins\n722  2013-06-08 16:30:00 2013-06-08 20:03:00 2013-06-08 19:59:00     4 mins\n723  2013-11-04 10:30:00 2013-11-04 13:52:00 2013-11-04 13:25:00    27 mins\n724  2013-01-21 15:52:00 2013-01-21 18:59:00 2013-01-21 19:04:00    -5 mins\n725  2013-06-23 08:25:00 2013-06-23 11:39:00 2013-06-23 11:47:00    -8 mins\n726  2013-10-15 08:10:00 2013-10-15 11:10:00 2013-10-15 11:08:00     2 mins\n727  2013-07-01 11:02:00 2013-07-01 13:28:00 2013-07-01 13:41:00   -13 mins\n728  2013-08-06 07:15:00 2013-08-06 10:00:00 2013-08-06 10:10:00   -10 mins\n729  2013-06-02 08:33:00 2013-06-02 11:33:00 2013-06-02 11:39:00    -6 mins\n730  2013-04-11 18:04:00 2013-04-11 21:24:00 2013-04-11 21:45:00   -21 mins\n731  2013-08-03 12:08:00 2013-08-03 15:58:00 2013-08-03 14:52:00    66 mins\n732  2013-02-07 10:30:00 2013-02-07 13:53:00 2013-02-07 14:15:00   -22 mins\n733  2013-11-06 20:00:00 2013-11-06 23:25:00 2013-11-06 23:15:00    10 mins\n734  2013-11-06 09:00:00 2013-11-06 12:25:00 2013-11-06 12:15:00    10 mins\n735  2013-01-11 13:45:00 2013-01-11 16:57:00 2013-01-11 17:05:00    -8 mins\n736  2013-07-03 08:40:00 2013-07-03 12:03:00 2013-07-03 11:43:00    20 mins\n737  2013-06-06 10:00:00 2013-06-06 13:02:00 2013-06-06 13:29:00   -27 mins\n738  2013-09-27 13:00:00 2013-09-27 15:41:00 2013-09-27 15:55:00   -14 mins\n739  2013-01-30 13:20:00 2013-01-30 16:28:00 2013-01-30 16:50:00   -22 mins\n740  2013-07-29 16:59:00 2013-07-29 21:05:00 2013-07-29 20:12:00    53 mins\n741  2013-06-24 13:33:00 2013-06-24 17:38:00 2013-06-24 16:45:00    53 mins\n742  2013-11-21 09:00:00 2013-11-21 12:29:00 2013-11-21 12:35:00    -6 mins\n743  2013-04-23 20:29:00 2020-04-23 13:05:00 2020-04-23 13:04:00     1 mins\n744  2013-07-26 18:22:00 2013-07-26 21:47:00 2013-07-26 21:55:00    -8 mins\n745  2013-06-17 18:30:00 2013-06-17 22:30:00 2013-06-17 21:55:00    35 mins\n746  2013-06-30 17:30:00 2013-06-30 21:30:00 2013-06-30 21:09:00    21 mins\n747  2013-12-05 20:19:00 2013-12-05 00:14:00 2013-12-05 23:45:00 -1411 mins\n748  2013-06-05 19:00:00 2013-06-05 23:19:00 2013-06-05 22:51:00    28 mins\n749  2013-07-24 18:30:00 2013-07-24 22:23:00 2013-07-24 21:55:00    28 mins\n750  2013-01-22 07:15:00 2013-01-22 10:37:00 2013-01-22 10:40:00    -3 mins\n751  2013-12-03 08:40:00 2013-12-03 12:27:00 2013-12-03 11:55:00    32 mins\n752  2013-12-12 07:00:00 2013-12-12 10:00:00 2013-12-12 10:15:00   -15 mins\n753  2013-09-06 16:40:00 2013-09-06 18:47:00 2013-09-06 19:47:00   -60 mins\n754  2013-08-30 18:00:00 2013-08-30 20:20:00 2013-08-30 21:02:00   -42 mins\n755  2013-07-04 15:30:00 2013-07-04 18:07:00 2013-07-04 18:44:00   -37 mins\n756  2013-09-14 10:00:00 2013-09-14 13:00:00 2013-09-14 13:04:00    -4 mins\n757  2013-09-27 18:15:00 2013-09-27 21:41:00 2013-09-27 21:30:00    11 mins\n758  2013-05-23 17:29:00 2013-05-23 21:48:00 2013-05-23 21:10:00    38 mins\n759  2013-01-20 09:00:00 2013-01-20 13:56:00 2013-01-20 12:27:00    89 mins\n760  2013-04-16 16:30:00 2013-04-16 19:34:00 2013-04-16 19:47:00   -13 mins\n761  2013-12-11 14:29:00 2013-12-11 17:46:00 2013-12-11 17:56:00   -10 mins\n762  2013-12-24 17:30:00 2013-12-24 20:42:00 2013-12-24 21:07:00   -25 mins\n763  2013-08-08 20:29:00 2013-08-08 01:05:00 2013-08-08 23:33:00 -1348 mins\n764  2013-11-23 06:39:00 2013-11-23 10:18:00 2013-11-23 10:02:00    16 mins\n765  2013-05-31 14:00:00 2013-05-31 17:01:00 2013-05-31 17:30:00   -29 mins\n766  2013-03-01 07:45:00 2013-03-01 10:39:00 2013-03-01 11:25:00   -46 mins\n767  2013-11-08 18:45:00 2013-11-08 22:25:00 2013-11-08 22:10:00    15 mins\n768  2013-01-08 15:45:00 2013-01-08 18:51:00 2013-01-08 19:10:00   -19 mins\n769  2013-12-06 07:29:00 2013-12-06 10:58:00 2013-12-06 10:45:00    13 mins\n770  2013-08-15 06:30:00 2013-08-15 09:13:00 2013-08-15 09:23:00   -10 mins\n771  2013-03-02 12:00:00 2013-03-02 14:22:00 2013-03-02 15:10:00   -48 mins\n772  2013-09-10 08:29:00 2013-09-10 11:03:00 2013-09-10 11:22:00   -19 mins\n773  2013-12-28 15:30:00 2013-12-28 18:51:00 2013-12-28 19:03:00   -12 mins\n774  2013-09-10 13:45:00 2013-09-10 16:06:00 2013-09-10 16:50:00   -44 mins\n775  2013-06-24 07:30:00 2013-06-24 10:26:00 2013-06-24 10:45:00   -19 mins\n776  2013-12-15 13:00:00 2013-12-15 16:40:00 2013-12-15 16:36:00     4 mins\n777  2013-01-21 18:07:00 2013-01-21 20:58:00 2013-01-21 21:28:00   -30 mins\n778  2013-09-24 15:35:00 2013-09-24 19:09:00 2013-09-24 18:59:00    10 mins\n779  2013-06-16 16:22:00 2013-06-16 20:46:00 2013-06-16 19:20:00    86 mins\n780  2013-10-09 07:00:00 2013-10-09 10:04:00 2013-10-09 10:15:00   -11 mins\n781  2013-11-18 21:20:00 2013-11-18 00:47:00 2013-11-18 01:00:00   -13 mins\n782  2013-04-22 18:30:00 2013-04-22 22:12:00 2013-04-22 22:00:00    12 mins\n783  2013-06-16 07:30:00 2013-06-16 10:22:00 2013-06-16 10:25:00    -3 mins\n784  2013-02-27 13:20:00 2013-02-27 16:19:00 2013-02-27 16:50:00   -31 mins\n785  2013-03-06 19:49:00 2013-03-06 23:09:00 2013-03-06 23:21:00   -12 mins\n786  2013-03-22 13:20:00 2013-03-22 16:34:00 2013-03-22 16:28:00     6 mins\n787  2013-08-22 17:59:00 2013-08-22 21:07:00 2013-08-22 20:58:00     9 mins\n788  2013-10-27 17:00:00 2013-10-27 20:17:00 2013-10-27 20:18:00    -1 mins\n789  2013-09-14 07:30:00 2013-09-14 10:15:00 2013-09-14 10:45:00   -30 mins\n790  2013-10-04 08:30:00 2013-10-04 11:41:00 2013-10-04 11:22:00    19 mins\n791  2013-10-24 14:29:00 2013-10-24 17:15:00 2013-10-24 17:28:00   -13 mins\n792  2013-12-02 07:30:00 2013-12-02 10:46:00 2013-12-02 11:05:00   -19 mins\n793  2013-09-30 09:15:00 2013-09-30 11:42:00 2013-09-30 12:15:00   -33 mins\n794  2013-05-24 06:53:00 2013-05-24 09:35:00 2013-05-24 10:06:00   -31 mins\n795  2013-08-12 19:30:00 2013-08-12 23:22:00 2013-08-12 23:04:00    18 mins\n796  2013-03-07 06:38:00 2013-03-07 09:40:00 2013-03-07 09:51:00   -11 mins\n797  2013-01-30 17:15:00 2013-01-30 20:23:00 2013-01-30 20:40:00   -17 mins\n798  2013-10-17 18:50:00 2013-10-17 22:16:00 2013-10-17 22:25:00    -9 mins\n799  2013-04-10 15:45:00 2013-04-10 20:30:00 2013-04-10 19:10:00    80 mins\n800  2013-10-18 13:45:00 2013-10-18 16:48:00 2013-10-18 16:50:00    -2 mins\n801  2013-06-29 15:30:00 2013-06-29 18:24:00 2013-06-29 18:48:00   -24 mins\n802  2013-10-20 07:23:00 2013-10-20 10:18:00 2013-10-20 10:25:00    -7 mins\n803  2013-08-22 17:29:00 2013-08-22 21:42:00 2013-08-22 20:49:00    53 mins\n804  2013-08-30 08:30:00 2013-08-30 11:11:00 2013-08-30 11:30:00   -19 mins\n805  2013-08-03 14:36:00 2013-08-03 17:29:00 2013-08-03 17:21:00     8 mins\n806  2013-10-16 18:50:00 2013-10-16 22:25:00 2013-10-16 22:25:00     0 mins\n807  2013-08-01 17:35:00 2013-08-01 22:32:00 2013-08-01 20:47:00   105 mins\n808  2013-03-15 16:55:00 2013-03-15 20:08:00 2013-03-15 20:30:00   -22 mins\n809  2013-12-26 18:29:00 2013-12-26 21:27:00 2013-12-26 21:56:00   -29 mins\n810  2013-09-06 16:55:00 2013-09-06 19:35:00 2013-09-06 20:05:00   -30 mins\n811  2013-01-12 16:55:00 2013-01-12 20:14:00 2013-01-12 20:10:00     4 mins\n812  2013-01-09 17:53:00 2013-01-09 20:44:00 2013-01-09 21:05:00   -21 mins\n813  2013-06-21 11:26:00 2013-06-21 13:56:00 2013-06-21 14:15:00   -19 mins\n814  2013-01-07 10:31:00 2013-01-07 13:35:00 2013-01-07 14:03:00   -28 mins\n815  2013-02-28 15:45:00 2013-02-28 18:29:00 2013-02-28 19:10:00   -41 mins\n816  2013-10-31 08:34:00 2013-10-31 12:00:00 2013-10-31 11:56:00     4 mins\n817  2013-11-02 08:36:00 2013-11-02 11:29:00 2013-11-02 11:35:00    -6 mins\n818  2013-09-26 06:30:00 2013-09-26 09:40:00 2013-09-26 09:46:00    -6 mins\n819  2013-08-24 19:00:00 2013-08-24 22:00:00 2013-08-24 22:40:00   -40 mins\n820  2013-03-31 15:45:00 2013-03-31 19:19:00 2013-03-31 19:04:00    15 mins\n821  2013-01-15 18:19:00 2013-01-15 21:35:00 2013-01-15 21:38:00    -3 mins\n822  2013-08-14 14:59:00 2013-08-14 19:31:00 2013-08-14 17:56:00    95 mins\n823  2013-05-13 14:00:00 2013-05-13 16:54:00 2013-05-13 17:30:00   -36 mins\n824  2013-06-10 17:00:00 2013-06-10 19:59:00 2013-06-10 20:25:00   -26 mins\n825  2013-03-21 17:15:00 2013-03-21 20:26:00 2013-03-21 20:37:00   -11 mins\n826  2013-08-25 10:30:00 2013-08-25 13:19:00 2013-08-25 13:40:00   -21 mins\n827  2013-11-20 06:39:00 2013-11-20 09:32:00 2013-11-20 09:55:00   -23 mins\n828  2013-07-04 09:15:00 2013-07-04 12:08:00 2013-07-04 12:10:00    -2 mins\n829  2013-07-27 18:00:00 2013-07-27 21:19:00 2013-07-27 21:30:00   -11 mins\n830  2013-11-05 18:15:00 2013-11-05 21:42:00 2013-11-05 21:46:00    -4 mins\n831  2013-05-17 18:05:00 2013-05-17 21:10:00 2013-05-17 21:28:00   -18 mins\n832  2013-08-08 20:59:00 2013-08-08 01:11:00 2013-08-08 23:58:00 -1367 mins\n833  2013-08-24 19:15:00 2013-08-24 21:39:00 2013-08-24 22:30:00   -51 mins\n834  2013-11-13 10:30:00 2013-11-13 12:45:00 2013-11-13 13:25:00   -40 mins\n835  2013-11-23 15:22:00 2013-11-23 19:02:00 2013-11-23 18:55:00     7 mins\n836  2013-02-21 07:00:00 2013-02-21 10:17:00 2013-02-21 10:25:00    -8 mins\n837  2013-04-23 09:29:00 2013-04-23 13:14:00 2013-04-23 13:08:00     6 mins\n838  2013-01-11 17:10:00 2013-01-11 20:42:00 2013-01-11 20:36:00     6 mins\n839  2013-02-07 17:25:00 2013-02-07 21:02:00 2013-02-07 20:41:00    21 mins\n840  2013-05-01 16:32:00 2013-05-01 19:25:00 2013-05-01 19:56:00   -31 mins\n841  2013-01-06 10:30:00 2013-01-06 13:28:00 2013-01-06 13:55:00   -27 mins\n842  2013-05-07 16:40:00 2013-05-07 19:22:00 2013-05-07 19:56:00   -34 mins\n843  2013-04-14 17:00:00 2013-04-14 22:26:00 2013-04-14 20:50:00    96 mins\n844  2013-02-02 21:35:00 2013-02-02 00:32:00 2013-02-02 00:50:00   -18 mins\n845  2013-09-23 14:30:00 2013-09-23 17:29:00 2013-09-23 17:34:00    -5 mins\n846  2013-04-26 18:00:00 2013-04-26 21:14:00 2013-04-26 21:40:00   -26 mins\n847  2013-04-06 07:00:00 2013-04-06 10:25:00 2013-04-06 10:25:00     0 mins\n848  2013-05-26 16:15:00 2013-05-26 19:41:00 2013-05-26 19:19:00    22 mins\n849  2013-12-09 14:00:00 2013-12-09 19:18:00 2013-12-09 17:10:00   128 mins\n850  2013-03-17 08:30:00 2013-03-17 11:36:00 2013-03-17 11:50:00   -14 mins\n851  2013-12-01 15:30:00 2013-12-01 18:54:00 2013-12-01 19:01:00    -7 mins\n852  2013-05-02 13:45:00 2013-05-02 16:31:00 2013-05-02 17:00:00   -29 mins\n853  2013-06-29 13:45:00 2013-06-29 16:11:00 2013-06-29 16:45:00   -34 mins\n854  2013-10-25 07:00:00 2013-10-25 10:11:00 2013-10-25 10:15:00    -4 mins\n855  2013-06-03 19:50:00 2013-06-03 23:28:00 2013-06-03 23:25:00     3 mins\n856  2013-04-08 06:00:00 2013-04-08 09:37:00 2013-04-08 09:25:00    12 mins\n857  2013-09-18 15:20:00 2013-09-18 18:08:00 2013-09-18 18:14:00    -6 mins\n858  2013-04-29 12:00:00 2013-04-29 15:08:00 2013-04-29 15:25:00   -17 mins\n859  2013-08-21 18:22:00 2013-08-21 21:57:00 2013-08-21 21:55:00     2 mins\n860  2013-07-07 11:20:00 2013-07-07 13:42:00 2013-07-07 14:09:00   -27 mins\n861  2013-08-14 07:40:00 2013-08-14 10:48:00 2013-08-14 10:55:00    -7 mins\n862  2013-06-06 15:45:00 2013-06-06 18:48:00 2013-06-06 19:10:00   -22 mins\n863  2013-02-16 12:00:00 2013-02-16 14:40:00 2013-02-16 15:10:00   -30 mins\n864  2013-12-05 07:00:00 2013-12-05 11:01:00 2013-12-05 10:40:00    21 mins\n865  2013-11-22 10:30:00 2013-11-22 14:01:00 2013-11-22 13:55:00     6 mins\n866  2013-10-26 06:00:00 2013-10-26 09:06:00 2013-10-26 09:23:00   -17 mins\n867  2013-09-25 06:00:00 2013-09-25 09:00:00 2013-09-25 09:23:00   -23 mins\n868  2013-09-02 12:00:00 2013-09-02 14:50:00 2013-09-02 14:55:00    -5 mins\n869  2013-03-27 17:30:00 2013-03-27 20:36:00 2013-03-27 20:46:00   -10 mins\n870  2013-07-01 15:38:00 2013-07-01 19:13:00 2013-07-01 19:05:00     8 mins\n871  2013-10-30 17:30:00 2013-10-30 20:52:00 2013-10-30 21:04:00   -12 mins\n872  2013-07-21 10:30:00 2013-07-21 13:12:00 2013-07-21 13:25:00   -13 mins\n873  2013-03-27 16:55:00 2013-03-27 20:18:00 2013-03-27 20:30:00   -12 mins\n874  2013-08-21 07:55:00 2013-08-21 11:20:00 2013-08-21 11:15:00     5 mins\n875  2013-01-05 07:30:00 2013-01-05 11:27:00 2013-01-05 11:15:00    12 mins\n876  2013-10-17 18:20:00 2013-10-17 21:17:00 2013-10-17 21:24:00    -7 mins\n877  2013-06-13 17:05:00 2013-06-13 21:04:00 2013-06-13 20:04:00    60 mins\n878  2013-04-25 09:30:00 2013-04-25 13:12:00 2013-04-25 13:09:00     3 mins\n879  2013-09-12 17:49:00 2013-09-12 23:53:00 2013-09-12 20:52:00   181 mins\n880  2013-05-15 12:14:00 2013-05-15 15:04:00 2013-05-15 15:20:00   -16 mins\n881  2013-08-12 17:35:00 2013-08-12 20:36:00 2013-08-12 20:30:00     6 mins\n882  2013-11-11 18:18:00 2013-11-11 21:13:00 2013-11-11 21:31:00   -18 mins\n883  2013-02-13 20:29:00 2013-02-13 23:23:00 2013-02-13 23:33:00   -10 mins\n884  2013-04-16 17:00:00 2013-04-16 21:47:00 2013-04-16 20:25:00    82 mins\n885  2013-04-27 08:03:00 2013-04-27 10:35:00 2013-04-27 11:24:00   -49 mins\n886  2013-02-05 16:55:00 2013-02-05 19:54:00 2013-02-05 20:14:00   -20 mins\n887  2013-06-26 20:49:00 2013-06-26 00:36:00 2013-06-26 23:48:00 -1392 mins\n888  2013-03-07 20:05:00 2013-03-07 23:49:00 2013-03-07 23:30:00    19 mins\n889  2013-12-23 09:20:00 2013-12-23 12:25:00 2013-12-23 12:45:00   -20 mins\n890  2013-05-05 09:17:00 2013-05-05 12:03:00 2013-05-05 12:57:00   -54 mins\n891  2013-02-14 16:45:00 2013-02-14 19:58:00 2013-02-14 20:05:00    -7 mins\n892  2013-06-06 17:27:00 2013-06-06 20:39:00 2013-06-06 20:24:00    15 mins\n893  2013-01-18 09:20:00 2013-01-18 12:25:00 2013-01-18 12:33:00    -8 mins\n894  2013-11-24 17:59:00 2013-11-24 20:36:00 2013-11-24 21:23:00   -47 mins\n895  2013-09-13 18:45:00 2013-09-13 21:42:00 2013-09-13 22:10:00   -28 mins\n896  2013-03-02 10:30:00 2013-03-02 16:04:00 2013-03-02 13:55:00   129 mins\n897  2013-04-14 08:15:00 2013-04-14 11:30:00 2013-04-14 11:19:00    11 mins\n898  2013-02-28 07:30:00 2013-02-28 10:15:00 2013-02-28 11:00:00   -45 mins\n899  2013-05-23 07:00:00 2013-05-23 10:22:00 2013-05-23 10:34:00   -12 mins\n900  2013-06-16 17:35:00 2013-06-16 20:38:00 2013-06-16 20:30:00     8 mins\n901  2013-11-04 17:00:00 2013-11-04 20:38:00 2013-11-04 20:17:00    21 mins\n902  2013-09-05 15:29:00 2013-09-05 18:24:00 2013-09-05 18:46:00   -22 mins\n903  2013-07-20 07:15:00 2013-07-20 09:49:00 2013-07-20 10:10:00   -21 mins\n904  2013-09-19 06:30:00 2013-09-19 09:19:00 2013-09-19 09:30:00   -11 mins\n905  2013-10-04 18:35:00 2013-10-04 22:11:00 2013-10-04 21:38:00    33 mins\n906  2013-10-25 18:50:00 2013-10-25 21:56:00 2013-10-25 22:00:00    -4 mins\n907  2013-06-26 15:29:00 2013-06-26 19:34:00 2013-06-26 18:56:00    38 mins\n908  2013-11-23 09:05:00 2013-11-23 12:22:00 2013-11-23 12:20:00     2 mins\n909  2013-05-27 10:30:00 2013-05-27 13:50:00 2013-05-27 13:45:00     5 mins\n910  2013-10-30 16:35:00 2013-10-30 20:17:00 2013-10-30 19:52:00    25 mins\n911  2013-11-01 07:30:00 2013-11-01 10:54:00 2013-11-01 11:00:00    -6 mins\n912  2013-07-26 16:55:00 2013-07-26 19:59:00 2013-07-26 19:40:00    19 mins\n913  2013-11-20 14:59:00 2013-11-20 18:00:00 2013-11-20 18:19:00   -19 mins\n914  2013-06-23 20:25:00 2013-06-23 00:33:00 2013-06-23 23:24:00 -1371 mins\n915  2013-11-23 16:30:00 2013-11-23 19:36:00 2013-11-23 19:43:00    -7 mins\n916  2013-07-25 18:24:00 2013-07-25 22:12:00 2013-07-25 21:29:00    43 mins\n917  2013-04-27 12:00:00 2013-04-27 14:58:00 2013-04-27 15:05:00    -7 mins\n918  2013-07-12 17:59:00 2013-07-12 21:07:00 2013-07-12 20:58:00     9 mins\n919  2013-10-24 18:35:00 2013-10-24 22:38:00 2013-10-24 21:38:00    60 mins\n920  2013-02-18 16:45:00 2013-02-18 19:52:00 2013-02-18 20:05:00   -13 mins\n921  2013-03-06 07:00:00 2013-03-06 09:57:00 2013-03-06 10:29:00   -32 mins\n922  2013-10-17 16:42:00 2013-10-17 20:16:00 2013-10-17 20:00:00    16 mins\n923  2013-10-30 18:03:00 2013-10-30 21:58:00 2013-10-30 21:17:00    41 mins\n924  2013-05-16 09:29:00 2013-05-16 12:36:00 2013-05-16 12:41:00    -5 mins\n925  2013-04-02 07:00:00 2013-04-02 10:19:00 2013-04-02 10:31:00   -12 mins\n926  2013-01-11 10:30:00 2013-01-11 13:31:00 2013-01-11 13:40:00    -9 mins\n927  2013-03-18 17:45:00 2013-03-18 21:23:00 2013-03-18 21:20:00     3 mins\n928  2013-11-28 18:30:00 2013-11-28 21:38:00 2013-11-28 22:05:00   -27 mins\n929  2013-12-18 09:20:00 2013-12-18 13:32:00 2013-12-18 12:45:00    47 mins\n930  2013-06-06 13:00:00 2013-06-06 16:04:00 2013-06-06 15:55:00     9 mins\n931  2013-04-18 15:40:00 2013-04-18 19:53:00 2013-04-18 18:55:00    58 mins\n932  2013-02-26 19:13:00 2013-02-26 21:43:00 2013-02-26 22:45:00   -62 mins\n933  2013-09-16 17:25:00 2013-09-16 20:40:00 2013-09-16 20:16:00    24 mins\n934  2013-03-21 07:15:00 2013-03-21 10:35:00 2013-03-21 10:37:00    -2 mins\n935  2013-05-30 17:32:00 2013-05-30 21:48:00 2013-05-30 21:14:00    34 mins\n936  2013-10-22 12:19:00 2013-10-22 15:10:00 2013-10-22 15:19:00    -9 mins\n937  2013-08-21 09:20:00 2013-08-21 11:44:00 2013-08-21 12:20:00   -36 mins\n938  2013-12-03 07:30:00 2013-12-03 10:56:00 2013-12-03 10:50:00     6 mins\n939  2013-08-30 17:49:00 2013-08-30 21:13:00 2013-08-30 20:52:00    21 mins\n940  2013-04-23 16:30:00 2013-04-23 19:27:00 2013-04-23 19:47:00   -20 mins\n941  2013-11-02 16:30:00 2013-11-02 20:07:00 2013-11-02 20:10:00    -3 mins\n942  2013-02-19 13:45:00 2013-02-19 16:51:00 2013-02-19 17:05:00   -14 mins\n943  2013-01-25 14:57:00 2013-01-25 18:51:00 2013-01-25 18:23:00    28 mins\n944  2013-02-02 08:30:00 2013-02-02 11:33:00 2013-02-02 11:54:00   -21 mins\n945  2013-08-31 20:59:00 2013-08-31 23:47:00 2013-08-31 23:58:00   -11 mins\n946  2013-11-01 13:11:00 2013-11-01 17:38:00 2013-11-01 16:24:00    74 mins\n947  2013-06-02 18:30:00 2013-06-02 23:48:00 2013-06-02 22:00:00   108 mins\n948  2013-04-10 19:10:00 2013-04-10 00:26:00 2013-04-10 22:40:00 -1334 mins\n949  2013-10-04 12:00:00 2013-10-04 14:41:00 2013-10-04 14:55:00   -14 mins\n950  2013-02-11 07:00:00 2013-02-11 10:34:00 2013-02-11 10:45:00   -11 mins\n951  2013-02-11 17:25:00 2013-02-11 00:11:00 2013-02-11 20:40:00 -1229 mins\n952  2013-06-27 10:30:00 2013-06-27 14:12:00 2013-06-27 13:49:00    23 mins\n953  2013-01-07 15:40:00 2013-01-07 18:59:00 2013-01-07 19:00:00    -1 mins\n954  2013-10-31 07:00:00 2013-10-31 09:37:00 2013-10-31 10:15:00   -38 mins\n955  2013-12-11 09:00:00 2013-12-11 12:54:00 2013-12-11 12:27:00    27 mins\n956  2013-07-08 18:55:00 2013-07-08 22:39:00 2013-07-08 22:05:00    34 mins\n957  2013-03-20 06:10:00 2013-03-20 08:59:00 2013-03-20 09:25:00   -26 mins\n958  2013-12-28 11:29:00 2013-12-28 14:21:00 2013-12-28 14:46:00   -25 mins\n959  2013-03-22 19:00:00 2013-03-22 23:16:00 2013-03-22 22:40:00    36 mins\n960  2013-03-27 18:29:00 2013-03-27 21:28:00 2013-03-27 21:47:00   -19 mins\n961  2013-09-25 16:30:00 2013-09-25 19:53:00 2013-09-25 20:00:00    -7 mins\n962  2013-08-08 05:59:00 2013-08-08 09:27:00 2013-08-08 09:02:00    25 mins\n963  2013-12-12 18:38:00 2013-12-12 22:38:00 2013-12-12 22:14:00    24 mins\n964  2013-09-19 18:30:00 2013-09-19 23:05:00 2013-09-19 21:57:00    68 mins\n965  2013-06-26 16:30:00 2013-06-26 22:28:00 2013-06-26 19:59:00   149 mins\n966  2013-08-02 12:00:00 2013-08-02 15:24:00 2013-08-02 15:07:00    17 mins\n967  2013-08-09 15:40:00 2013-08-09 20:37:00 2013-08-09 18:58:00    99 mins\n968  2013-07-20 18:24:00 2013-07-20 01:56:00 2013-07-20 21:29:00 -1173 mins\n969  2013-04-11 20:25:00 2013-04-11 23:36:00 2013-04-11 23:33:00     3 mins\n970  2013-07-29 06:19:00 2013-07-29 09:09:00 2013-07-29 09:04:00     5 mins\n971  2013-06-18 13:00:00 2013-06-18 17:33:00 2013-06-18 15:55:00    98 mins\n972  2013-10-21 12:45:00 2013-10-21 15:50:00 2013-10-21 16:00:00   -10 mins\n973  2013-04-11 10:30:00 2013-04-11 13:53:00 2013-04-11 14:05:00   -12 mins\n974  2013-01-19 16:55:00 2013-01-19 19:46:00 2013-01-19 20:15:00   -29 mins\n975  2013-07-14 08:59:00 2013-07-14 11:15:00 2013-07-14 11:33:00   -18 mins\n976  2013-08-22 07:00:00 2013-08-22 10:11:00 2013-08-22 10:14:00    -3 mins\n977  2013-05-20 07:00:00 2013-05-20 09:44:00 2013-05-20 10:11:00   -27 mins\n978  2013-04-16 18:55:00 2013-04-16 22:32:00 2013-04-16 22:40:00    -8 mins\n979  2013-07-01 06:30:00 2013-07-01 09:19:00 2013-07-01 09:30:00   -11 mins\n980  2013-12-31 19:01:00 2013-12-31 22:58:00 2013-12-31 22:51:00     7 mins\n981  2013-07-03 16:30:00 2013-07-03 19:28:00 2013-07-03 19:39:00   -11 mins\n982  2013-07-15 16:55:00 2013-07-15 19:16:00 2013-07-15 19:40:00   -24 mins\n983  2013-11-08 09:50:00 2013-11-08 12:47:00 2013-11-08 13:10:00   -23 mins\n984  2013-06-30 17:24:00 2013-06-30 20:31:00 2013-06-30 20:51:00   -20 mins\n985  2013-01-05 06:33:00 2013-01-05 09:46:00 2013-01-05 10:04:00   -18 mins\n986  2013-10-18 09:15:00 2013-10-18 12:22:00 2013-10-18 12:30:00    -8 mins\n987  2013-11-24 07:00:00 2013-11-24 10:10:00 2013-11-24 10:25:00   -15 mins\n988  2013-08-02 18:30:00 2013-08-02 21:26:00 2013-08-02 21:45:00   -19 mins\n989  2013-11-11 13:25:00 2013-11-11 16:21:00 2013-11-11 16:43:00   -22 mins\n990  2013-05-29 07:00:00 2013-05-29 09:35:00 2013-05-29 10:19:00   -44 mins\n991  2013-03-24 14:45:00 2013-03-24 17:50:00 2013-03-24 18:19:00   -29 mins\n992  2013-05-19 18:00:00 2013-05-19 23:14:00 2013-05-19 21:40:00    94 mins\n993  2013-08-25 09:00:00 2013-08-25 11:01:00 2013-08-25 11:56:00   -55 mins\n994  2013-10-30 20:00:00 2013-10-30 23:34:00 2013-10-30 23:15:00    19 mins\n995  2013-04-14 13:18:00 2013-04-14 16:12:00 2013-04-14 16:19:00    -7 mins\n996  2013-12-27 10:30:00 2013-12-27 13:23:00 2013-12-27 14:05:00   -42 mins\n997  2013-04-09 16:55:00 2013-04-09 19:51:00 2013-04-09 20:30:00   -39 mins\n998  2013-01-24 09:20:00 2013-01-24 12:42:00 2013-01-24 12:33:00     9 mins\n999  2013-06-21 17:27:00 2013-06-21 20:03:00 2013-06-21 20:24:00   -21 mins\n1000 2013-05-13 17:15:00 2013-05-13 19:28:00 2013-05-13 20:12:00   -44 mins\n1001 2013-11-23 08:57:00 2013-11-23 12:50:00 2013-11-23 12:10:00    40 mins\n1002 2013-04-13 07:10:00 2013-04-13 10:06:00 2013-04-13 10:05:00     1 mins\n1003 2013-11-25 14:15:00 2013-11-25 17:12:00 2013-11-25 17:36:00   -24 mins\n1004 2013-02-03 17:51:00 2013-02-03 20:57:00 2013-02-03 21:03:00    -6 mins\n1005 2013-05-10 08:33:00 2013-05-10 11:17:00 2013-05-10 11:39:00   -22 mins\n1006 2013-10-18 16:25:00 2013-10-18 19:43:00 2013-10-18 19:32:00    11 mins\n1007 2013-04-23 13:55:00 2013-04-23 17:20:00 2013-04-23 17:10:00    10 mins\n1008 2013-09-04 09:55:00 2013-09-04 12:52:00 2013-09-04 13:10:00   -18 mins\n1009 2013-06-08 18:35:00 2013-06-08 21:55:00 2013-06-08 22:13:00   -18 mins\n1010 2013-05-21 17:32:00 2013-05-21 21:00:00 2013-05-21 21:14:00   -14 mins\n1011 2013-02-17 15:30:00 2013-02-17 19:00:00 2013-02-17 19:10:00   -10 mins\n1012 2013-12-18 07:30:00 2013-12-18 10:58:00 2013-12-18 11:10:00   -12 mins\n1013 2013-10-09 16:45:00 2013-10-09 19:27:00 2013-10-09 20:15:00   -48 mins\n1014 2013-12-16 11:12:00 2013-12-16 14:22:00 2013-12-16 14:39:00   -17 mins\n1015 2013-02-28 07:30:00 2013-02-28 10:31:00 2013-02-28 11:15:00   -44 mins\n1016 2013-08-31 13:00:00 2013-08-31 15:28:00 2013-08-31 16:00:00   -32 mins\n1017 2013-08-21 06:58:00 2013-08-21 09:38:00 2013-08-21 09:36:00     2 mins\n1018 2013-08-25 17:30:00 2013-08-25 20:37:00 2013-08-25 21:10:00   -33 mins\n1019 2013-04-30 19:58:00 2013-04-30 22:45:00 2013-04-30 23:15:00   -30 mins\n1020 2013-01-26 09:00:00 2013-01-26 12:21:00 2013-01-26 12:27:00    -6 mins\n1021 2013-04-20 17:29:00 2013-04-20 20:48:00 2013-04-20 21:05:00   -17 mins\n1022 2013-12-22 21:35:00 2013-12-22 01:39:00 2013-12-22 00:55:00    44 mins\n1023 2013-09-26 13:00:00 2013-09-26 15:47:00 2013-09-26 15:55:00    -8 mins\n1024 2013-04-15 07:09:00 2013-04-15 10:15:00 2013-04-15 10:09:00     6 mins\n1025 2013-12-29 18:29:00 2013-12-29 21:32:00 2013-12-29 21:58:00   -26 mins\n1026 2013-04-22 10:30:00 2013-04-22 13:42:00 2013-04-22 14:05:00   -23 mins\n1027 2013-11-08 18:18:00 2013-11-08 21:28:00 2013-11-08 21:31:00    -3 mins\n1028 2013-03-01 14:25:00 2013-03-01 17:28:00 2013-03-01 17:50:00   -22 mins\n1029 2013-04-30 13:39:00 2013-04-30 16:34:00 2013-04-30 16:55:00   -21 mins\n1030 2013-08-30 11:25:00 2013-08-30 13:28:00 2013-08-30 14:25:00   -57 mins\n     late_scaled delayed\n1    -0.02870312   FALSE\n2    -0.02845042    TRUE\n3    -0.02883669   FALSE\n4    -0.02871395   FALSE\n5    -0.02865980   FALSE\n6    -0.02874644   FALSE\n7    -0.02884391   FALSE\n8    -0.02873922   FALSE\n9    -0.02867063   FALSE\n10   -0.02864175   FALSE\n11   -0.02873922   FALSE\n12   -0.02871034   FALSE\n13   -0.02881142   FALSE\n14   -0.02867424   FALSE\n15   -0.02851901    TRUE\n16   -0.02863814   FALSE\n17   -0.02824826    TRUE\n18   -0.02883669   FALSE\n19   -0.02858038      NA\n20   -0.02873922   FALSE\n21   -0.02872117   FALSE\n22   -0.02874283   FALSE\n23   -0.02864175   FALSE\n24   -0.02868146   FALSE\n25   -0.02864897   FALSE\n26   -0.02869590   FALSE\n27   -0.02873200   FALSE\n28   -0.02874283   FALSE\n29   -0.02886196   FALSE\n30   -0.02874644   FALSE\n31   -0.02861287   FALSE\n32   -0.02884752   FALSE\n33   -0.02876088   FALSE\n34   -0.02880420   FALSE\n35   -0.02873200   FALSE\n36   -0.02842154    TRUE\n37   -0.02870312   FALSE\n38   -0.02867424   FALSE\n39   -0.02813996    TRUE\n40   -0.02844320    TRUE\n41   -0.02877893   FALSE\n42   -0.02874644   FALSE\n43   -0.02870312   FALSE\n44   -0.02856233    TRUE\n45   -0.02872478   FALSE\n46   -0.02849735    TRUE\n47   -0.02874644   FALSE\n48   -0.02869590   FALSE\n49   -0.02863814   FALSE\n50   -0.02877893   FALSE\n51   -0.02825548    TRUE\n52   -0.02869229   FALSE\n53   -0.02856955    TRUE\n54   -0.02855511    TRUE\n55   -0.02879337   FALSE\n56   -0.02881503   FALSE\n57   -0.02870312   FALSE\n58   -0.02859843   FALSE\n59   -0.02873561   FALSE\n60   -0.02879698   FALSE\n61   -0.02876810   FALSE\n62   -0.02872117   FALSE\n63   -0.02878976   FALSE\n64   -0.02884391   FALSE\n65   -0.02835656    TRUE\n66   -0.02873200   FALSE\n67   -0.02870673   FALSE\n68   -0.02881142   FALSE\n69   -0.02876810   FALSE\n70   -0.02877532   FALSE\n71   -0.02862009   FALSE\n72   -0.02865619   FALSE\n73   -0.02870673   FALSE\n74   -0.02874283   FALSE\n75   -0.02876449   FALSE\n76   -0.02876449   FALSE\n77   -0.03334559   FALSE\n78   -0.02876449   FALSE\n79   -0.02867424   FALSE\n80   -0.02862731   FALSE\n81   -0.02875366   FALSE\n82   -0.02867785   FALSE\n83   -0.02871034   FALSE\n84   -0.02876449   FALSE\n85   -0.02880781   FALSE\n86   -0.02873922   FALSE\n87   -0.02878254   FALSE\n88   -0.02864536   FALSE\n89   -0.02877893   FALSE\n90   -0.02874644   FALSE\n91   -0.02868507   FALSE\n92   -0.02867424   FALSE\n93   -0.02873200   FALSE\n94   -0.02864536   FALSE\n95   -0.02866341   FALSE\n96   -0.02882947   FALSE\n97   -0.02847208    TRUE\n98   -0.02889445   FALSE\n99   -0.02878254   FALSE\n100  -0.02877532   FALSE\n101  -0.02877532   FALSE\n102  -0.02873922   FALSE\n103  -0.02882947   FALSE\n104  -0.02889084   FALSE\n105  -0.02861648   FALSE\n106  -0.02873200   FALSE\n107  -0.02872117   FALSE\n108  -0.02870312   FALSE\n109  -0.02868146   FALSE\n110  -0.02872839   FALSE\n111  -0.02891250   FALSE\n112  -0.02873200   FALSE\n113  -0.02873922   FALSE\n114  -0.02867785   FALSE\n115  -0.02863453   FALSE\n116  -0.02865258   FALSE\n117  -0.02868868   FALSE\n118  -0.02363466    TRUE\n119  -0.02850096    TRUE\n120  -0.02882225   FALSE\n121  -0.02876088   FALSE\n122  -0.02881142   FALSE\n123  -0.02865980   FALSE\n124  -0.02866341   FALSE\n125  -0.02886557   FALSE\n126  -0.02868146   FALSE\n127  -0.02879698   FALSE\n128  -0.02875366   FALSE\n129  -0.02871034   FALSE\n130  -0.02855150    TRUE\n131  -0.02869229   FALSE\n132  -0.03228064   FALSE\n133  -0.03302791   FALSE\n134  -0.02876449   FALSE\n135  -0.02875005   FALSE\n136  -0.02866341   FALSE\n137  -0.02869229   FALSE\n138  -0.02873200   FALSE\n139  -0.02870673   FALSE\n140  -0.02874644   FALSE\n141  -0.02877532   FALSE\n142  -0.02882225   FALSE\n143  -0.02867785   FALSE\n144  -0.02865258   FALSE\n145  -0.03381850   FALSE\n146  -0.02868868   FALSE\n147  -0.02881503   FALSE\n148  -0.02872839   FALSE\n149  -0.02871034   FALSE\n150  -0.02876449   FALSE\n151  -0.02874644   FALSE\n152  -0.02876449   FALSE\n153  -0.02870312   FALSE\n154  -0.02875366   FALSE\n155  -0.02871034   FALSE\n156  -0.02880059   FALSE\n157  -0.02860926   FALSE\n158  -0.02875005   FALSE\n159  -0.02876449   FALSE\n160  -0.02875366   FALSE\n161  -0.02856955    TRUE\n162  -0.02864175   FALSE\n163  -0.02877171   FALSE\n164  -0.02875005   FALSE\n165  -0.02885835   FALSE\n166  -0.02882947   FALSE\n167  -0.02882947   FALSE\n168  -0.02881142   FALSE\n169  -0.02856955    TRUE\n170  -0.02870673   FALSE\n171  -0.02879337   FALSE\n172  -0.02872117   FALSE\n173  -0.02869590   FALSE\n174  -0.02836739    TRUE\n175  -0.02846847    TRUE\n176  -0.02864175   FALSE\n177  -0.02839627    TRUE\n178  -0.02877532   FALSE\n179  -0.02857316    TRUE\n180  -0.02845403    TRUE\n181  -0.02868507   FALSE\n182  -0.03367049   FALSE\n183  -0.02880420   FALSE\n184  -0.02864536   FALSE\n185  -0.02877532   FALSE\n186  -0.02872117   FALSE\n187  -0.02868868   FALSE\n188  -0.03342501   FALSE\n189  -0.02856233    TRUE\n190  -0.02869590   FALSE\n191  -0.02873922   FALSE\n192  -0.02877532   FALSE\n193  -0.02885835   FALSE\n194  -0.02881142   FALSE\n195  -0.02862370   FALSE\n196  -0.02869229   FALSE\n197  -0.02880781   FALSE\n198  -0.02885474   FALSE\n199  -0.02879698   FALSE\n200  -0.02855150    TRUE\n201  -0.02870673   FALSE\n202  -0.02865980   FALSE\n203  -0.02877893   FALSE\n204  -0.02788365    TRUE\n205  -0.02878615   FALSE\n206  -0.02878254   FALSE\n207  -0.02867785   FALSE\n208  -0.02867785   FALSE\n209  -0.02882586   FALSE\n210  -0.02885474   FALSE\n211  -0.02891611   FALSE\n212  -0.02863092   FALSE\n213  -0.02855150    TRUE\n214  -0.02877893   FALSE\n215  -0.02862731   FALSE\n216  -0.02875005   FALSE\n217  -0.02865619   FALSE\n218  -0.02877171   FALSE\n219  -0.02858038      NA\n220  -0.02875005   FALSE\n221  -0.02884030   FALSE\n222  -0.02846125    TRUE\n223  -0.02878254   FALSE\n224  -0.02879337   FALSE\n225  -0.02886557   FALSE\n226  -0.02858760   FALSE\n227  -0.02877893   FALSE\n228  -0.02855872    TRUE\n229  -0.02858038      NA\n230  -0.02876810   FALSE\n231  -0.02880781   FALSE\n232  -0.02866702   FALSE\n233  -0.02865619   FALSE\n234  -0.03363800   FALSE\n235  -0.02881864   FALSE\n236  -0.02868146   FALSE\n237  -0.02866341   FALSE\n238  -0.02872117   FALSE\n239  -0.02866341   FALSE\n240  -0.02876088   FALSE\n241  -0.02869590   FALSE\n242  -0.02876449   FALSE\n243  -0.02872839   FALSE\n244  -0.02859482   FALSE\n245  -0.03384377   FALSE\n246  -0.02872839   FALSE\n247  -0.02849735    TRUE\n248  -0.02867424   FALSE\n249  -0.02876449   FALSE\n250  -0.02876810   FALSE\n251  -0.02862731   FALSE\n252  -0.02874283   FALSE\n253  -0.02873561   FALSE\n254  -0.02877532   FALSE\n255  -0.02882586   FALSE\n256  -0.02839627    TRUE\n257  -0.02869951   FALSE\n258  -0.02869229   FALSE\n259  -0.02868507   FALSE\n260  -0.02873561   FALSE\n261  -0.02882586   FALSE\n262  -0.02878976   FALSE\n263  -0.02883308   FALSE\n264  -0.02876810   FALSE\n265  -0.03334559   FALSE\n266  -0.02875005   FALSE\n267  -0.02873922   FALSE\n268  -0.02867785   FALSE\n269  -0.02885835   FALSE\n270  -0.02874644   FALSE\n271  -0.02883669   FALSE\n272  -0.02879337   FALSE\n273  -0.02857677    TRUE\n274  -0.02845042    TRUE\n275  -0.03339613   FALSE\n276  -0.02873561   FALSE\n277  -0.02871756   FALSE\n278  -0.02869590   FALSE\n279  -0.02867785   FALSE\n280  -0.02870312   FALSE\n281  -0.02866702   FALSE\n282  -0.02874283   FALSE\n283  -0.02871756   FALSE\n284  -0.02891250   FALSE\n285  -0.02870673   FALSE\n286  -0.02858038      NA\n287  -0.02878976   FALSE\n288  -0.02850818    TRUE\n289  -0.02852262    TRUE\n290  -0.02858399   FALSE\n291  -0.02883669   FALSE\n292  -0.02872117   FALSE\n293  -0.02879337   FALSE\n294  -0.02870312   FALSE\n295  -0.02868868   FALSE\n296  -0.02874283   FALSE\n297  -0.02887279   FALSE\n298  -0.02876088   FALSE\n299  -0.02870312   FALSE\n300  -0.02848291    TRUE\n301  -0.02859843   FALSE\n302  -0.02872478   FALSE\n303  -0.02872117   FALSE\n304  -0.02858760   FALSE\n305  -0.02873922   FALSE\n306  -0.02877893   FALSE\n307  -0.02866702   FALSE\n308  -0.02859121   FALSE\n309  -0.03338169   FALSE\n310  -0.02861648   FALSE\n311  -0.02869951   FALSE\n312  -0.02888001   FALSE\n313  -0.02874644   FALSE\n314  -0.02863092   FALSE\n315  -0.02862731   FALSE\n316  -0.02869951   FALSE\n317  -0.02861648   FALSE\n318  -0.02880781   FALSE\n319  -0.02874644   FALSE\n320  -0.02869590   FALSE\n321  -0.02868507   FALSE\n322  -0.02878615   FALSE\n323  -0.02869590   FALSE\n324  -0.02859843   FALSE\n325  -0.02869229   FALSE\n326  -0.02866702   FALSE\n327  -0.02869229   FALSE\n328  -0.02871395   FALSE\n329  -0.02868507   FALSE\n330  -0.02872478   FALSE\n331  -0.02850457    TRUE\n332  -0.02869590   FALSE\n333  -0.02862370   FALSE\n334  -0.02847569    TRUE\n335  -0.02879698   FALSE\n336  -0.02852623    TRUE\n337  -0.02871756   FALSE\n338  -0.02818689    TRUE\n339  -0.02876449   FALSE\n340  -0.02855872    TRUE\n341  -0.02835295    TRUE\n342  -0.02875727   FALSE\n343  -0.02869951   FALSE\n344  -0.02878615   FALSE\n345  -0.02875727   FALSE\n346  -0.02823021    TRUE\n347  -0.02876449   FALSE\n348  -0.02881503   FALSE\n349  -0.02881503   FALSE\n350  -0.02854428    TRUE\n351  -0.02874644   FALSE\n352  -0.02864175   FALSE\n353  -0.02858399   FALSE\n354  -0.02864536   FALSE\n355  -0.02875005   FALSE\n356  -0.02871034   FALSE\n357  -0.02867063   FALSE\n358  -0.02886196   FALSE\n359  -0.02877532   FALSE\n360  -0.02881503   FALSE\n361  -0.02859843   FALSE\n362  -0.02871395   FALSE\n363  -0.02859482   FALSE\n364  -0.02868507   FALSE\n365  -0.02862009   FALSE\n366  -0.02874644   FALSE\n367  -0.02874644   FALSE\n368  -0.02873561   FALSE\n369  -0.02877171   FALSE\n370  -0.02868507   FALSE\n371  -0.02871034   FALSE\n372  -0.02871395   FALSE\n373  -0.02883308   FALSE\n374  -0.02865619   FALSE\n375  -0.02873200   FALSE\n376  -0.02867063   FALSE\n377  -0.02871034   FALSE\n378  -0.02884030   FALSE\n379  -0.02877893   FALSE\n380  -0.02862370   FALSE\n381  -0.02870673   FALSE\n382  -0.02879698   FALSE\n383  -0.02882586   FALSE\n384  -0.02865980   FALSE\n385  -0.02859843   FALSE\n386  -0.02861287   FALSE\n387  -0.02883308   FALSE\n388  -0.02873561   FALSE\n389  -0.02882225   FALSE\n390  -0.02865619   FALSE\n391  -0.02868507   FALSE\n392  -0.02878254   FALSE\n393  -0.02865980   FALSE\n394  -0.02879698   FALSE\n395  -0.02888362   FALSE\n396  -0.02883308   FALSE\n397  -0.02872839   FALSE\n398  -0.02873922   FALSE\n399  -0.02877171   FALSE\n400  -0.02875727   FALSE\n401  -0.02869590   FALSE\n402  -0.02873200   FALSE\n403  -0.02871756   FALSE\n404  -0.02871756   FALSE\n405  -0.02859482   FALSE\n406  -0.02871756   FALSE\n407  -0.02875727   FALSE\n408  -0.02881864   FALSE\n409  -0.02884752   FALSE\n410  -0.02875727   FALSE\n411  -0.02881503   FALSE\n412  -0.02874283   FALSE\n413  -0.02871395   FALSE\n414  -0.03282575   FALSE\n415  -0.02858399   FALSE\n416  -0.02874283   FALSE\n417  -0.02876810   FALSE\n418  -0.02874283   FALSE\n419  -0.02868146   FALSE\n420  -0.02875727   FALSE\n421  -0.02868146   FALSE\n422  -0.02873561   FALSE\n423  -0.02870673   FALSE\n424  -0.02881864   FALSE\n425  -0.02873922   FALSE\n426  -0.02875366   FALSE\n427  -0.02860565   FALSE\n428  -0.02874644   FALSE\n429  -0.02871034   FALSE\n430  -0.02871756   FALSE\n431  -0.02862370   FALSE\n432  -0.02883308   FALSE\n433  -0.02882947   FALSE\n434  -0.02859482   FALSE\n435  -0.02865619   FALSE\n436  -0.02876088   FALSE\n437  -0.02877532   FALSE\n438  -0.02875366   FALSE\n439  -0.02863814   FALSE\n440  -0.02879698   FALSE\n441  -0.02878976   FALSE\n442  -0.02873922   FALSE\n443  -0.02879698   FALSE\n444  -0.02867063   FALSE\n445  -0.02870312   FALSE\n446  -0.02858038      NA\n447  -0.02861648   FALSE\n448  -0.02867785   FALSE\n449  -0.02866341   FALSE\n450  -0.02873561   FALSE\n451  -0.02878254   FALSE\n452  -0.02871756   FALSE\n453  -0.02868507   FALSE\n454  -0.02867063   FALSE\n455  -0.02858760   FALSE\n456  -0.02856233    TRUE\n457  -0.02859121   FALSE\n458  -0.02880059   FALSE\n459  -0.02872117   FALSE\n460  -0.02871395   FALSE\n461  -0.02862009   FALSE\n462  -0.02866702   FALSE\n463  -0.03335642   FALSE\n464  -0.02853706    TRUE\n465  -0.02875727   FALSE\n466  -0.02869229   FALSE\n467  -0.02871395   FALSE\n468  -0.02877893   FALSE\n469  -0.02878615   FALSE\n470  -0.02872839   FALSE\n471  -0.02874283   FALSE\n472  -0.02858399   FALSE\n473  -0.02356607    TRUE\n474  -0.02874283   FALSE\n475  -0.02880059   FALSE\n476  -0.02860565   FALSE\n477  -0.02877532   FALSE\n478  -0.02872839   FALSE\n479  -0.02877893   FALSE\n480  -0.02865619   FALSE\n481  -0.02867785   FALSE\n482  -0.02865980   FALSE\n483  -0.02872478   FALSE\n484  -0.02880059   FALSE\n485  -0.02876810   FALSE\n486  -0.02878615   FALSE\n487  -0.02872478   FALSE\n488  -0.02874283   FALSE\n489  -0.02854067    TRUE\n490  -0.02886918   FALSE\n491  -0.02872117   FALSE\n492  -0.02872839   FALSE\n493  -0.02869590   FALSE\n494  -0.02869590   FALSE\n495  -0.02882947   FALSE\n496  -0.02867785   FALSE\n497  -0.02868146   FALSE\n498  -0.02873561   FALSE\n499  -0.02860204   FALSE\n500  -0.02871034   FALSE\n501  -0.02876088   FALSE\n502  -0.02858760   FALSE\n503  -0.02872117   FALSE\n504  -0.02882225   FALSE\n505  -0.02885113   FALSE\n506  -0.02868868   FALSE\n507  -0.02839988    TRUE\n508  -0.02888723   FALSE\n509  -0.02879698   FALSE\n510  -0.02867063   FALSE\n511  -0.02846125    TRUE\n512  -0.02873200   FALSE\n513  -0.02858760   FALSE\n514  -0.02869951   FALSE\n515  -0.02868146   FALSE\n516  -0.02867785   FALSE\n517  -0.02879698   FALSE\n518  -0.02876810   FALSE\n519  -0.02871034   FALSE\n520  -0.02878615   FALSE\n521  -0.02881503   FALSE\n522  -0.02874283   FALSE\n523  -0.02880420   FALSE\n524  -0.02876449   FALSE\n525  -0.02868868   FALSE\n526  -0.02843598    TRUE\n527  -0.02883308   FALSE\n528  -0.02867785   FALSE\n529  -0.02871756   FALSE\n530  -0.02867424   FALSE\n531  -0.02875366   FALSE\n532  -0.02872478   FALSE\n533  -0.02873561   FALSE\n534  -0.02861287   FALSE\n535  -0.02873922   FALSE\n536  -0.02871034   FALSE\n537  -0.02876088   FALSE\n538  -0.02863814   FALSE\n539  -0.02870673   FALSE\n540  -0.02872117   FALSE\n541  -0.02875005   FALSE\n542  -0.02872478   FALSE\n543  -0.02870312   FALSE\n544  -0.02877532   FALSE\n545  -0.02858760   FALSE\n546  -0.02859482   FALSE\n547  -0.02869229   FALSE\n548  -0.02871395   FALSE\n549  -0.02880420   FALSE\n550  -0.02877532   FALSE\n551  -0.02855511    TRUE\n552  -0.02873200   FALSE\n553  -0.02872117   FALSE\n554  -0.02872117   FALSE\n555  -0.02876449   FALSE\n556  -0.02873200   FALSE\n557  -0.02868507   FALSE\n558  -0.02875727   FALSE\n559  -0.02861648   FALSE\n560  -0.03305679   FALSE\n561  -0.02874283   FALSE\n562  -0.02871395   FALSE\n563  -0.02878976   FALSE\n564  -0.02364549    TRUE\n565  -0.02867424   FALSE\n566  -0.02864175   FALSE\n567  -0.02878976   FALSE\n568  -0.02854428    TRUE\n569  -0.02867063   FALSE\n570  -0.02864536   FALSE\n571  -0.02855511    TRUE\n572  -0.03310733   FALSE\n573  -0.02876449   FALSE\n574  -0.02875366   FALSE\n575  -0.02878976   FALSE\n576  -0.02870312   FALSE\n577  -0.02844320    TRUE\n578  -0.02848291    TRUE\n579  -0.02875727   FALSE\n580  -0.02871756   FALSE\n581  -0.02874644   FALSE\n582  -0.02866341   FALSE\n583  -0.02874644   FALSE\n584  -0.02844320    TRUE\n585  -0.02886918   FALSE\n586  -0.02859482   FALSE\n587  -0.02360939    TRUE\n588  -0.02886557   FALSE\n589  -0.02878976   FALSE\n590  -0.02863453   FALSE\n591  -0.02869229   FALSE\n592  -0.02868146   FALSE\n593  -0.02827353    TRUE\n594  -0.02874644   FALSE\n595  -0.02880420   FALSE\n596  -0.02877171   FALSE\n597  -0.03359829   FALSE\n598  -0.02855511    TRUE\n599  -0.02871756   FALSE\n600  -0.02881864   FALSE\n601  -0.02870673   FALSE\n602  -0.02878254   FALSE\n603  -0.02878615   FALSE\n604  -0.02881503   FALSE\n605  -0.02870673   FALSE\n606  -0.02872478   FALSE\n607  -0.02359856    TRUE\n608  -0.02875366   FALSE\n609  -0.02865619   FALSE\n610  -0.02869229   FALSE\n611  -0.02870673   FALSE\n612  -0.02868146   FALSE\n613  -0.02859843   FALSE\n614  -0.02864175   FALSE\n615  -0.02861648   FALSE\n616  -0.02863453   FALSE\n617  -0.02886196   FALSE\n618  -0.02880420   FALSE\n619  -0.02848652    TRUE\n620  -0.02870673   FALSE\n621  -0.02813635    TRUE\n622  -0.02872478   FALSE\n623  -0.02871756   FALSE\n624  -0.02882586   FALSE\n625  -0.02876810   FALSE\n626  -0.02874283   FALSE\n627  -0.02873561   FALSE\n628  -0.02869229   FALSE\n629  -0.02884030   FALSE\n630  -0.02868507   FALSE\n631  -0.02876088   FALSE\n632  -0.02824465    TRUE\n633  -0.02860565   FALSE\n634  -0.02878976   FALSE\n635  -0.02855511    TRUE\n636  -0.02797390    TRUE\n637  -0.02876449   FALSE\n638  -0.02874283   FALSE\n639  -0.02849735    TRUE\n640  -0.02873200   FALSE\n641  -0.02858399   FALSE\n642  -0.02860204   FALSE\n643  -0.02868507   FALSE\n644  -0.02870312   FALSE\n645  -0.02880059   FALSE\n646  -0.02881864   FALSE\n647  -0.02868868   FALSE\n648  -0.02883308   FALSE\n649  -0.02832407    TRUE\n650  -0.02838183    TRUE\n651  -0.02877893   FALSE\n652  -0.02869229   FALSE\n653  -0.02869951   FALSE\n654  -0.02856594    TRUE\n655  -0.02879698   FALSE\n656  -0.02876449   FALSE\n657  -0.02856955    TRUE\n658  -0.03325534   FALSE\n659  -0.02866702   FALSE\n660  -0.02873922   FALSE\n661  -0.02822660    TRUE\n662  -0.02858399   FALSE\n663  -0.02859843   FALSE\n664  -0.02878615   FALSE\n665  -0.02877893   FALSE\n666  -0.02873922   FALSE\n667  -0.02867424   FALSE\n668  -0.02881142   FALSE\n669  -0.02876810   FALSE\n670  -0.02868146   FALSE\n671  -0.02884752   FALSE\n672  -0.02866702   FALSE\n673  -0.02873200   FALSE\n674  -0.02888001   FALSE\n675  -0.02864536   FALSE\n676  -0.02877171   FALSE\n677  -0.02861287   FALSE\n678  -0.02883669   FALSE\n679  -0.02879698   FALSE\n680  -0.02845403    TRUE\n681  -0.02871034   FALSE\n682  -0.02815079    TRUE\n683  -0.02868507   FALSE\n684  -0.02876810   FALSE\n685  -0.02849735    TRUE\n686  -0.02864897   FALSE\n687  -0.02859843   FALSE\n688  -0.02882225   FALSE\n689  -0.02867424   FALSE\n690  -0.02881142   FALSE\n691  -0.02848291    TRUE\n692  -0.02875727   FALSE\n693  -0.02867424   FALSE\n694  -0.02856233    TRUE\n695  -0.02880059   FALSE\n696  -0.02873200   FALSE\n697  -0.02866702   FALSE\n698  -0.02883669   FALSE\n699  -0.02868507   FALSE\n700  -0.02876810   FALSE\n701  -0.02861287   FALSE\n702  -0.02852262    TRUE\n703  -0.02886196   FALSE\n704  -0.02851179    TRUE\n705  -0.02853706    TRUE\n706  -0.02878615   FALSE\n707  -0.02861287   FALSE\n708  -0.02863814   FALSE\n709  -0.02872117   FALSE\n710  -0.02873561   FALSE\n711  -0.02866341   FALSE\n712  -0.02869590   FALSE\n713  -0.02887640   FALSE\n714  -0.02876449   FALSE\n715  -0.02873561   FALSE\n716  -0.02880420   FALSE\n717  -0.02871756   FALSE\n718  -0.02865258   FALSE\n719  -0.02869590   FALSE\n720  -0.02876810   FALSE\n721  -0.02864897   FALSE\n722  -0.02867424   FALSE\n723  -0.02859121   FALSE\n724  -0.02870673   FALSE\n725  -0.02871756   FALSE\n726  -0.02868146   FALSE\n727  -0.02873561   FALSE\n728  -0.02872478   FALSE\n729  -0.02871034   FALSE\n730  -0.02876449   FALSE\n731  -0.02845042    TRUE\n732  -0.02876810   FALSE\n733  -0.02865258   FALSE\n734  -0.02865258   FALSE\n735  -0.02871756   FALSE\n736  -0.02861648   FALSE\n737  -0.02878615   FALSE\n738  -0.02873922   FALSE\n739  -0.02876810   FALSE\n740  -0.02849735    TRUE\n741  -0.02849735    TRUE\n742  -0.02871034   FALSE\n743  -0.02868507   FALSE\n744  -0.02871756   FALSE\n745  -0.02856233    TRUE\n746  -0.02861287   FALSE\n747  -0.03378240   FALSE\n748  -0.02858760   FALSE\n749  -0.02858760   FALSE\n750  -0.02869951   FALSE\n751  -0.02857316    TRUE\n752  -0.02874283   FALSE\n753  -0.02890528   FALSE\n754  -0.02884030   FALSE\n755  -0.02882225   FALSE\n756  -0.02870312   FALSE\n757  -0.02864897   FALSE\n758  -0.02855150    TRUE\n759  -0.02836739    TRUE\n760  -0.02873561   FALSE\n761  -0.02872478   FALSE\n762  -0.02877893   FALSE\n763  -0.03355497   FALSE\n764  -0.02863092   FALSE\n765  -0.02879337   FALSE\n766  -0.02885474   FALSE\n767  -0.02863453   FALSE\n768  -0.02875727   FALSE\n769  -0.02864175   FALSE\n770  -0.02872478   FALSE\n771  -0.02886196   FALSE\n772  -0.02875727   FALSE\n773  -0.02873200   FALSE\n774  -0.02884752   FALSE\n775  -0.02875727   FALSE\n776  -0.02867424   FALSE\n777  -0.02879698   FALSE\n778  -0.02865258   FALSE\n779  -0.02837822    TRUE\n780  -0.02872839   FALSE\n781  -0.02873561   FALSE\n782  -0.02864536   FALSE\n783  -0.02869951   FALSE\n784  -0.02880059   FALSE\n785  -0.02873200   FALSE\n786  -0.02866702   FALSE\n787  -0.02865619   FALSE\n788  -0.02869229   FALSE\n789  -0.02879698   FALSE\n790  -0.02862009   FALSE\n791  -0.02873561   FALSE\n792  -0.02875727   FALSE\n793  -0.02880781   FALSE\n794  -0.02880059   FALSE\n795  -0.02862370   FALSE\n796  -0.02872839   FALSE\n797  -0.02875005   FALSE\n798  -0.02872117   FALSE\n799  -0.02839988    TRUE\n800  -0.02869590   FALSE\n801  -0.02877532   FALSE\n802  -0.02871395   FALSE\n803  -0.02849735    TRUE\n804  -0.02875727   FALSE\n805  -0.02865980   FALSE\n806  -0.02868868   FALSE\n807  -0.02830963    TRUE\n808  -0.02876810   FALSE\n809  -0.02879337   FALSE\n810  -0.02879698   FALSE\n811  -0.02867424   FALSE\n812  -0.02876449   FALSE\n813  -0.02875727   FALSE\n814  -0.02878976   FALSE\n815  -0.02883669   FALSE\n816  -0.02867424   FALSE\n817  -0.02871034   FALSE\n818  -0.02871034   FALSE\n819  -0.02883308   FALSE\n820  -0.02863453   FALSE\n821  -0.02869951   FALSE\n822  -0.02834573    TRUE\n823  -0.02881864   FALSE\n824  -0.02878254   FALSE\n825  -0.02872839   FALSE\n826  -0.02876449   FALSE\n827  -0.02877171   FALSE\n828  -0.02869590   FALSE\n829  -0.02872839   FALSE\n830  -0.02870312   FALSE\n831  -0.02875366   FALSE\n832  -0.03362356   FALSE\n833  -0.02887279   FALSE\n834  -0.02883308   FALSE\n835  -0.02866341   FALSE\n836  -0.02871756   FALSE\n837  -0.02866702   FALSE\n838  -0.02866702   FALSE\n839  -0.02861287   FALSE\n840  -0.02880059   FALSE\n841  -0.02878615   FALSE\n842  -0.02881142   FALSE\n843  -0.02834212    TRUE\n844  -0.02875366   FALSE\n845  -0.02870673   FALSE\n846  -0.02878254   FALSE\n847  -0.02868868   FALSE\n848  -0.02860926   FALSE\n849  -0.02822660    TRUE\n850  -0.02873922   FALSE\n851  -0.02871395   FALSE\n852  -0.02879337   FALSE\n853  -0.02881142   FALSE\n854  -0.02870312   FALSE\n855  -0.02867785   FALSE\n856  -0.02864536   FALSE\n857  -0.02871034   FALSE\n858  -0.02875005   FALSE\n859  -0.02868146   FALSE\n860  -0.02878615   FALSE\n861  -0.02871395   FALSE\n862  -0.02876810   FALSE\n863  -0.02879698   FALSE\n864  -0.02861287   FALSE\n865  -0.02866702   FALSE\n866  -0.02875005   FALSE\n867  -0.02877171   FALSE\n868  -0.02870673   FALSE\n869  -0.02872478   FALSE\n870  -0.02865980   FALSE\n871  -0.02873200   FALSE\n872  -0.02873561   FALSE\n873  -0.02873200   FALSE\n874  -0.02867063   FALSE\n875  -0.02864536   FALSE\n876  -0.02871395   FALSE\n877  -0.02847208    TRUE\n878  -0.02867785   FALSE\n879  -0.02803527    TRUE\n880  -0.02874644   FALSE\n881  -0.02866702   FALSE\n882  -0.02875366   FALSE\n883  -0.02872478   FALSE\n884  -0.02839266    TRUE\n885  -0.02886557   FALSE\n886  -0.02876088   FALSE\n887  -0.03371381   FALSE\n888  -0.02862009   FALSE\n889  -0.02876088   FALSE\n890  -0.02888362   FALSE\n891  -0.02871395   FALSE\n892  -0.02863453   FALSE\n893  -0.02871756   FALSE\n894  -0.02885835   FALSE\n895  -0.02878976   FALSE\n896  -0.02822299    TRUE\n897  -0.02864897   FALSE\n898  -0.02885113   FALSE\n899  -0.02873200   FALSE\n900  -0.02865980   FALSE\n901  -0.02861287   FALSE\n902  -0.02876810   FALSE\n903  -0.02876449   FALSE\n904  -0.02872839   FALSE\n905  -0.02856955    TRUE\n906  -0.02870312   FALSE\n907  -0.02855150    TRUE\n908  -0.02868146   FALSE\n909  -0.02867063   FALSE\n910  -0.02859843   FALSE\n911  -0.02871034   FALSE\n912  -0.02862009   FALSE\n913  -0.02875727   FALSE\n914  -0.03363800   FALSE\n915  -0.02871395   FALSE\n916  -0.02853345    TRUE\n917  -0.02871395   FALSE\n918  -0.02865619   FALSE\n919  -0.02847208    TRUE\n920  -0.02873561   FALSE\n921  -0.02880420   FALSE\n922  -0.02863092   FALSE\n923  -0.02854067    TRUE\n924  -0.02870673   FALSE\n925  -0.02873200   FALSE\n926  -0.02872117   FALSE\n927  -0.02867785   FALSE\n928  -0.02878615   FALSE\n929  -0.02851901    TRUE\n930  -0.02865619   FALSE\n931  -0.02847930    TRUE\n932  -0.02891250   FALSE\n933  -0.02860204   FALSE\n934  -0.02869590   FALSE\n935  -0.02856594    TRUE\n936  -0.02872117   FALSE\n937  -0.02881864   FALSE\n938  -0.02866702   FALSE\n939  -0.02861287   FALSE\n940  -0.02876088   FALSE\n941  -0.02869951   FALSE\n942  -0.02873922   FALSE\n943  -0.02858760   FALSE\n944  -0.02876449   FALSE\n945  -0.02872839   FALSE\n946  -0.02842154    TRUE\n947  -0.02829880    TRUE\n948  -0.03350443   FALSE\n949  -0.02873922   FALSE\n950  -0.02872839   FALSE\n951  -0.03312538   FALSE\n952  -0.02860565   FALSE\n953  -0.02869229   FALSE\n954  -0.02882586   FALSE\n955  -0.02859121   FALSE\n956  -0.02856594    TRUE\n957  -0.02878254   FALSE\n958  -0.02877893   FALSE\n959  -0.02855872    TRUE\n960  -0.02875727   FALSE\n961  -0.02871395   FALSE\n962  -0.02859843   FALSE\n963  -0.02860204   FALSE\n964  -0.02844320    TRUE\n965  -0.02815079    TRUE\n966  -0.02862731   FALSE\n967  -0.02833129    TRUE\n968  -0.03292322   FALSE\n969  -0.02867785   FALSE\n970  -0.02867063   FALSE\n971  -0.02833490    TRUE\n972  -0.02872478   FALSE\n973  -0.02873200   FALSE\n974  -0.02879337   FALSE\n975  -0.02875366   FALSE\n976  -0.02869951   FALSE\n977  -0.02878615   FALSE\n978  -0.02871756   FALSE\n979  -0.02872839   FALSE\n980  -0.02866341   FALSE\n981  -0.02872839   FALSE\n982  -0.02877532   FALSE\n983  -0.02877171   FALSE\n984  -0.02876088   FALSE\n985  -0.02875366   FALSE\n986  -0.02871756   FALSE\n987  -0.02874283   FALSE\n988  -0.02875727   FALSE\n989  -0.02876810   FALSE\n990  -0.02884752   FALSE\n991  -0.02879337   FALSE\n992  -0.02834934    TRUE\n993  -0.02888723   FALSE\n994  -0.02862009   FALSE\n995  -0.02871395   FALSE\n996  -0.02884030   FALSE\n997  -0.02882947   FALSE\n998  -0.02865619   FALSE\n999  -0.02876449   FALSE\n1000 -0.02884752   FALSE\n1001 -0.02854428    TRUE\n1002 -0.02868507   FALSE\n1003 -0.02877532   FALSE\n1004 -0.02871034   FALSE\n1005 -0.02876810   FALSE\n1006 -0.02864897   FALSE\n1007 -0.02865258   FALSE\n1008 -0.02875366   FALSE\n1009 -0.02875366   FALSE\n1010 -0.02873922   FALSE\n1011 -0.02872478   FALSE\n1012 -0.02873200   FALSE\n1013 -0.02886196   FALSE\n1014 -0.02875005   FALSE\n1015 -0.02884752   FALSE\n1016 -0.02880420   FALSE\n1017 -0.02868146   FALSE\n1018 -0.02880781   FALSE\n1019 -0.02879698   FALSE\n1020 -0.02871034   FALSE\n1021 -0.02875005   FALSE\n1022 -0.02852984    TRUE\n1023 -0.02871756   FALSE\n1024 -0.02866702   FALSE\n1025 -0.02878254   FALSE\n1026 -0.02877171   FALSE\n1027 -0.02869951   FALSE\n1028 -0.02876810   FALSE\n1029 -0.02876449   FALSE\n1030 -0.02889445   FALSE\n\n\nWie könnte man diesen Filter deutlich effizienter umsetzen, mit dem, was ihr schon gelernt habt? Macht einen Vorschlag im Codefenster:\n\ndataset %&gt;% \n  filter(dest %in% ap.cali)\n\n        X carrier flight tailnum origin dest distance           departure\n1      13      VX    407  N626VA    JFK  LAX     2475 2013-06-30 09:40:00\n2      15      UA   1165  N74856    EWR  LAX     2454 2013-04-22 18:56:00\n3      19      AA     59  N393AA    JFK  SFO     2586 2013-12-26 08:00:00\n4      38      UA   1165  N24211    EWR  LAX     2454 2013-11-26 18:15:00\n5      49      AA    185  N338AA    JFK  LAX     2475 2013-10-22 21:34:00\n6      50      AA    181  N328AA    JFK  LAX     2475 2013-08-23 17:08:00\n7      53      B6    671  N652JB    JFK  LAX     2475 2013-01-07 07:04:00\n8      78      AA     21  N324AA    JFK  LAX     2475 2013-03-06 19:14:00\n9      87      UA    397  N510UA    JFK  SFO     2586 2013-01-15 08:01:00\n10    107      UA    257  N595UA    JFK  SFO     2586 2013-09-27 15:20:00\n11    144      AA    181  N335AA    JFK  LAX     2475 2013-05-31 17:01:00\n12    145      UA    497  N833UA    EWR  SFO     2565 2013-12-23 08:06:00\n13    148      UA    703  N554UA    JFK  LAX     2475 2013-09-05 11:34:00\n14    163      UA    799  N517UA    JFK  SFO     2586 2013-01-24 07:13:00\n15    183      B6    323  N570JB    JFK  LAX     2475 2013-12-03 12:08:00\n16    205      UA    303  N532UA    JFK  SFO     2586 2013-01-01 06:11:00\n17    212      UA    535  N505UA    JFK  LAX     2475 2013-04-22 19:56:00\n18    220      UA    421  N420UA    EWR  SFO     2565 2013-04-29 05:56:00\n19    238      B6    185  N646JB    JFK  SAN     2446 2013-02-10 17:19:00\n20    241      DL    763  N194DN    JFK  LAX     2475 2013-08-02 07:00:00\n21    252      AA     67  N3DVAA    JFK  SAN     2446 2013-10-21 17:36:00\n22    264      B6    209  N586JB    JFK  LGB     2465 2013-05-10 13:55:00\n23    280      DL    409  N703TW    JFK  SFO     2586 2013-11-22 16:00:00\n24    288      DL    503  N3769L    JFK  SAN     2446 2013-05-07 17:23:00\n25    294      AA     19  N328AA    JFK  LAX     2475 2013-01-01 10:26:00\n26    301      UA    806  N586UA    EWR  LAX     2454 2013-07-09 10:33:00\n27    302      UA    768  N556UA    EWR  LAX     2454 2013-04-11 19:44:00\n28    303      UA   1201  N18112    JFK  LAX     2475 2013-05-19 08:37:00\n29    304      UA   1626  N16709    EWR  SAN     2425 2013-07-03 08:59:00\n30    307      DL    422  N705TW    JFK  LAX     2475 2013-11-02 08:53:00\n31    336      UA   1626  N28457    EWR  SAN     2425 2013-10-19 18:04:00\n32    342      AA    117  N327AA    JFK  LAX     2475 2013-09-06 13:42:00\n33    347      DL   1088   N3753    JFK  SAN     2446 2013-02-27 17:14:00\n34    357      UA   1480  N73270    EWR  SFO     2565 2013-12-27 10:12:00\n35    369      UA    257  N546UA    JFK  SFO     2586 2013-11-14 15:31:00\n36    373      B6     89  N583JB    JFK  SAN     2446 2013-11-17 18:00:00\n37    384      DL    269  N624AG    JFK  SFO     2586 2013-10-04 06:54:00\n38    388      B6    161  N644JB    JFK  SMF     2521 2013-08-18 19:38:00\n39    400      UA    312  N454UA    EWR  SAN     2425 2013-12-11 21:04:00\n40    402      AA    185  N338AA    JFK  LAX     2475 2013-11-01 22:44:00\n41    403      DL   1565  N722TW    JFK  SFO     2586 2013-05-02 13:56:00\n42    406      B6    673  N705JB    JFK  LAX     2475 2013-04-19 11:06:00\n43    413      UA     73  N87507    EWR  SFO     2565 2013-08-28 09:22:00\n44    416      DL    409  N703TW    JFK  SFO     2586 2013-12-20 16:45:00\n45    455      UA   1651  N73275    EWR  SFO     2565 2013-10-04 19:55:00\n46    504      B6    359  N583JB    JFK  BUR     2465 2013-02-23 17:31:00\n47    524      DL   1765  N727TW    JFK  SFO     2586 2013-01-06 10:00:00\n48    534      DL    423  N722TW    JFK  LAX     2475 2013-12-09 11:58:00\n49    536      AA     67  N3JKAA    JFK  SAN     2446 2013-10-18 17:48:00\n50    548      UA   1479  N76503    EWR  LAX     2454 2013-09-22 10:41:00\n51    556      AA    185  N324AA    JFK  LAX     2475 2013-07-01 00:44:00\n52    566      UA    535  N560UA    JFK  LAX     2475 2013-09-26 17:58:00\n53    571      B6    167  N561JB    JFK  OAK     2576 2013-06-30 17:49:00\n54    573      UA    212  N592UA    EWR  SFO     2565 2013-06-07 18:39:00\n55    575      UA    295  N586UA    EWR  SNA     2434 2013-07-19 07:15:00\n56    596      B6    173  N552JB    JFK  SJC     2569 2013-05-28 18:30:00\n57    601      AA    119  N3HYAA    EWR  LAX     2454 2013-11-18 18:46:00\n58    611      UA   1289  N77520    EWR  SFO     2565 2013-10-14 08:32:00\n59    618      DL   1465  N624AG    JFK  SFO     2586 2013-06-29 19:13:00\n60    633      UA   1037  N37466    EWR  LAX     2454 2013-08-21 20:57:00\n61    654      UA   1287  N79402    EWR  SFO     2565 2013-09-13 09:15:00\n62    660      DL     17  N192DN    JFK  LAX     2475 2013-05-13 18:22:00\n63    675      AA     19  N339AA    JFK  LAX     2475 2013-09-10 10:24:00\n64    682      AA      3  N328AA    JFK  LAX     2475 2013-05-20 11:58:00\n65    691      UA   1621  N34282    EWR  SFO     2565 2013-07-25 14:31:00\n66    711      B6    645  N662JB    JFK  SFO     2586 2013-04-18 20:14:00\n67    749      VX    165  N621VA    EWR  LAX     2454 2013-07-26 13:00:00\n68    757      UA    397  N518UA    JFK  SFO     2586 2013-05-18 07:52:00\n69    760      DL    120  N710TW    JFK  LAX     2475 2013-02-10 08:57:00\n70    778      UA   1496  N14704    EWR  SNA     2434 2013-06-27 07:04:00\n71    802      UA   1047  N78509    EWR  SNA     2434 2013-08-11 19:29:00\n72    812      UA    443  N508UA    JFK  LAX     2475 2013-07-26 08:29:00\n73    821      UA    205  N839UA    EWR  SFO     2565 2013-04-07 06:56:00\n74    830      UA   1600  N14118    EWR  LAX     2454 2013-09-28 15:18:00\n75    836      UA    162  N37287    EWR  SFO     2565 2013-03-26 15:02:00\n76    853      DL   1865  N723TW    JFK  SFO     2586 2013-05-29 07:00:00\n77    854      UA   1141  N32404    EWR  SFO     2565 2013-07-28 19:59:00\n78    862      VX    169  N524VA    EWR  LAX     2454 2013-05-13 19:00:00\n79    886      UA    297  N834UA    EWR  LAX     2454 2013-12-11 09:58:00\n80    890      AA    177  N5DDAA    JFK  SFO     2586 2013-10-30 18:50:00\n81    902      UA   1556  N53442    EWR  SFO     2565 2013-08-02 13:44:00\n82    923      DL    430  N624AG    JFK  SFO     2586 2013-12-02 06:59:00\n83    924      DL    427  N1200K    JFK  LAX     2475 2013-10-27 21:07:00\n84    925      UA    797  N595UA    JFK  LAX     2475 2013-09-04 06:34:00\n85    930      AA     85  N357AA    JFK  SFO     2586 2013-03-02 15:25:00\n86    931      VX     11  N844VA    JFK  SFO     2586 2013-01-10 07:27:00\n87    934      VX     11  N361VA    JFK  SFO     2586 2013-10-22 07:30:00\n88    936      UA   1663  N77525    EWR  SFO     2565 2013-02-03 08:23:00\n89    938      UA    821  N555UA    JFK  SFO     2586 2013-10-17 06:58:00\n90    941      VX    399  N631VA    JFK  LAX     2475 2013-08-23 07:16:00\n91    980      AA    145  N3CNAA    JFK  SAN     2446 2013-01-13 17:26:00\n92   1028      UA   1593  N37427    EWR  SFO     2565 2013-08-08 13:47:00\n93   1044      B6    167  N658JB    JFK  OAK     2576 2013-09-23 17:06:00\n94   1053      DL    763  N717TW    JFK  LAX     2475 2013-01-25 06:54:00\n95   1094      UA   1493  N76514    EWR  LAX     2454 2013-09-19 14:29:00\n96   1095      B6    641  N768JB    JFK  SFO     2586 2013-04-09 10:32:00\n97   1098      AA     33  N319AA    JFK  LAX     2475 2013-03-08 08:18:00\n98   1102      UA   1668  N36207    EWR  SFO     2565 2013-05-06 07:21:00\n99   1104      UA   1600  N17139    EWR  LAX     2454 2013-05-02 15:15:00\n100  1108      AA      3  N323AA    JFK  LAX     2475 2013-06-30 11:51:00\n101  1116      UA    593  N581UA    EWR  SNA     2434 2013-02-02 18:12:00\n102  1117      UA    375  N804UA    EWR  LAX     2454 2013-11-09 16:31:00\n103  1136      AA    185  N332AA    JFK  LAX     2475 2013-08-18 21:46:00\n104  1143      B6    161  N796JB    JFK  SMF     2521 2013-07-15 19:35:00\n105  1146      UA    389  N595UA    JFK  SFO     2586 2013-08-28 18:53:00\n106  1151      UA    512  N587UA    JFK  SFO     2586 2013-11-26 17:03:00\n107  1158      UA   1284  N17128    EWR  SFO     2565 2013-01-22 17:08:00\n108  1160      UA   1663  N35204    EWR  SFO     2565 2013-11-11 14:08:00\n109  1161      UA    421  N823UA    EWR  SFO     2565 2013-07-07 07:36:00\n110  1170      UA   1719  N21723    EWR  SNA     2434 2013-04-12 07:07:00\n111  1171      UA   1626  N87527    EWR  SAN     2425 2013-05-13 09:13:00\n112  1177      UA    387  N844UA    EWR  LAX     2454 2013-03-23 06:37:00\n113  1196      UA   1526  N37252    EWR  LAX     2454 2013-10-30 18:51:00\n114  1203      UA   1083  N34131    EWR  LAX     2454 2013-02-17 13:24:00\n115  1206      DL    863  N717TW    JFK  LAX     2475 2013-03-05 11:53:00\n116  1209      UA   1072  N37437    EWR  SFO     2565 2013-08-16 21:40:00\n117  1213      UA    421  N507UA    EWR  SFO     2565 2013-08-03 16:00:00\n118  1218      DL   2363  N705TW    JFK  LAX     2475 2013-05-16 20:57:00\n119  1237      VX    169  N526VA    EWR  LAX     2454 2013-06-17 19:02:00\n120  1239      UA    758  N541UA    EWR  SFO     2565 2013-06-01 11:45:00\n121  1249      AA    117  N339AA    JFK  LAX     2475 2013-10-11 13:39:00\n122  1262      AA      1  N327AA    JFK  LAX     2475 2013-12-28 08:52:00\n123  1283      DL    426  N155DL    JFK  LAX     2475 2013-12-06 18:15:00\n124  1285      UA   1665  N76508    EWR  LAX     2454 2013-04-24 07:03:00\n125  1287      VX    193  N622VA    EWR  SFO     2565 2013-05-06 17:32:00\n126  1289      UA    346  N840UA    EWR  LAX     2454 2013-05-14 18:26:00\n127  1292      VX    187  N631VA    EWR  SFO     2565 2013-09-09 10:22:00\n128  1300      AA    119  N3EJAA    EWR  LAX     2454 2013-06-04 18:25:00\n129  1317      UA    445  N585UA    EWR  LAX     2454 2013-08-06 11:00:00\n130  1342      VX     29  N637VA    JFK  SFO     2586 2013-09-19 19:19:00\n131  1353      DL   1765   N704X    JFK  SFO     2586 2013-01-28 09:53:00\n132  1386      B6    415  N641JB    JFK  SFO     2586 2013-07-10 01:33:00\n133  1394      VX    193  N529VA    EWR  SFO     2565 2013-04-14 21:03:00\n134  1430      DL    426  N1200K    JFK  LAX     2475 2013-11-06 18:12:00\n135  1442      UA    580  N554UA    JFK  SFO     2586 2013-06-20 11:48:00\n136  1455      UA   1574  N76517    EWR  SFO     2565 2013-08-01 05:54:00\n137  1459      UA    434  N560UA    JFK  SFO     2586 2013-05-24 14:29:00\n138  1461      UA   1644  N27733    EWR  SNA     2434 2013-05-24 12:15:00\n139  1463      AA      1  N320AA    JFK  LAX     2475 2013-06-17 09:11:00\n140  1470      B6    223  N618JB    JFK  LAX     2475 2013-07-08 09:32:00\n141  1476      UA   1735  N16217    EWR  LAX     2454 2013-08-20 10:08:00\n142  1478      AA     67  N3KJAA    JFK  SAN     2446 2013-09-07 17:42:00\n143  1484      UA   1626  N37287    EWR  SAN     2425 2013-02-10 08:38:00\n144  1485      UA    571  N530UA    EWR  LAX     2454 2013-12-19 18:02:00\n145  1489      B6    677  N807JB    JFK  LAX     2475 2013-02-20 21:11:00\n146  1492      AA    179  N338AA    JFK  SFO     2586 2013-05-25 09:24:00\n147  1493      B6    423  N646JB    JFK  LAX     2475 2013-07-15 16:52:00\n148  1497      B6    213  N558JB    JFK  LGB     2465 2013-07-11 13:45:00\n149  1498      AA     85  N342AA    JFK  SFO     2586 2013-01-01 15:39:00\n150  1518      B6    181  N646JB    JFK  SAN     2446 2013-03-25 08:28:00\n151  1519      UA    642  N505UA    JFK  SFO     2586 2013-01-10 10:56:00\n152  1530      B6    643  N821JB    JFK  SFO     2586 2013-03-28 07:30:00\n153  1543      UA    512  N508UA    JFK  SFO     2586 2013-08-14 16:54:00\n154  1544      VX    399  N642VA    JFK  LAX     2475 2013-07-24 07:10:00\n155  1546      UA   1532  N35407    EWR  SFO     2565 2013-06-07 19:47:00\n156  1551      UA   1626  N76523    EWR  SAN     2425 2013-05-20 09:09:00\n157  1562      UA    112  N58101    JFK  LAX     2475 2013-02-08 08:39:00\n158  1579      UA    272  N560UA    JFK  SFO     2586 2013-01-30 18:28:00\n159  1580      VX     23  N630VA    JFK  SFO     2586 2013-08-25 10:25:00\n160  1584      AA    185  N319AA    JFK  LAX     2475 2013-03-30 21:28:00\n161  1585      UA    471  N520UA    EWR  SFO     2565 2013-11-19 09:51:00\n162  1591      AA     85  N382AA    JFK  SFO     2586 2013-08-12 15:31:00\n163  1596      AA    145  N3CNAA    JFK  SAN     2446 2013-08-30 17:58:00\n164  1634      VX    411  N633VA    JFK  LAX     2475 2013-03-27 13:23:00\n165  1638      AA      1  N328AA    JFK  LAX     2475 2013-04-09 08:52:00\n166  1645      DL    963  N721TW    JFK  LAX     2475 2013-01-21 14:59:00\n167  1661      AA      1  N328AA    JFK  LAX     2475 2013-06-01 09:00:00\n168  1665      VX    183  N842VA    EWR  SFO     2565 2013-09-13 07:20:00\n169  1672      UA   1030  N14121    JFK  LAX     2475 2013-02-11 06:17:00\n170  1674      UA    703  N560UA    JFK  LAX     2475 2013-10-03 11:21:00\n171  1677      UA    397  N525UA    JFK  SFO     2586 2013-02-24 08:01:00\n172  1679      DL   1565  N703TW    JFK  SFO     2586 2013-09-27 12:58:00\n173  1683      AA    179  N324AA    JFK  SFO     2586 2013-07-30 10:25:00\n174  1688      B6    359  N789JB    JFK  BUR     2465 2013-08-11 19:05:00\n175  1718      UA   1294  N37419    EWR  SFO     2565 2013-11-04 13:12:00\n176  1724      VX    413  N628VA    JFK  LAX     2475 2013-10-07 17:30:00\n177  1728      UA    389  N595UA    JFK  SFO     2586 2013-09-20 19:01:00\n178  1732      VX    165  N621VA    EWR  LAX     2454 2013-09-14 12:56:00\n179  1740      UA    992  N462UA    EWR  LAX     2454 2013-04-15 17:04:00\n180  1756      UA    535  N595UA    JFK  LAX     2475 2013-07-25 18:37:00\n181  1787      VX     11  N837VA    JFK  SFO     2586 2013-11-17 07:29:00\n182  1803      UA    997  N563UA    EWR  LAX     2454 2013-12-22 22:00:00\n183  1804      VX    183  N855VA    EWR  SFO     2565 2013-08-23 07:20:00\n184  1806      UA   1139  N73283    EWR  LAX     2454 2013-01-18 18:46:00\n185  1811      UA   1124  N21723    EWR  SNA     2434 2013-08-25 18:37:00\n186  1814      AA    117  N336AA    JFK  LAX     2475 2013-03-07 13:42:00\n187  1819      VX    411  N642VA    JFK  LAX     2475 2013-11-20 12:55:00\n188  1881      VX    415  N637VA    JFK  LAX     2475 2013-04-19 22:04:00\n189  1903      B6    161  N587JB    JFK  SMF     2521 2013-11-07 19:55:00\n190  1911      UA   1152  N33286    EWR  LAX     2454 2013-08-21 14:28:00\n191  1913      B6    673  N625JB    JFK  LAX     2475 2013-02-16 11:34:00\n192  1914      UA    421  N855UA    EWR  SFO     2565 2013-04-22 05:59:00\n193  1926      VX    413  N625VA    JFK  LAX     2475 2013-03-02 17:02:00\n194  1927      AA    117  N332AA    JFK  LAX     2475 2013-05-09 13:47:00\n195  1947      UA   1455  N76529    EWR  LAX     2454 2013-12-08 07:28:00\n196  1951      UA   1199  N14106    EWR  LAX     2454 2013-11-02 13:49:00\n197  1962      UA    362  N516UA    EWR  SNA     2434 2013-12-26 19:03:00\n198  1969      DL   1865  N727TW    JFK  SFO     2586 2013-05-09 06:53:00\n199  1975      VX     11  N840VA    JFK  SFO     2586 2013-05-21 07:35:00\n200  1977      AA    177  N328AA    JFK  SFO     2586 2013-07-21 18:17:00\n201  1987      UA   1284  N64809    EWR  SFO     2565 2013-12-29 17:17:00\n202  2018      UA   1600  N17128    EWR  LAX     2454 2013-12-21 15:47:00\n203  2037      UA   1223  N57864    EWR  LAX     2454 2013-04-01 08:29:00\n204  2048      UA    263  N526UA    EWR  SAN     2425 2013-09-12 20:19:00\n205  2054      VX     29  N640VA    JFK  SFO     2586 2013-05-14 18:52:00\n206  2064      AA     59  N335AA    JFK  SFO     2586 2013-06-28 07:54:00\n207  2099      B6    189  N615JB    JFK  SAN     2446 2013-12-16 09:16:00\n208  2115      UA    512  N557UA    JFK  SFO     2586 2013-01-20 17:17:00\n209  2121      UA    439  N832UA    EWR  SAN     2425 2013-06-07 14:55:00\n210  2125      B6    173  N644JB    JFK  SJC     2569 2013-02-28 18:10:00\n211  2126      VX     25  N847VA    JFK  SFO     2586 2013-01-03 11:53:00\n212  2132      UA    512  N557UA    JFK  SFO     2586 2013-06-12 17:16:00\n213  2135      DL   2363  N199DN    JFK  LAX     2475 2013-08-08 21:29:00\n214  2139      B6     15  N712JB    JFK  SFO     2586 2013-09-28 08:48:00\n215  2145      UA   1665  N37474    EWR  LAX     2454 2013-06-19 07:32:00\n216  2156      UA   1266  N76529    EWR  SFO     2565 2013-05-01 12:18:00\n217  2165      B6    213  N643JB    JFK  LGB     2465 2013-08-09 13:35:00\n218  2181      UA   1150  N39423    EWR  SFO     2565 2013-07-18 10:49:00\n219  2185      UA    512  N512UA    JFK  SFO     2586 2013-02-23 17:22:00\n220  2192      UA    223  N818UA    EWR  SAN     2425 2013-11-26 13:59:00\n221  2211      DL   1765  N710TW    JFK  SFO     2586 2013-02-14 09:55:00\n222  2219      VX     29  N638VA    JFK  SFO     2586 2013-10-07 20:34:00\n223  2222      UA   1651  N37273    EWR  SFO     2565 2013-10-25 20:02:00\n224  2223      DL   1465   N704X    JFK  SFO     2586 2013-02-04 19:00:00\n225  2231      AA    117  N327AA    JFK  LAX     2475 2013-05-18 13:40:00\n226  2232      UA    257  N557UA    JFK  SFO     2586 2013-05-05 12:25:00\n227  2234      UA    797  N525UA    JFK  LAX     2475 2013-04-06 06:23:00\n228  2240      UA    132  N17122    JFK  LAX     2475 2013-03-22 15:42:00\n229  2243      AA      3  N617AA    JFK  LAX     2475 2013-12-04 11:59:00\n230  2251      DL    503  N3744F    JFK  SAN     2446 2013-04-16 17:11:00\n231  2254      UA    703  N595UA    JFK  LAX     2475 2013-08-24 11:07:00\n232  2258      DL    863   N704X    JFK  LAX     2475 2013-09-22 11:53:00\n233  2259      UA    257  N595UA    JFK  SFO     2586 2013-12-10 15:29:00\n234  2265      UA    771  N525UA    JFK  LAX     2475 2013-07-23 20:59:00\n235  2266      UA    743  N449UA    EWR  LAX     2454 2013-08-17 09:36:00\n236  2272      DL    432  N710TW    JFK  SFO     2586 2013-10-28 12:52:00\n237  2276      VX    169  N530VA    EWR  LAX     2454 2013-08-05 18:47:00\n238  2288      UA    389  N512UA    JFK  SFO     2586 2013-03-27 18:42:00\n239  2295      B6    171  N746JB    JFK  SMF     2521 2013-06-19 20:04:00\n240  2343      AA    181  N327AA    JFK  LAX     2475 2013-11-24 16:42:00\n241  2345      DL    863  N721TW    JFK  LAX     2475 2013-09-24 11:53:00\n242  2374      VX     11  N843VA    JFK  SFO     2586 2013-05-25 07:34:00\n243  2375      UA    257  N518UA    JFK  SFO     2586 2013-10-31 15:21:00\n244  2406      B6    209  N633JB    JFK  LGB     2465 2013-01-06 13:10:00\n245  2413      UA   1651  N37468    EWR  SFO     2565 2013-11-11 21:03:00\n246  2436      AA     33  N328AA    JFK  LAX     2475 2013-02-07 07:27:00\n247  2440      B6    623  N531JB    JFK  LAX     2475 2013-08-05 23:13:00\n248  2443      UA    592  N528UA    EWR  SAN     2425 2013-05-18 19:09:00\n249  2469      B6    675  N632JB    JFK  LAX     2475 2013-06-09 16:29:00\n250  2472      B6    679  N806JB    JFK  LAX     2475 2013-06-02 09:25:00\n251  2487      AA    177  N338AA    JFK  SFO     2586 2013-01-29 17:42:00\n252  2513      B6    423  N584JB    JFK  LAX     2475 2013-09-09 16:37:00\n253  2518      UA   1232  N37437    EWR  LAX     2454 2013-07-03 09:51:00\n254  2551      DL     95  N624AG    JFK  LAX     2475 2013-09-16 16:55:00\n255  2598      B6    415  N587JB    JFK  SFO     2586 2013-07-20 18:00:00\n256  2602      AA      3  N336AA    JFK  LAX     2475 2013-09-21 13:02:00\n257  2614      B6    171  N705JB    JFK  SMF     2521 2013-05-29 19:28:00\n258  2620      VX     23  N849VA    JFK  SFO     2586 2013-08-11 10:32:00\n259  2628      UA    132  N17122    JFK  LAX     2475 2013-03-21 15:42:00\n260  2629      UA    766  N597UA    JFK  SFO     2586 2013-12-19 11:56:00\n261  2634      UA    797  N597UA    JFK  LAX     2475 2013-09-06 06:22:00\n262  2644      UA   1175  N17139    JFK  LAX     2475 2013-06-06 05:59:00\n263  2646      UA    535  N518UA    JFK  LAX     2475 2013-05-14 17:53:00\n264  2652      DL   2065  N723TW    JFK  SFO     2586 2013-05-22 15:58:00\n265  2655      VX    169  N623VA    EWR  LAX     2454 2013-09-11 22:03:00\n266  2662      UA    434  N818UA    EWR  SNA     2434 2013-10-15 09:01:00\n267  2666      UA   1600  N17104    EWR  LAX     2454 2013-05-26 15:20:00\n268  2674      UA    161  N33103    JFK  LAX     2475 2013-01-17 16:00:00\n269  2678      DL   1765  N705TW    JFK  SFO     2586 2013-05-19 09:57:00\n270  2692      UA   1281  N87507    EWR  SFO     2565 2013-05-14 09:25:00\n271  2695      UA    504  N560UA    JFK  SFO     2586 2013-11-13 08:58:00\n272  2699      B6    641  N805JB    JFK  SFO     2586 2013-02-28 10:44:00\n273  2700      AA    179  N319AA    JFK  SFO     2586 2013-07-01 10:24:00\n274  2702      UA    212  N536UA    EWR  SFO     2565 2013-07-26 18:42:00\n275  2703      VX    415  N621VA    JFK  LAX     2475 2013-08-09 22:09:00\n276  2715      UA    642  N597UA    JFK  SFO     2586 2013-09-07 09:55:00\n277  2726      UA    466  N570UA    EWR  LAX     2454 2013-05-01 16:28:00\n278  2735      AA    133  N319AA    JFK  LAX     2475 2013-11-23 15:40:00\n279  2759      UA    220  N449UA    EWR  SFO     2565 2013-04-12 09:57:00\n280  2774      UA   1281  N13248    EWR  SFO     2565 2013-05-22 09:21:00\n281  2792      UA   1127  N18119    EWR  SFO     2565 2013-04-09 18:33:00\n282  2797      UA   1289  N38473    EWR  SFO     2565 2013-11-28 10:00:00\n283  2799      VX     23  N847VA    JFK  SFO     2586 2013-03-22 10:46:00\n284  2806      DL   1465  N727TW    JFK  SFO     2586 2013-05-07 18:59:00\n285  2813      VX     23  N635VA    JFK  SFO     2586 2013-06-02 10:40:00\n286  2815      B6     91  N821JB    JFK  OAK     2576 2013-05-24 17:05:00\n287  2816      UA    204  N830UA    EWR  LAX     2454 2013-04-02 20:02:00\n288  2819      VX    169  N525VA    EWR  LAX     2454 2013-05-15 20:18:00\n289  2822      UA   1471  N17245    EWR  SFO     2565 2013-06-16 18:33:00\n290  2837      UA    398  N568UA    JFK  LAX     2475 2013-12-07 06:36:00\n291  2858      B6   1013  N805JB    JFK  LGB     2465 2013-08-24 18:25:00\n292  2859      UA   1644  N14121    EWR  SFO     2565 2013-03-28 19:52:00\n293  2866      UA   1626  N25705    EWR  SAN     2425 2013-09-01 08:42:00\n294  2868      UA   1200  N36447    EWR  SAN     2425 2013-08-08 14:56:00\n295  2888      AA    181  N336AA    JFK  LAX     2475 2013-07-18 17:37:00\n296  2889      B6    359  N629JB    JFK  BUR     2465 2013-02-02 16:51:00\n297  2898      DL   1865  N707TW    JFK  SFO     2586 2013-03-25 06:56:00\n298  2911      AA     33  N327AA    JFK  LAX     2475 2013-02-22 07:25:00\n299  2929      UA    397  N568UA    JFK  SFO     2586 2013-11-22 07:53:00\n300  2949      AA     33  N339AA    JFK  LAX     2475 2013-04-01 07:22:00\n301  2987      UA    389  N587UA    JFK  SFO     2586 2013-12-05 18:55:00\n302  2990      UA   1721  N35204    EWR  LAX     2454 2013-11-19 16:41:00\n303  3002      B6    673  N793JB    JFK  LAX     2475 2013-03-15 11:34:00\n304  3007      UA   1632  N38467    EWR  SFO     2565 2013-06-28 15:54:00\n305  3013      DL   2363  N721TW    JFK  LAX     2475 2013-02-11 21:13:00\n306  3014      UA   1656  N24706    EWR  SNA     2434 2013-03-19 18:28:00\n307  3040      AA      1  N320AA    JFK  LAX     2475 2013-01-31 08:56:00\n308  3045      VX    415  N623VA    JFK  LAX     2475 2013-11-17 19:59:00\n309  3047      UA    884  N559UA    EWR  SFO     2565 2013-04-11 22:38:00\n310  3057      UA   1205  N73256    EWR  SFO     2565 2013-08-28 15:20:00\n311  3067      VX    415  N622VA    JFK  LAX     2475 2013-12-25 20:07:00\n312  3069      B6    423  N564JB    JFK  LAX     2475 2013-08-17 16:31:00\n313  3073      VX    399  N854VA    JFK  LAX     2475 2013-04-05 07:20:00\n314  3093      UA   1141  N34460    EWR  SFO     2565 2013-07-16 18:45:00\n315  3116      UA    790  N580UA    EWR  SFO     2565 2013-08-17 09:09:00\n316  3117      UA    242  N823UA    EWR  LAX     2454 2013-04-06 10:04:00\n317  3118      UA   1526  N35204    EWR  LAX     2454 2013-11-21 16:45:00\n318  3124      AA      1  N336AA    JFK  LAX     2475 2013-08-29 09:06:00\n319  3145      VX    161  N854VA    EWR  LAX     2454 2013-06-27 09:23:00\n320  3149      UA   1644  N18243    EWR  SFO     2565 2013-03-22 19:54:00\n321  3152      B6     23  N635JB    JFK  LAX     2475 2013-10-18 06:59:00\n322  3157      AA    145  N3HWAA    JFK  SAN     2446 2013-04-04 17:20:00\n323  3177      B6    669  N510JB    JFK  SJC     2569 2013-07-24 18:54:00\n324  3178      DL   1765  N721TW    JFK  SFO     2586 2013-06-13 09:51:00\n325  3184      B6    671  N638JB    JFK  LAX     2475 2013-01-11 06:59:00\n326  3189      UA    841  N512UA    JFK  LAX     2475 2013-12-19 14:49:00\n327  3200      VX    411  N847VA    JFK  LAX     2475 2013-07-25 12:59:00\n328  3222      UA   1626  N73276    EWR  SAN     2425 2013-10-18 08:38:00\n329  3227      AA    119  N3EAAA    EWR  LAX     2454 2013-01-16 18:11:00\n330  3237      UA   1570  N12216    EWR  SFO     2565 2013-05-17 14:02:00\n331  3241      UA    418  N547UA    EWR  SFO     2565 2013-11-04 18:07:00\n332  3242      B6   1013  N641JB    JFK  LGB     2465 2013-11-06 18:03:00\n333  3244      B6    173  N729JB    JFK  SJC     2569 2013-04-25 18:11:00\n334  3260      UA    766  N568UA    JFK  SFO     2586 2013-12-16 12:00:00\n335  3274      B6    209  N796JB    JFK  LGB     2465 2013-05-06 13:56:00\n336  3275      UA   1439  N14214    EWR  LAX     2454 2013-07-19 21:32:00\n337  3288      UA   1526  N36472    EWR  LAX     2454 2013-10-06 19:18:00\n338  3297      B6    423  N806JB    JFK  LAX     2475 2013-12-05 17:55:00\n339  3308      B6    671  N809JB    JFK  LAX     2475 2013-01-10 07:03:00\n340  3333      DL   2363  N713TW    JFK  LAX     2475 2013-05-22 21:34:00\n341  3344      UA   1656  N23707    EWR  SNA     2434 2013-04-02 20:39:00\n342  3348      DL   2363  N706TW    JFK  LAX     2475 2013-03-15 20:55:00\n343  3353      UA    810  N849UA    EWR  SFO     2565 2013-02-02 15:26:00\n344  3359      AA    185  N324AA    JFK  LAX     2475 2013-08-24 21:50:00\n345  3380      B6    915  N821JB    JFK  SFO     2586 2013-12-24 20:20:00\n346  3385      UA    535  N510UA    JFK  LAX     2475 2013-11-03 19:33:00\n347  3393      B6    171  N586JB    JFK  SMF     2521 2013-04-06 18:52:00\n348  3397      UA   1242  N17126    EWR  LAX     2454 2013-05-12 13:23:00\n349  3399      B6    209  N658JB    JFK  LGB     2465 2013-01-02 12:49:00\n350  3402      UA    389  N505UA    JFK  SFO     2586 2013-08-04 18:34:00\n351  3405      UA    766  N512UA    JFK  SFO     2586 2013-10-10 11:55:00\n352  3427      UA    755  N528UA    EWR  LAX     2454 2013-08-20 07:56:00\n353  3433      AA     19  N336AA    JFK  LAX     2475 2013-10-03 10:22:00\n354  3443      UA    257  N596UA    JFK  SFO     2586 2013-10-20 15:47:00\n355  3449      AA     19  N332AA    JFK  LAX     2475 2013-12-15 10:29:00\n356  3451      UA   1626  N87531    EWR  SAN     2425 2013-12-13 08:20:00\n357  3453      DL    763  N711ZX    JFK  LAX     2475 2013-04-24 06:59:00\n358  3471      DL   1765  N718TW    JFK  SFO     2586 2013-05-20 09:54:00\n359  3474      UA    421  N804UA    EWR  SFO     2565 2013-06-23 05:59:00\n360  3497      UA    332  N575UA    EWR  LAX     2454 2013-09-07 07:04:00\n361  3516      DL   1565  N711ZX    JFK  SFO     2586 2013-06-11 14:36:00\n362  3527      UA    132  N17133    JFK  LAX     2475 2013-03-24 15:50:00\n363  3528      DL   1163  N711ZX    JFK  LAX     2475 2013-07-02 17:22:00\n364  3534      AA    177  N339AA    JFK  SFO     2586 2013-11-15 18:40:00\n365  3540      UA   1165  N33289    EWR  LAX     2454 2013-10-21 18:35:00\n366  3556      B6    669  N603JB    JFK  SJC     2569 2013-09-17 18:45:00\n367  3567      DL   1865  N718TW    JFK  SFO     2586 2013-06-03 06:59:00\n368  3568      DL    763  N190DN    JFK  LAX     2475 2013-08-15 06:54:00\n369  3576      B6    167  N645JB    JFK  OAK     2576 2013-11-15 16:56:00\n370  3595      VX    415  N622VA    JFK  LAX     2475 2013-02-04 20:32:00\n371  3597      DL   2363  N723TW    JFK  LAX     2475 2013-01-23 20:58:00\n372  3610      VX    193  N630VA    EWR  SFO     2565 2013-05-21 17:51:00\n373  3619      AA     19  N336AA    JFK  LAX     2475 2013-05-04 10:21:00\n374  3623      B6     89  N625JB    JFK  SAN     2446 2013-11-08 16:50:00\n375  3625      DL    857  N3769L    JFK  SAN     2446 2013-04-13 08:28:00\n376  3632      UA   1735  N87527    EWR  LAX     2454 2013-04-29 10:15:00\n377  3639      UA    281  N556UA    EWR  SFO     2565 2013-11-25 07:57:00\n378  3657      UA    771  N597UA    JFK  LAX     2475 2013-10-25 20:16:00\n379  3667      UA   1439  N73275    EWR  LAX     2454 2013-11-27 06:38:00\n380  3686      UA    642  N512UA    JFK  SFO     2586 2013-12-18 10:23:00\n381  3728      UA   1004  N78506    EWR  LAX     2454 2013-06-14 13:54:00\n382  3746      AA     59  N377AA    JFK  SFO     2586 2013-12-14 07:59:00\n383  3750      UA    303  N512UA    JFK  SFO     2586 2013-05-06 06:06:00\n384  3753      UA   1224  N76503    EWR  LAX     2454 2013-09-25 08:50:00\n385  3758      VX    187  N640VA    EWR  SFO     2565 2013-12-04 10:45:00\n386  3762      B6     15  N807JB    JFK  SFO     2586 2013-12-04 08:44:00\n387  3776      AA    117  N332AA    JFK  LAX     2475 2013-09-09 13:43:00\n388  3779      DL    423  N721TW    JFK  LAX     2475 2013-11-11 11:58:00\n389  3793      UA   1480  N87512    EWR  SFO     2565 2013-02-12 08:31:00\n390  3806      UA   1602  N71411    EWR  SFO     2565 2013-03-03 16:02:00\n391  3815      VX    411  N623VA    JFK  LAX     2475 2013-02-02 13:23:00\n392  3824      DL   1765  N706TW    JFK  SFO     2586 2013-01-17 09:56:00\n393  3835      VX     29  N632VA    JFK  SFO     2586 2013-09-03 18:49:00\n394  3836      UA   1600  N58101    EWR  LAX     2454 2013-07-18 15:25:00\n395  3839      AA     59  N336AA    JFK  SFO     2586 2013-05-17 07:51:00\n396  3840      UA    434  N850UA    EWR  SNA     2434 2013-10-18 08:47:00\n397  3846      AA      3  N339AA    JFK  LAX     2475 2013-05-27 11:55:00\n398  3850      UA    257  N557UA    JFK  SFO     2586 2013-01-18 14:26:00\n399  3859      UA   1496  N39726    EWR  SNA     2434 2013-07-25 11:54:00\n400  3861      VX    183  N851VA    EWR  SFO     2565 2013-11-19 07:13:00\n401  3865      B6    185  N583JB    JFK  SAN     2446 2013-05-24 16:38:00\n402  3874      B6    645  N636JB    JFK  SFO     2586 2013-01-21 19:53:00\n403  3879      UA   1600  N17104    EWR  LAX     2454 2013-02-17 15:27:00\n404  3889      UA    148  N27724    EWR  SNA     2434 2013-04-19 18:37:00\n405  3891      B6    359  N587JB    JFK  BUR     2465 2013-08-14 17:57:00\n406  3909      UA   1692  N75435    EWR  SAN     2425 2013-10-09 17:25:00\n407  3911      DL    120  N624AG    JFK  LAX     2475 2013-05-02 08:55:00\n408  3931      VX     11  N845VA    JFK  SFO     2586 2013-11-25 07:23:00\n409  3935      VX    169  N838VA    EWR  LAX     2454 2013-11-13 17:22:00\n410  3945      UA   1663  N26208    EWR  SFO     2565 2013-11-01 13:57:00\n411  3950      UA   1162  N24702    EWR  SNA     2434 2013-04-04 06:59:00\n412  3959      UA   1175  N14102    JFK  LAX     2475 2013-05-30 06:02:00\n413  3961      AA     33  N339AA    JFK  LAX     2475 2013-04-02 07:29:00\n414  3967      VX     29  N633VA    JFK  SFO     2586 2013-07-07 23:54:00\n415  3968      AA     21  N339AA    JFK  LAX     2475 2013-06-25 19:41:00\n416  3995      B6    423  N612JB    JFK  LAX     2475 2013-10-05 16:33:00\n417  4002      AA     59  N336AA    JFK  SFO     2586 2013-03-26 07:45:00\n418  4008      UA    535  N589UA    JFK  LAX     2475 2013-08-03 17:58:00\n419  4034      B6    647  N793JB    JFK  SFO     2586 2013-06-16 17:29:00\n420  4051      DL    503  N3750D    JFK  SAN     2446 2013-07-05 16:59:00\n421  4052      AA    185  N335AA    JFK  LAX     2475 2013-02-21 21:51:00\n422  4069      B6    167  N563JB    JFK  OAK     2576 2013-12-15 16:56:00\n423  4074      DL    269  N706TW    JFK  SFO     2586 2013-10-12 07:00:00\n424  4076      UA    841  N555UA    JFK  LAX     2475 2013-09-07 14:47:00\n425  4078      B6    161  N662JB    JFK  SMF     2521 2013-09-27 19:56:00\n426  4083      UA    771  N596UA    JFK  LAX     2475 2013-09-13 20:29:00\n427  4093      UA    257  N554UA    JFK  SFO     2586 2013-07-16 16:06:00\n428  4097      UA   1200  N27421    EWR  SAN     2425 2013-12-15 14:10:00\n429  4103      AA      1  N338AA    JFK  LAX     2475 2013-11-15 09:05:00\n430  4111      UA   1496  N25705    EWR  SNA     2434 2013-06-10 07:02:00\n431  4126      UA   1054  N27205    EWR  SFO     2565 2013-02-07 19:04:00\n432  4128      UA   1284  N37470    EWR  SFO     2565 2013-11-26 16:31:00\n433  4151      DL    141  N718TW    JFK  SFO     2586 2013-07-15 16:18:00\n434  4154      UA    389  N589UA    JFK  SFO     2586 2013-11-20 18:34:00\n435  4208      B6    223  N585JB    JFK  LAX     2475 2013-12-25 09:45:00\n436  4211      B6    915  N644JB    JFK  SFO     2586 2013-08-31 20:32:00\n437  4212      UA    397  N560UA    JFK  SFO     2586 2013-09-04 08:26:00\n438  4219      UA     32  N12114    JFK  LAX     2475 2013-04-16 05:56:00\n439  4222      UA   1600  N17126    EWR  LAX     2454 2013-10-19 15:50:00\n440  4227      UA    347  N555UA    JFK  SFO     2586 2013-08-26 06:50:00\n441  4235      UA    257  N557UA    JFK  SFO     2586 2013-08-24 15:35:00\n442  4236      UA   1175  N48127    JFK  LAX     2475 2013-06-09 14:56:00\n443  4237      UA    389  N557UA    JFK  SFO     2586 2013-05-01 18:25:00\n444  4260      UA    314  N587UA    JFK  LAX     2475 2013-11-25 20:46:00\n445  4261      UA   1010  N16703    EWR  SNA     2434 2013-08-14 12:17:00\n446  4262      AA    179  N323AA    JFK  SFO     2586 2013-11-15 10:35:00\n447  4277      UA   1175  N12109    JFK  LAX     2475 2013-06-19 18:15:00\n448  4284      DL    430  N707TW    JFK  SFO     2586 2013-10-29 06:58:00\n449  4299      VX    187  N627VA    EWR  SFO     2565 2013-04-15 10:29:00\n450  4302      DL    763  N624AG    JFK  LAX     2475 2013-04-12 07:01:00\n451  4308      VX    187  N621VA    EWR  SFO     2565 2013-10-22 10:26:00\n452  4309      B6    415  N585JB    JFK  SFO     2586 2013-10-12 16:42:00\n453  4314      UA   1054  N18220    EWR  LAX     2454 2013-09-21 14:36:00\n454  4319      AA      1  N323AA    JFK  LAX     2475 2013-01-13 08:51:00\n455  4330      VX    407  N629VA    JFK  LAX     2475 2013-04-19 09:54:00\n456  4331      UA   1439  N73276    EWR  LAX     2454 2013-12-03 06:53:00\n457  4361      UA   1555  N31412    EWR  SAN     2425 2013-08-05 19:43:00\n458  4367      VX     23  N626VA    JFK  SFO     2586 2013-09-06 10:26:00\n459  4372      B6    189  N603JB    JFK  SAN     2446 2013-12-13 08:57:00\n460  4374      VX    169  N530VA    EWR  LAX     2454 2013-05-25 18:47:00\n461  4384      UA    389  N502UA    JFK  SFO     2586 2013-06-09 18:32:00\n462  4399      AA      1  N328AA    JFK  LAX     2475 2013-02-11 09:00:00\n463  4405      UA   1037  N77518    EWR  LAX     2454 2013-09-12 21:45:00\n464  4409      DL   1565  N705TW    JFK  SFO     2586 2013-03-31 16:28:00\n465  4411      VX    183  N626VA    EWR  SFO     2565 2013-07-08 07:24:00\n466  4412      B6    323  N607JB    JFK  LAX     2475 2013-07-06 12:04:00\n467  4415      B6    675  N806JB    JFK  LAX     2475 2013-05-26 16:29:00\n468  4432      VX     11  N846VA    JFK  SFO     2586 2013-09-04 07:39:00\n469  4449      AA     59  N327AA    JFK  SFO     2586 2013-01-08 07:41:00\n470  4450      UA   1284  N75433    EWR  SFO     2565 2013-09-16 16:35:00\n471  4453      UA    557  N534UA    EWR  SFO     2565 2013-05-01 08:16:00\n472  4478      UA    281  N558UA    EWR  SFO     2565 2013-11-11 08:54:00\n473  4483      UA   1439  N16234    EWR  LAX     2454 2013-08-02 21:12:00\n474  4484      AA      1  N328AA    JFK  LAX     2475 2013-04-14 09:03:00\n475  4488      UA    766  N595UA    JFK  SFO     2586 2013-10-01 12:00:00\n476  4489      VX     23  N642VA    JFK  SFO     2586 2013-11-23 10:43:00\n477  4505      AA    145  N3FVAA    JFK  SAN     2446 2013-04-21 17:19:00\n478  4510      VX    399  N633VA    JFK  LAX     2475 2013-06-29 07:16:00\n479  4512      UA   1493  N35271    EWR  LAX     2454 2013-11-19 14:12:00\n480  4548      AA    119  N3BLAA    EWR  LAX     2454 2013-10-27 18:48:00\n481  4550      UA    257  N510UA    JFK  SFO     2586 2013-03-18 14:19:00\n482  4553      AA      1  N336AA    JFK  LAX     2475 2013-08-09 09:09:00\n483  4563      VX    411  N630VA    JFK  LAX     2475 2013-10-11 12:58:00\n484  4572      UA   1120  N39418    EWR  SFO     2565 2013-06-04 10:21:00\n485  4576      VX    411  N632VA    JFK  LAX     2475 2013-05-06 13:01:00\n486  4590      B6    645  N789JB    JFK  SFO     2586 2013-03-12 19:35:00\n487  4595      UA    257  N597UA    JFK  SFO     2586 2013-10-11 15:39:00\n488  4604      AA    117  N332AA    JFK  LAX     2475 2013-11-14 13:41:00\n489  4631      B6    181  N715JB    JFK  SAN     2446 2013-06-13 08:37:00\n490  4641      AA    117  N320AA    JFK  LAX     2475 2013-03-14 13:42:00\n491  4643      VX    183  N847VA    EWR  SFO     2565 2013-09-12 07:20:00\n492  4651      UA    771  N508UA    JFK  LAX     2475 2013-08-20 20:32:00\n493  4666      UA   1600  N33103    EWR  LAX     2454 2013-07-27 15:31:00\n494  4679      AA     85  N370AA    JFK  SFO     2586 2013-10-21 15:24:00\n495  4680      AA     59  N324AA    JFK  SFO     2586 2013-05-03 08:00:00\n496  4691      UA   1010  N16709    EWR  SNA     2434 2013-04-23 07:06:00\n497  4696      UA    398  N589UA    JFK  LAX     2475 2013-11-26 06:37:00\n498  4710      UA    443  N597UA    JFK  LAX     2475 2013-07-01 08:33:00\n499  4711      UA   1205  N34131    EWR  SFO     2565 2013-12-03 14:37:00\n500  4713      DL     17  N195DN    JFK  LAX     2475 2013-10-13 18:15:00\n501  4724      AA      3  N328AA    JFK  LAX     2475 2013-10-11 11:58:00\n502  4739      UA    389  N596UA    JFK  SFO     2586 2013-09-23 19:28:00\n503  4740      DL    141  N194DN    JFK  SFO     2586 2013-06-22 15:58:00\n504  4741      VX    399  N636VA    JFK  LAX     2475 2013-03-01 07:16:00\n505  4746      UA   1555  N77525    EWR  SAN     2425 2013-08-26 19:47:00\n506  4751      UA    997  N561UA    EWR  LAX     2454 2013-10-08 08:54:00\n507  4755      AA    145  N3HNAA    JFK  SAN     2446 2013-05-23 17:33:00\n508  4759      VX     11  N845VA    JFK  SFO     2586 2013-10-06 07:29:00\n509  4764      UA    207  N524UA    EWR  SFO     2565 2013-07-15 16:13:00\n510  4778      DL   1088   N3766    JFK  SAN     2446 2013-02-19 17:13:00\n511  4794      UA   1161  N38424    EWR  SAN     2425 2013-07-08 19:08:00\n512  4799      VX     23  N641VA    JFK  SFO     2586 2013-10-14 10:27:00\n513  4805      VX    187  N631VA    EWR  SFO     2565 2013-12-10 10:28:00\n514  4818      DL   1576  N3747D    JFK  SAN     2446 2013-10-21 18:32:00\n515  4830      AA     33  N328AA    JFK  LAX     2475 2013-07-30 07:30:00\n516  4848      UA    282  N489UA    EWR  LAX     2454 2013-04-12 05:59:00\n517  4853      UA    207  N465UA    EWR  SNA     2434 2013-07-02 07:15:00\n518  4854      UA    535  N557UA    JFK  LAX     2475 2013-01-06 17:46:00\n519  4857      UA   1668  N53441    EWR  SFO     2565 2013-09-27 06:37:00\n520  4859      DL    763  N194DN    JFK  LAX     2475 2013-08-16 06:59:00\n521  4860      DL     31  N727TW    JFK  SFO     2586 2013-01-28 16:56:00\n522  4877      B6    677  N646JB    JFK  LAX     2475 2013-06-05 20:29:00\n523  4880      AA    177  N328AA    JFK  SFO     2586 2013-02-10 17:46:00\n524  4883      UA   1600  N14115    EWR  LAX     2454 2013-09-14 15:15:00\n525  4884      UA    596  N464UA    EWR  SFO     2565 2013-04-22 10:10:00\n526  4886      VX     27  N621VA    JFK  SFO     2586 2013-03-12 17:15:00\n527  4889      AA    185  N329AA    JFK  LAX     2475 2013-07-14 21:53:00\n528  4902      UA   1668  N37281    EWR  SFO     2565 2013-12-31 13:55:00\n529  4904      DL    417  N196DN    JFK  LAX     2475 2013-12-18 15:30:00\n530  4911      DL    763  N721TW    JFK  LAX     2475 2013-04-25 07:06:00\n531  4920      UA   1200  N79279    EWR  SAN     2425 2013-02-25 15:37:00\n532  4930      UA   1024  N33209    EWR  SFO     2565 2013-06-28 05:50:00\n533  4945      UA    841  N512UA    JFK  LAX     2475 2013-12-06 14:43:00\n534  4957      UA    512  N532UA    JFK  SFO     2586 2013-03-17 17:21:00\n535  4963      UA   1022  N33714    EWR  SNA     2434 2013-10-25 18:21:00\n536  4971      AA    119  N3FHAA    EWR  LAX     2454 2013-09-02 18:48:00\n537  4989      DL     87  N176DN    JFK  LAX     2475 2013-04-30 19:14:00\n538  4992      AA    145  N3GHAA    JFK  SAN     2446 2013-04-25 17:14:00\n539  4993      UA    303  N505UA    JFK  SFO     2586 2013-03-09 06:06:00\n540  5001      UA   1480  N57862    EWR  SFO     2565 2013-09-19 08:27:00\n541  5007      UA   1575  N35271    EWR  SAN     2425 2013-05-27 19:27:00\n542  5017      UA   1600  N57111    EWR  LAX     2454 2013-12-27 15:41:00\n543  5054      VX     11  N635VA    JFK  SFO     2586 2013-01-25 07:37:00\n544  5109      UA    771  N554UA    JFK  LAX     2475 2013-02-17 20:23:00\n545  5118      DL     87  N713TW    JFK  LAX     2475 2013-03-15 19:28:00\n546  5140      AA     67  N3FNAA    JFK  SAN     2446 2013-12-03 17:10:00\n547  5143      UA    434  N832UA    EWR  SNA     2434 2013-10-04 08:52:00\n548  5147      UA    112  N41140    JFK  LAX     2475 2013-01-12 08:38:00\n549  5149      UA    250  N840UA    EWR  LAX     2454 2013-02-05 16:55:00\n550  5154      UA    389  N539UA    JFK  SFO     2586 2013-10-20 18:30:00\n551  5156      AA    133  N323AA    JFK  LAX     2475 2013-04-01 15:45:00\n552  5178      VX    399  N635VA    JFK  LAX     2475 2013-05-25 07:00:00\n553  5182      VX     11  N853VA    JFK  SFO     2586 2013-10-04 07:38:00\n554  5183      DL    841  N713TW    JFK  SFO     2586 2013-09-19 17:32:00\n555  5190      AA    177  N339AA    JFK  SFO     2586 2013-08-25 18:08:00\n556  5193      UA   1526  N35260    EWR  LAX     2454 2013-10-12 19:27:00\n557  5194      UA   1673  N87531    EWR  SFO     2565 2013-07-06 05:58:00\n558  5224      UA   1668  N33294    EWR  SFO     2565 2013-09-04 06:26:00\n559  5234      UA   1601  N29129    JFK  LAX     2475 2013-05-24 15:47:00\n560  5259      B6    915  N570JB    JFK  SFO     2586 2013-07-10 23:17:00\n561  5270      B6    213  N588JB    JFK  LGB     2465 2013-07-31 13:36:00\n562  5273      AA     19  N328AA    JFK  LAX     2475 2013-09-19 10:26:00\n563  5282      VX     23  N846VA    JFK  SFO     2586 2013-02-20 10:26:00\n564  5285      AA    185  N323AA    JFK  LAX     2475 2013-08-27 21:35:00\n565  5299      DL    423  N702TW    JFK  LAX     2475 2013-12-05 11:57:00\n566  5304      UA    786  N592UA    EWR  LAX     2454 2013-06-19 11:00:00\n567  5313      VX    169  N627VA    EWR  LAX     2454 2013-10-31 17:28:00\n568  5314      UA    535  N525UA    JFK  LAX     2475 2013-04-03 17:53:00\n569  5319      DL    120  N723TW    JFK  LAX     2475 2013-04-02 08:54:00\n570  5324      VX     23  N635VA    JFK  SFO     2586 2013-07-20 10:41:00\n571  5330      B6    359  N552JB    JFK  BUR     2465 2013-08-09 18:00:00\n572  5331      VX    415  N628VA    JFK  LAX     2475 2020-05-23 13:07:00\n573  5354      DL   1865  N624AG    JFK  SFO     2586 2013-03-20 06:55:00\n574  5361      UA   1600  N12116    EWR  LAX     2454 2013-03-11 15:14:00\n575  5364      AA     21  N336AA    JFK  LAX     2475 2013-10-26 19:10:00\n576  5365      B6    915  N706JB    JFK  SFO     2586 2013-07-17 20:54:00\n577  5376      B6    323  N768JB    JFK  LAX     2475 2013-11-28 12:58:00\n578  5383      AA    119  N3JAAA    EWR  LAX     2454 2013-07-18 18:43:00\n579  5391      AA      3  N324AA    JFK  LAX     2475 2013-02-14 11:49:00\n580  5394      UA   1223  N18220    EWR  LAX     2454 2013-09-18 08:54:00\n581  5400      DL    763  N624AG    JFK  LAX     2475 2013-04-19 07:10:00\n582  5407      VX    183  N838VA    EWR  SFO     2565 2013-12-03 07:26:00\n583  5422      AA      3  N328AA    JFK  LAX     2475 2013-10-26 11:52:00\n584  5425      UA    389  N598UA    JFK  SFO     2586 2013-09-12 19:12:00\n585  5426      B6    213  N508JB    JFK  LGB     2465 2013-07-15 13:35:00\n586  5433      VX     29  N631VA    JFK  SFO     2586 2013-07-05 19:33:00\n587  5434      UA   1439  N14228    EWR  LAX     2454 2013-07-08 21:01:00\n588  5454      VX     23  N633VA    JFK  SFO     2586 2013-05-20 10:45:00\n589  5476      B6    671  N583JB    JFK  LAX     2475 2013-01-30 06:54:00\n590  5492      VX    415  N633VA    JFK  LAX     2475 2013-07-21 20:25:00\n591  5502      UA    471  N853UA    EWR  SFO     2565 2013-11-23 11:35:00\n592  5511      VX    399  N836VA    JFK  LAX     2475 2013-04-08 07:09:00\n593  5518      VX    187  N528VA    EWR  SFO     2565 2013-06-26 12:06:00\n594  5543      UA    771  N589UA    JFK  LAX     2475 2013-09-20 20:48:00\n595  5555      VX     23  N847VA    JFK  SFO     2586 2013-01-08 10:30:00\n596  5571      B6    359  N779JB    JFK  BUR     2465 2013-03-25 17:41:00\n597  5588      B6    915  N827JB    JFK  SFO     2586 2013-12-08 20:57:00\n598  5606      UA    398  N559UA    EWR  LAX     2454 2013-06-07 09:08:00\n599  5612      AA      3  N338AA    JFK  LAX     2475 2013-10-14 11:52:00\n600  5613      UA    347  N589UA    JFK  SFO     2586 2013-09-12 06:57:00\n601  5631      UA    841  N595UA    JFK  LAX     2475 2013-11-29 14:53:00\n602  5643      UA    443  N560UA    JFK  LAX     2475 2013-03-11 08:35:00\n603  5664      UA    434  N801UA    EWR  SNA     2434 2013-10-21 08:51:00\n604  5718      VX    183  N845VA    EWR  SFO     2565 2013-09-30 07:24:00\n605  5725      UA   1212  N30401    EWR  SFO     2565 2013-11-11 17:28:00\n606  5766      DL    120  N722TW    JFK  LAX     2475 2013-05-20 09:10:00\n607  5768      DL    427  N727TW    JFK  LAX     2475 2013-10-01 20:56:00\n608  5769      B6    213  N796JB    JFK  LGB     2465 2013-06-21 13:43:00\n609  5780      B6    359  N559JB    JFK  BUR     2465 2013-05-05 17:47:00\n610  5789      B6    359  N807JB    JFK  BUR     2465 2013-10-14 17:57:00\n611  5791      UA    398  N596UA    JFK  LAX     2475 2013-11-14 06:37:00\n612  5802      UA    887  N532UA    JFK  SFO     2586 2013-03-03 13:32:00\n613  5822      UA    421  N563UA    EWR  SFO     2565 2013-06-29 09:50:00\n614  5823      DL    863  N722TW    JFK  LAX     2475 2013-08-13 12:00:00\n615  5826      VX     23  N634VA    JFK  SFO     2586 2013-12-09 10:40:00\n616  5827      UA   1526  N26208    EWR  LAX     2454 2013-11-04 19:11:00\n617  5830      UA   1075  N27724    EWR  SNA     2434 2013-08-17 18:06:00\n618  5868      AA     59  N319AA    JFK  SFO     2586 2013-03-14 07:43:00\n619  5947      VX     27  N851VA    JFK  SFO     2586 2013-02-04 17:47:00\n620  5962      UA    797  N598UA    JFK  LAX     2475 2013-10-01 06:27:00\n621  5964      UA    512  N555UA    JFK  SFO     2586 2013-07-09 18:33:00\n622  5977      B6    359  N504JB    JFK  BUR     2465 2013-12-23 17:26:00\n623  5985      UA   1178  N29129    EWR  SFO     2565 2013-02-01 17:12:00\n624  5986      UA   1223  N56859    EWR  LAX     2454 2013-02-28 08:40:00\n625  5990      AA    133  N319AA    JFK  LAX     2475 2013-07-26 15:41:00\n626  6016      UA    743  N513UA    EWR  LAX     2454 2013-06-08 10:51:00\n627  6018      UA    642  N555UA    JFK  SFO     2586 2013-03-18 10:58:00\n628  6024      DL    763  N197DN    JFK  LAX     2475 2013-09-09 06:52:00\n629  6033      VX    413  N637VA    JFK  LAX     2475 2013-01-15 16:53:00\n630  6088      UA   1480  N17233    EWR  SFO     2565 2013-10-11 08:31:00\n631  6096      B6    673  N652JB    JFK  LAX     2475 2013-02-07 11:21:00\n632  6099      B6    623  N646JB    JFK  LAX     2475 2020-07-22 13:07:00\n633  6108      UA   1489  N66808    EWR  SFO     2565 2013-12-20 16:11:00\n634  6111      DL    422  N199DN    JFK  LAX     2475 2013-12-20 08:59:00\n635  6112      B6    189  N520JB    JFK  SAN     2446 2013-06-26 09:52:00\n636  6114      AA     85  N373AA    JFK  SFO     2586 2013-09-20 18:11:00\n637  6131      DL    863  N727TW    JFK  LAX     2475 2013-04-12 11:54:00\n638  6133      VX    407  N636VA    JFK  LAX     2475 2013-03-07 09:08:00\n639  6137      UA   1583  N12221    EWR  SFO     2565 2013-09-25 16:23:00\n640  6146      AA      3  N324AA    JFK  LAX     2475 2013-12-11 11:53:00\n641  6168      UA   1692  N75428    EWR  SAN     2425 2013-11-21 17:54:00\n642  6171      UA    394  N530UA    EWR  SFO     2565 2013-09-09 18:47:00\n643  6181      DL     31  N727TW    JFK  SFO     2586 2013-01-23 16:50:00\n644  6184      UA   1165  N76522    EWR  LAX     2454 2013-09-30 18:15:00\n645  6187      UA    642  N532UA    JFK  SFO     2586 2013-03-01 11:03:00\n646  6189      VX    407  N635VA    JFK  LAX     2475 2013-02-24 09:00:00\n647  6212      VX    169  N622VA    EWR  LAX     2454 2013-10-14 18:49:00\n648  6216      AA    119  N3BWAA    EWR  LAX     2454 2013-05-02 18:23:00\n649  6218      AA    179  N332AA    JFK  SFO     2586 2013-08-28 12:02:00\n650  6224      VX     29  N639VA    JFK  SFO     2586 2013-05-05 20:37:00\n651  6235      UA    443  N588UA    JFK  LAX     2475 2013-10-05 08:24:00\n652  6236      VX    399  N852VA    JFK  LAX     2475 2013-08-10 07:07:00\n653  6247      VX    165  N621VA    EWR  LAX     2454 2013-05-28 13:00:00\n654  6248      AA    133  N327AA    JFK  LAX     2475 2013-12-09 16:04:00\n655  6249      B6    669  N559JB    JFK  SJC     2569 2013-11-25 18:28:00\n656  6252      AA    117  N339AA    JFK  LAX     2475 2013-04-19 13:42:00\n657  6256      DL   1163  N721TW    JFK  LAX     2475 2013-08-14 16:59:00\n658  6258      VX    415  N630VA    JFK  LAX     2475 2013-05-08 23:31:00\n659  6263      VX     27  N848VA    JFK  SFO     2586 2013-08-10 16:28:00\n660  6271      B6    359  N640JB    JFK  BUR     2465 2013-07-26 17:57:00\n661  6273      UA    551  N835UA    EWR  SFO     2565 2013-01-03 15:03:00\n662  6274      AA     85  N371AA    JFK  SFO     2586 2013-03-14 16:04:00\n663  6283      B6     15  N712JB    JFK  SFO     2586 2013-08-12 09:01:00\n664  6320      UA   1127  N37267    EWR  SFO     2565 2013-06-05 18:26:00\n665  6339      UA    397  N560UA    JFK  SFO     2586 2013-03-10 08:07:00\n666  6344      DL   1865  N712TW    JFK  SFO     2586 2013-05-30 07:06:00\n667  6369      UA    405  N518UA    JFK  SFO     2586 2013-04-11 10:29:00\n668  6373      UA    703  N595UA    JFK  LAX     2475 2013-07-18 11:23:00\n669  6380      B6    643  N806JB    JFK  SFO     2586 2013-01-17 07:47:00\n670  6389      VX     29  N840VA    JFK  SFO     2586 2013-09-01 18:49:00\n671  6391      B6    671  N705JB    JFK  LAX     2475 2013-05-16 06:52:00\n672  6393      AA     85  N376AA    JFK  SFO     2586 2013-02-21 15:39:00\n673  6399      VX     27  N622VA    JFK  SFO     2586 2013-04-05 16:29:00\n674  6402      DL   2357  N723TW    JFK  LAX     2475 2013-03-01 17:55:00\n675  6412      AA     21  N332AA    JFK  LAX     2475 2013-04-22 19:48:00\n676  6418      UA   1150  N37474    EWR  SFO     2565 2013-07-05 10:27:00\n677  6425      UA    841  N589UA    JFK  LAX     2475 2013-12-17 14:45:00\n678  6433      DL   1565  N705TW    JFK  SFO     2586 2013-05-10 13:55:00\n679  6434      UA   1532  N38458    EWR  SFO     2565 2013-05-21 17:29:00\n680  6435      DL     17  N192DN    JFK  LAX     2475 2013-07-10 18:14:00\n681  6436      DL    857   N3752    JFK  SAN     2446 2013-09-13 08:03:00\n682  6446      UA    535  N595UA    JFK  LAX     2475 2013-07-10 19:33:00\n683  6460      UA    642  N588UA    JFK  SFO     2586 2013-09-14 10:13:00\n684  6468      DL   2344  N718TW    JFK  LAX     2475 2013-02-22 14:59:00\n685  6487      UA   1595  N33294    EWR  SNA     2434 2013-07-12 20:02:00\n686  6505      DL     95  N187DN    JFK  LAX     2475 2013-07-20 15:46:00\n687  6509      UA    394  N578UA    EWR  SFO     2565 2013-09-16 18:43:00\n688  6533      UA    771  N512UA    JFK  LAX     2475 2013-09-16 20:20:00\n689  6537      VX    411  N628VA    JFK  LAX     2475 2013-02-01 13:23:00\n690  6541      UA   1281  N14214    EWR  SFO     2565 2013-07-02 14:35:00\n691  6545      UA    580  N557UA    JFK  SFO     2586 2013-07-08 12:03:00\n692  6546      UA   1737  N75429    EWR  LAX     2454 2013-01-06 06:07:00\n693  6552      VX     29  N634VA    JFK  SFO     2586 2013-05-25 18:49:00\n694  6559      UA    789  N830UA    EWR  LAX     2454 2013-05-09 16:55:00\n695  6561      B6     89  N623JB    JFK  SAN     2446 2013-11-12 16:52:00\n696  6586      B6    167  N585JB    JFK  OAK     2576 2013-09-27 17:07:00\n697  6589      VX     27  N634VA    JFK  SFO     2586 2013-03-11 16:36:00\n698  6593      DL    141  N707TW    JFK  SFO     2586 2013-08-16 15:57:00\n699  6608      DL     17  N193DN    JFK  LAX     2475 2013-06-15 18:15:00\n700  6631      B6    359  N586JB    JFK  BUR     2465 2013-02-16 17:25:00\n701  6638      UA    207  N577UA    EWR  SFO     2565 2013-07-31 08:33:00\n702  6655      UA   1668  N34282    EWR  SFO     2565 2013-12-05 08:50:00\n703  6659      VX    193  N623VA    EWR  SFO     2565 2013-10-23 17:26:00\n704  6674      AA    133  N327AA    JFK  LAX     2475 2013-02-19 16:41:00\n705  6694      B6    189  N639JB    JFK  SAN     2446 2013-06-28 09:31:00\n706  6706      DL    503  N3747D    JFK  SAN     2446 2013-02-06 17:12:00\n707  6708      UA    506  N507UA    EWR  LAX     2454 2013-07-23 19:38:00\n708  6714      VX    169  N837VA    EWR  LAX     2454 2013-04-17 18:50:00\n709  6722      UA   1663  N36207    EWR  SFO     2565 2013-09-27 13:57:00\n710  6744      B6    669  N637JB    JFK  SJC     2569 2013-12-16 18:27:00\n711  6753      AA    185  N338AA    JFK  LAX     2475 2013-02-03 22:01:00\n712  6755      UA    535  N510UA    JFK  LAX     2475 2013-04-26 17:52:00\n713  6785      VX     23  N626VA    JFK  SFO     2586 2013-05-12 10:44:00\n714  6802      VX    161  N837VA    EWR  LAX     2454 2013-07-07 09:15:00\n715  6809      AA      3  N327AA    JFK  LAX     2475 2013-01-20 11:58:00\n716  6851      UA   1665  N38268    EWR  LAX     2454 2013-07-18 07:05:00\n717  6879      B6    185  N603JB    JFK  SAN     2446 2013-04-23 16:32:00\n718  6887      AA    177  N336AA    JFK  SFO     2586 2013-02-19 17:45:00\n719  6898      UA   1583  N24212    EWR  SFO     2565 2013-11-24 14:30:00\n720  6901      B6    677  N779JB    JFK  LAX     2475 2013-06-19 20:29:00\n721  6909      AA     85  N388AA    JFK  SFO     2586 2013-01-16 15:29:00\n722  6939      VX     27  N854VA    JFK  SFO     2586 2013-06-08 16:49:00\n723  6941      AA     19  N323AA    JFK  LAX     2475 2013-11-04 10:29:00\n724  6942      UA   1200  N77520    EWR  SAN     2425 2013-01-21 16:17:00\n725  6944      UA    397  N557UA    JFK  SFO     2586 2013-06-23 08:32:00\n726  6986      DL    857  N3760C    JFK  SAN     2446 2013-10-15 08:08:00\n727  6989      UA    786  N574UA    EWR  LAX     2454 2013-07-01 11:27:00\n728  7006      VX    399  N640VA    JFK  LAX     2475 2013-08-06 07:14:00\n729  7007      B6    181  N809JB    JFK  SAN     2446 2013-06-02 08:31:00\n730  7012      B6    173  N625JB    JFK  SJC     2569 2013-04-11 18:12:00\n731  7038      B6    323  N529JB    JFK  LAX     2475 2013-08-03 13:08:00\n732  7040      VX     23  N844VA    JFK  SFO     2586 2013-02-07 10:24:00\n733  7042      VX    415  N842VA    JFK  LAX     2475 2013-11-06 19:58:00\n734  7050      DL    422  N702TW    JFK  LAX     2475 2013-11-06 08:59:00\n735  7054      AA    117  N328AA    JFK  LAX     2475 2013-01-11 13:40:00\n736  7056      UA    207  N568UA    EWR  SFO     2565 2013-07-03 09:04:00\n737  7061      DL   1765  N703TW    JFK  SFO     2586 2013-06-06 09:53:00\n738  7063      VX    165  N629VA    EWR  LAX     2454 2013-09-27 12:55:00\n739  7069      VX    411  N623VA    JFK  LAX     2475 2013-01-30 13:22:00\n740  7071      UA   1284  N37466    EWR  SFO     2565 2013-07-29 17:30:00\n741  7075      UA   1742  N36472    EWR  SFO     2565 2013-06-24 13:55:00\n742  7083      UA    504  N555UA    JFK  SFO     2586 2013-11-21 08:58:00\n743  7088      UA   1671  N37470    EWR  SFO     2565 2013-04-23 20:26:00\n744  7089      UA   1141  N27421    EWR  SFO     2565 2013-07-26 18:20:00\n745  7095      UA    389  N505UA    JFK  SFO     2586 2013-06-17 18:31:00\n746  7101      DL    841  N721TW    JFK  SFO     2586 2013-06-30 17:56:00\n747  7102      UA   1224  N76269    EWR  LAX     2454 2013-12-05 20:26:00\n748  7104      DL   1465  N713TW    JFK  SFO     2586 2013-06-05 19:04:00\n749  7106      UA    389  N505UA    JFK  SFO     2586 2013-07-24 18:34:00\n750  7116      UA    799  N512UA    JFK  SFO     2586 2013-01-22 07:03:00\n751  7122      UA   1496  N24729    EWR  SNA     2434 2013-12-03 08:38:00\n752  7133      B6     23  N794JB    JFK  LAX     2475 2013-12-12 06:55:00\n753  7140      B6    423  N563JB    JFK  LAX     2475 2013-09-06 16:36:00\n754  7143      B6    359  N565JB    JFK  BUR     2465 2013-08-30 17:56:00\n755  7144      DL     95  N196DN    JFK  LAX     2475 2013-07-04 15:42:00\n756  7156      UA   1228  N37409    EWR  LAX     2454 2013-09-14 10:03:00\n757  7174      UA   1022  N27724    EWR  SNA     2434 2013-09-27 18:15:00\n758  7176      UA   1561  N77431    EWR  SFO     2565 2013-05-23 18:17:00\n759  7182      DL    120   N704X    JFK  LAX     2475 2013-01-20 11:09:00\n760  7199      UA   1466  N76508    EWR  SAN     2425 2013-04-16 16:26:00\n761  7219      UA   1205  N14118    EWR  SFO     2565 2013-12-11 14:27:00\n762  7224      DL    434  N702TW    JFK  SFO     2586 2013-12-24 17:28:00\n763  7232      UA    299  N574UA    EWR  SFO     2565 2013-08-08 21:16:00\n764  7233      UA    398  N512UA    JFK  LAX     2475 2013-11-23 06:31:00\n765  7242      DL   1565  N722TW    JFK  SFO     2586 2013-05-31 13:57:00\n766  7246      AA     59  N336AA    JFK  SFO     2586 2013-03-01 07:42:00\n767  7254      AA    177  N332AA    JFK  SFO     2586 2013-11-08 18:42:00\n768  7256      AA    133  N324AA    JFK  LAX     2475 2013-01-08 15:46:00\n769  7269      UA   1455  N47414    EWR  LAX     2454 2013-12-06 07:31:00\n770  7272      UA    236  N598UA    JFK  LAX     2475 2013-08-15 06:26:00\n771  7286      AA      3  N338AA    JFK  LAX     2475 2013-03-02 11:55:00\n772  7287      B6    189  N517JB    JFK  SAN     2446 2013-09-10 08:24:00\n773  7288      DL    417  N194DN    JFK  LAX     2475 2013-12-28 15:24:00\n774  7290      AA    117  N327AA    JFK  LAX     2475 2013-09-10 13:40:00\n775  7295      UA   1668  N78438    EWR  SFO     2565 2013-06-24 07:32:00\n776  7307      DL    432  N702TW    JFK  SFO     2586 2013-12-15 13:19:00\n777  7324      B6    217  N712JB    JFK  LGB     2465 2013-01-21 18:03:00\n778  7328      UA    257  N589UA    JFK  SFO     2586 2013-09-24 15:35:00\n779  7335      UA    207  N509UA    EWR  SFO     2565 2013-06-16 17:19:00\n780  7342      DL    420  N197DN    JFK  LAX     2475 2013-10-09 06:58:00\n781  7345      UA   1049  N45440    EWR  SFO     2565 2013-11-18 21:26:00\n782  7350      AA    119  N3CGAA    EWR  LAX     2454 2013-04-22 18:23:00\n783  7351      AA     33  N320AA    JFK  LAX     2475 2013-06-16 07:23:00\n784  7354      VX    411  N635VA    JFK  LAX     2475 2013-02-27 13:22:00\n785  7355      UA   1539  N14102    EWR  SFO     2565 2013-03-06 19:44:00\n786  7357      UA   1054  N17126    EWR  LAX     2454 2013-03-22 13:26:00\n787  7369      UA    535  N596UA    JFK  LAX     2475 2013-08-22 18:10:00\n788  7391      DL    477   N704X    JFK  LAX     2475 2013-10-27 17:25:00\n789  7414      VX    183  N836VA    EWR  SFO     2565 2013-09-14 07:26:00\n790  7417      UA    443  N502UA    JFK  LAX     2475 2013-10-04 08:24:00\n791  7424      UA    365  N823UA    EWR  SAN     2425 2013-10-24 14:29:00\n792  7428      VX    183  N844VA    EWR  SFO     2565 2013-12-02 07:30:00\n793  7430      VX    161  N849VA    EWR  LAX     2454 2013-09-30 09:13:00\n794  7434      UA    743  N812UA    EWR  LAX     2454 2013-05-24 06:48:00\n795  7443      UA   1532  N76523    EWR  SFO     2565 2013-08-12 19:58:00\n796  7470      UA    387  N507UA    EWR  LAX     2454 2013-03-07 06:33:00\n797  7472      DL    503  N3761R    JFK  SAN     2446 2013-01-30 17:12:00\n798  7481      VX     29  N623VA    JFK  SFO     2586 2013-10-17 18:51:00\n799  7483      AA    133  N327AA    JFK  LAX     2475 2013-04-10 15:41:00\n800  7501      AA    117  N335AA    JFK  LAX     2475 2013-10-18 13:49:00\n801  7516      UA    257  N505UA    JFK  SFO     2586 2013-06-29 15:27:00\n802  7542      UA    497  N530UA    EWR  SFO     2565 2013-10-20 07:23:00\n803  7553      VX    193  N629VA    EWR  SFO     2565 2013-08-22 18:15:00\n804  7561      UA    443  N589UA    JFK  LAX     2475 2013-08-30 08:47:00\n805  7571      UA    495  N504UA    EWR  LAX     2454 2013-08-03 14:51:00\n806  7572      VX     29  N627VA    JFK  SFO     2586 2013-10-16 18:50:00\n807  7590      UA   1266  N36469    EWR  LAX     2454 2013-08-01 19:22:00\n808  7593      VX    413  N624VA    JFK  LAX     2475 2013-03-15 16:53:00\n809  7608      UA    312  N840UA    EWR  SAN     2425 2013-12-26 18:52:00\n810  7609      VX    413  N640VA    JFK  LAX     2475 2013-09-06 16:55:00\n811  7619      B6    185  N535JB    JFK  SAN     2446 2013-01-12 17:05:00\n812  7627      UA    535  N512UA    JFK  LAX     2475 2013-01-09 17:48:00\n813  7639      UA    703  N554UA    JFK  LAX     2475 2013-06-21 11:25:00\n814  7642      B6    641  N705JB    JFK  SFO     2586 2013-01-07 10:26:00\n815  7649      AA    133  N329AA    JFK  LAX     2475 2013-02-28 15:43:00\n816  7655      UA   1583  N37253    EWR  SFO     2565 2013-10-31 08:32:00\n817  7664      UA    208  N802UA    EWR  SAN     2425 2013-11-02 08:33:00\n818  7710      UA   1668  N68453    EWR  SFO     2565 2013-09-26 06:24:00\n819  7711      DL   1465  N723TW    JFK  SFO     2586 2013-08-24 18:58:00\n820  7713      UA    132  N17105    JFK  LAX     2475 2013-03-31 15:46:00\n821  7715      UA    593  N848UA    EWR  SNA     2434 2013-01-15 18:25:00\n822  7719      UA    998  N823UA    EWR  SAN     2425 2013-08-14 17:03:00\n823  7730      DL   1565  N707TW    JFK  SFO     2586 2013-05-13 13:55:00\n824  7732      AA    181  N332AA    JFK  LAX     2475 2013-06-10 16:58:00\n825  7752      DL    503  N3762Y    JFK  SAN     2446 2013-03-21 17:16:00\n826  7754      VX    187  N521VA    EWR  SFO     2565 2013-08-25 10:27:00\n827  7755      UA   1439  N73276    EWR  LAX     2454 2013-11-20 06:32:00\n828  7760      AA      1  N339AA    JFK  LAX     2475 2013-07-04 09:16:00\n829  7764      B6    415  N779JB    JFK  SFO     2586 2013-07-27 18:00:00\n830  7786      DL    426  N188DN    JFK  LAX     2475 2013-11-05 18:09:00\n831  7793      B6    217  N706JB    JFK  LGB     2465 2013-05-17 17:59:00\n832  7794      B6    523  N789JB    JFK  LAX     2475 2013-08-08 21:26:00\n833  7816      AA     21  N328AA    JFK  LAX     2475 2013-08-24 19:12:00\n834  7827      AA     19  N327AA    JFK  LAX     2475 2013-11-13 10:25:00\n835  7828      UA   1289  N34460    EWR  SFO     2565 2013-11-23 15:19:00\n836  7842      UA    309  N557UA    JFK  SFO     2586 2013-02-21 06:57:00\n837  7852      UA    220  N445UA    EWR  SFO     2565 2013-04-23 09:26:00\n838  7860      UA   1739  N14121    EWR  SFO     2565 2013-01-11 17:09:00\n839  7870      UA    250  N820UA    EWR  LAX     2454 2013-02-07 17:24:00\n840  7877      B6    675  N646JB    JFK  LAX     2475 2013-05-01 16:32:00\n841  7887      AA    179  N335AA    JFK  SFO     2586 2013-01-06 10:21:00\n842  7894      B6    185  N523JB    JFK  SAN     2446 2013-05-07 16:49:00\n843  7896      DL     31  N624AG    JFK  SFO     2586 2013-04-14 18:42:00\n844  7898      AA    185  N339AA    JFK  LAX     2475 2013-02-02 21:31:00\n845  7905      UA   1493  N16234    EWR  LAX     2454 2013-09-23 14:30:00\n846  7916      AA    177  N338AA    JFK  SFO     2586 2013-04-26 17:54:00\n847  7934      UA    347  N557UA    JFK  SFO     2586 2013-04-06 07:00:00\n848  7937      UA    465  N847UA    EWR  LAX     2454 2013-05-26 16:24:00\n849  7962      UA   1200  N75426    EWR  SAN     2425 2013-12-09 15:46:00\n850  7995      UA    161  N75858    EWR  LAX     2454 2013-03-17 08:29:00\n851  8009      DL    417  N197DN    JFK  LAX     2475 2013-12-01 15:29:00\n852  8015      AA    117  N327AA    JFK  LAX     2475 2013-05-02 13:54:00\n853  8035      AA    117  N339AA    JFK  LAX     2475 2013-06-29 13:43:00\n854  8054      VX    399  N854VA    JFK  LAX     2475 2013-10-25 06:59:00\n855  8068      UA    910  N854UA    EWR  LAX     2454 2013-06-03 20:14:00\n856  8101      UA    303  N502UA    JFK  SFO     2586 2013-04-08 05:53:00\n857  8105      UA   1600  N58101    EWR  LAX     2454 2013-09-18 15:17:00\n858  8110      UA    642  N518UA    JFK  SFO     2586 2013-04-29 11:54:00\n859  8115      UA   1534  N33209    EWR  SFO     2565 2013-08-21 18:55:00\n860  8140      UA    703  N597UA    JFK  LAX     2475 2013-07-07 11:15:00\n861  8141      VX     11  N847VA    JFK  SFO     2586 2013-08-14 07:44:00\n862  8150      AA    133  N328AA    JFK  LAX     2475 2013-06-06 15:46:00\n863  8165      AA      3  N338AA    JFK  LAX     2475 2013-02-16 11:56:00\n864  8170      DL    430  N707TW    JFK  SFO     2586 2013-12-05 06:57:00\n865  8183      VX     23  N626VA    JFK  SFO     2586 2013-11-22 10:28:00\n866  8205      UA    303  N555UA    JFK  SFO     2586 2013-10-26 05:57:00\n867  8210      UA    303  N522UA    JFK  SFO     2586 2013-09-25 05:55:00\n868  8214      DL    863  N705TW    JFK  LAX     2475 2013-09-02 11:54:00\n869  8225      B6    359  N649JB    JFK  BUR     2465 2013-03-27 17:24:00\n870  8231      UA   1632  N37470    EWR  SFO     2565 2013-07-01 16:33:00\n871  8233      DL    434  N705TW    JFK  SFO     2586 2013-10-30 17:21:00\n872  8236      AA     19  N332AA    JFK  LAX     2475 2013-07-21 10:24:00\n873  8237      VX    413  N629VA    JFK  LAX     2475 2013-03-27 17:00:00\n874  8238      AA     59  N365AA    JFK  SFO     2586 2013-08-21 07:57:00\n875  8244      VX     11  N855VA    JFK  SFO     2586 2013-01-05 07:28:00\n876  8247      B6   1013  N834JB    JFK  LGB     2465 2013-10-17 18:20:00\n877  8252      DL    503  N3744F    JFK  SAN     2446 2013-06-13 17:38:00\n878  8275      UA    220  N497UA    EWR  SFO     2565 2013-04-25 09:28:00\n879  8290      UA    535  N555UA    JFK  LAX     2475 2013-09-12 18:54:00\n880  8297      UA   1424  N13716    EWR  SNA     2434 2013-05-15 12:23:00\n881  8317      AA    145  N3KMAA    JFK  SAN     2446 2013-08-12 17:25:00\n882  8348      UA    362  N577UA    EWR  SNA     2434 2013-11-11 18:13:00\n883  8356      UA    771  N502UA    JFK  LAX     2475 2013-02-13 20:26:00\n884  8372      AA    181  N339AA    JFK  LAX     2475 2013-04-16 18:17:00\n885  8379      UA    522  N416UA    EWR  LAX     2454 2013-04-27 07:59:00\n886  8392      B6    359  N633JB    JFK  BUR     2465 2013-02-05 16:51:00\n887  8396      B6    523  N789JB    JFK  LAX     2475 2013-06-26 21:20:00\n888  8400      VX    415  N641VA    JFK  LAX     2475 2013-03-07 20:01:00\n889  8407      VX    407  N631VA    JFK  LAX     2475 2013-12-23 09:16:00\n890  8426      UA   1281  N14219    EWR  SFO     2565 2013-05-05 09:13:00\n891  8437      AA    181  N332AA    JFK  LAX     2475 2013-02-14 16:47:00\n892  8445      UA    435  N822UA    EWR  SAN     2425 2013-06-06 17:21:00\n893  8447      UA   1275  N57870    EWR  LAX     2454 2013-01-18 09:16:00\n894  8450      UA    535  N598UA    JFK  LAX     2475 2013-11-24 17:57:00\n895  8465      AA    177  N332AA    JFK  SFO     2586 2013-09-13 18:43:00\n896  8487      AA    179  N378AA    JFK  SFO     2586 2013-03-02 12:58:00\n897  8493      B6    181  N625JB    JFK  SAN     2446 2013-04-14 08:10:00\n898  8495      AA     33  N338AA    JFK  LAX     2475 2013-02-28 07:25:00\n899  8538      DL   1865  N723TW    JFK  SFO     2586 2013-05-23 06:52:00\n900  8557      AA    145  N3FHAA    JFK  SAN     2446 2013-06-16 17:35:00\n901  8573      UA    226  N589UA    JFK  SFO     2586 2013-11-04 16:59:00\n902  8578      UA   1651  N14118    EWR  SFO     2565 2013-09-05 15:27:00\n903  8581      VX    399  N633VA    JFK  LAX     2475 2013-07-20 07:15:00\n904  8592      UA    797  N525UA    JFK  LAX     2475 2013-09-19 06:25:00\n905  8596      DL   1576  N3744F    JFK  SAN     2446 2013-10-04 19:16:00\n906  8603      AA    119  N3GRAA    EWR  LAX     2454 2013-10-25 18:51:00\n907  8627      UA   1196  N37462    EWR  SFO     2565 2013-06-26 16:48:00\n908  8646      VX    161  N845VA    EWR  LAX     2454 2013-11-23 09:02:00\n909  8647      VX    187  N528VA    EWR  SFO     2565 2013-05-27 10:29:00\n910  8665      B6    423  N529JB    JFK  LAX     2475 2013-10-30 16:57:00\n911  8667      VX     11  N844VA    JFK  SFO     2586 2013-11-01 07:26:00\n912  8669      UA    483  N526UA    EWR  LAX     2454 2013-07-26 17:09:00\n913  8670      UA   1600  N18112    EWR  LAX     2454 2013-11-20 14:58:00\n914  8685      UA    771  N508UA    JFK  LAX     2475 2013-06-23 20:27:00\n915  8687      UA    375  N804UA    EWR  LAX     2454 2013-11-23 16:24:00\n916  8698      B6   1013  N564JB    JFK  LGB     2465 2013-07-25 19:11:00\n917  8728      AA      3  N327AA    JFK  LAX     2475 2013-04-27 12:19:00\n918  8730      UA    535  N597UA    JFK  LAX     2475 2013-07-12 18:32:00\n919  8734      DL   1576  N3750D    JFK  SAN     2446 2013-10-24 18:55:00\n920  8741      AA    181  N336AA    JFK  LAX     2475 2013-02-18 16:56:00\n921  8749      UA   1162  N33714    EWR  SNA     2434 2013-03-06 07:02:00\n922  8762      UA   1284  N38257    EWR  SFO     2565 2013-10-17 17:07:00\n923  8782      UA   1455  N27213    EWR  LAX     2454 2013-10-30 18:11:00\n924  8784      B6    679  N639JB    JFK  LAX     2475 2013-05-16 09:39:00\n925  8785      UA    205  N477UA    EWR  SFO     2565 2013-04-02 06:57:00\n926  8787      AA     19  N338AA    JFK  LAX     2475 2013-01-11 10:24:00\n927  8821      AA    177  N320AA    JFK  SFO     2586 2013-03-18 17:44:00\n928  8840      B6    669  N503JB    JFK  SJC     2569 2013-11-28 18:24:00\n929  8846      VX    407  N629VA    JFK  LAX     2475 2013-12-18 09:56:00\n930  8848      VX    411  N628VA    JFK  LAX     2475 2013-06-06 12:59:00\n931  8870      UA   1101  N12125    JFK  LAX     2475 2013-04-18 16:32:00\n932  8871      UA   1462  N18243    EWR  SFO     2565 2013-02-26 19:09:00\n933  8878      UA    263  N530UA    EWR  SAN     2425 2013-09-16 17:33:00\n934  8888      B6    671  N775JB    JFK  LAX     2475 2013-03-21 07:08:00\n935  8899      B6    647  N807JB    JFK  SFO     2586 2013-05-30 17:41:00\n936  8928      UA   1496  N13716    EWR  SNA     2434 2013-10-22 12:21:00\n937  8935      VX    407  N623VA    JFK  LAX     2475 2013-08-21 09:20:00\n938  8938      AA     33  N336AA    JFK  LAX     2475 2013-12-03 07:35:00\n939  8948      UA    731  N557UA    JFK  LAX     2475 2013-08-30 18:34:00\n940  8951      UA   1466  N79279    EWR  SAN     2425 2013-04-23 16:25:00\n941  8973      VX     27  N625VA    JFK  SFO     2586 2013-11-02 16:30:00\n942  8977      AA    117  N319AA    JFK  LAX     2475 2013-02-19 13:34:00\n943  8980      UA   1698  N77530    EWR  SFO     2565 2013-01-25 15:18:00\n944  8982      UA    112  N12109    JFK  LAX     2475 2013-02-02 08:28:00\n945  8994      B6    523  N523JB    JFK  LAX     2475 2013-08-31 21:06:00\n946  8995      DL    424  N192DN    JFK  LAX     2475 2013-11-01 13:06:00\n947  8996      UA    389  N518UA    JFK  SFO     2586 2013-06-02 20:12:00\n948  8999      AA     21  N336AA    JFK  LAX     2475 2013-04-10 20:25:00\n949  9001      AA      3  N320AA    JFK  LAX     2475 2013-10-04 11:55:00\n950  9003      DL   1865  N706TW    JFK  SFO     2586 2013-02-11 06:58:00\n951  9017      AA    145  N3JMAA    JFK  SAN     2446 2013-02-11 21:06:00\n952  9041      UA   1179  N36280    EWR  SFO     2565 2013-06-27 10:35:00\n953  9052      UA    161  N14102    JFK  LAX     2475 2013-01-07 15:47:00\n954  9075      VX    399  N635VA    JFK  LAX     2475 2013-10-31 06:50:00\n955  9091      DL    422  N710TW    JFK  LAX     2475 2013-12-11 09:35:00\n956  9092      VX    169  N527VA    EWR  LAX     2454 2013-07-08 19:45:00\n957  9097      UA    797  N510UA    JFK  LAX     2475 2013-03-20 06:03:00\n958  9103      UA    314  N518UA    JFK  LAX     2475 2013-12-28 11:23:00\n959  9106      DL     87  N624AG    JFK  LAX     2475 2013-03-22 18:59:00\n960  9108      UA   1656  N29717    EWR  SNA     2434 2013-03-27 18:22:00\n961  9114      VX     27  N840VA    JFK  SFO     2586 2013-09-25 16:33:00\n962  9120      UA   1574  N24224    EWR  SFO     2565 2013-08-08 06:03:00\n963  9124      UA    389  N546UA    JFK  SFO     2586 2013-12-12 19:27:00\n964  9127      UA    389  N510UA    JFK  SFO     2586 2013-09-19 19:33:00\n965  9128      VX     27  N846VA    JFK  SFO     2586 2013-06-26 19:03:00\n966  9130      UA    580  N518UA    JFK  SFO     2586 2013-08-02 12:05:00\n967  9135      UA    257  N512UA    JFK  SFO     2586 2013-08-09 16:01:00\n968  9146      B6   1013  N706JB    JFK  LGB     2465 2013-07-20 21:54:00\n969  9150      UA    771  N512UA    JFK  LAX     2475 2013-04-11 20:21:00\n970  9170      UA    742  N581UA    EWR  LAX     2454 2013-07-29 06:15:00\n971  9195      VX    165  N840VA    EWR  LAX     2454 2013-06-18 13:31:00\n972  9196      UA   1294  N38443    EWR  SFO     2565 2013-10-21 12:58:00\n973  9200      VX    187  N624VA    EWR  SFO     2565 2013-04-11 10:53:00\n974  9205      B6    359  N715JB    JFK  BUR     2465 2013-01-19 16:48:00\n975  9207      UA    284  N572UA    EWR  SAN     2425 2013-07-14 09:11:00\n976  9221      UA    347  N505UA    JFK  SFO     2586 2013-08-22 06:58:00\n977  9230      DL    763  N723TW    JFK  LAX     2475 2013-05-20 06:59:00\n978  9241      VX     29  N633VA    JFK  SFO     2586 2013-04-16 18:58:00\n979  9246      UA   1402  N33103    JFK  LAX     2475 2013-07-01 06:34:00\n980  9265      UA   1047  N17233    EWR  SFO     2565 2013-12-31 19:00:00\n981  9275      B6    423  N624JB    JFK  LAX     2475 2013-07-03 16:45:00\n982  9277      UA    483  N584UA    EWR  LAX     2454 2013-07-15 16:56:00\n983  9286      UA   1735  N39726    EWR  LAX     2454 2013-11-08 09:41:00\n984  9294      UA   1141  N27421    EWR  SFO     2565 2013-06-30 17:39:00\n985  9306      UA    726  N840UA    EWR  SFO     2565 2013-01-05 06:30:00\n986  9314      VX    161  N836VA    EWR  LAX     2454 2013-10-18 09:11:00\n987  9316      VX    399  N638VA    JFK  LAX     2475 2013-11-24 06:59:00\n988  9321      AA    119  N3HFAA    EWR  LAX     2454 2013-08-02 18:24:00\n989  9333      UA   1054  N17105    EWR  LAX     2454 2013-11-11 13:22:00\n990  9337      B6    671  N806JB    JFK  LAX     2475 2013-05-29 06:58:00\n991  9363      DL    963  N718TW    JFK  LAX     2475 2013-03-24 14:44:00\n992  9367      AA    177  N336AA    JFK  SFO     2586 2013-05-19 19:31:00\n993  9373      DL    120  N722TW    JFK  LAX     2475 2013-08-25 08:55:00\n994  9382      VX    415  N361VA    JFK  LAX     2475 2013-10-30 19:56:00\n995  9393      UA   1425  N41135    EWR  LAX     2454 2013-04-14 13:15:00\n996  9395      VX    187  N639VA    EWR  SFO     2565 2013-12-27 10:26:00\n997  9396      VX    413  N638VA    JFK  LAX     2475 2013-04-09 16:53:00\n998  9399      UA   1275  N57869    EWR  LAX     2454 2013-01-24 09:19:00\n999  9428      UA    428  N817UA    EWR  SAN     2425 2013-06-21 17:36:00\n1000 9439      DL    503  N3754A    JFK  SAN     2446 2013-05-13 17:14:00\n1001 9445      UA   1223  N57868    EWR  LAX     2454 2013-11-23 09:34:00\n1002 9455      UA    387  N509UA    EWR  LAX     2454 2013-04-13 07:07:00\n1003 9457      UA   1493  N12238    EWR  LAX     2454 2013-11-25 14:14:00\n1004 9459      UA    535  N525UA    JFK  LAX     2475 2013-02-03 17:48:00\n1005 9465      B6    181  N645JB    JFK  SAN     2446 2013-05-10 08:28:00\n1006 9472      B6    423  N708JB    JFK  LAX     2475 2013-10-18 16:25:00\n1007 9478      UA   1670  N36207    EWR  SFO     2565 2013-04-23 13:52:00\n1008 9482      UA    642  N510UA    JFK  SFO     2586 2013-09-04 09:53:00\n1009 9487      B6    173  N659JB    JFK  SJC     2569 2013-06-08 18:53:00\n1010 9505      B6    647  N648JB    JFK  SFO     2586 2013-05-21 17:38:00\n1011 9508      AA     85  N398AA    JFK  SFO     2586 2013-02-17 15:34:00\n1012 9509      VX     11  N840VA    JFK  SFO     2586 2013-12-18 07:29:00\n1013 9514      B6    415  N556JB    JFK  SFO     2586 2013-10-09 16:41:00\n1014 9520      UA    274  N851UA    EWR  LAX     2454 2013-12-16 11:14:00\n1015 9526      VX     11  N848VA    JFK  SFO     2586 2013-02-28 07:29:00\n1016 9540      VX    411  N636VA    JFK  LAX     2475 2013-08-31 12:55:00\n1017 9549      UA    999  N533UA    EWR  LAX     2454 2013-08-21 06:57:00\n1018 9567      DL    841  N711ZX    JFK  SFO     2586 2013-08-25 17:34:00\n1019 9584      UA    428  N493UA    EWR  LAX     2454 2013-04-30 20:09:00\n1020 9594      DL    120  N718TW    JFK  LAX     2475 2013-01-26 08:57:00\n1021 9600      VX    193  N621VA    EWR  SFO     2565 2013-04-20 17:32:00\n1022 9615      AA    185  N323AA    JFK  LAX     2475 2013-12-22 22:13:00\n1023 9633      VX    165  N624VA    EWR  LAX     2454 2013-09-26 12:55:00\n1024 9652      UA    387  N574UA    EWR  LAX     2454 2013-04-15 07:03:00\n1025 9660      UA   1453  N75433    EWR  SAN     2425 2013-12-29 18:37:00\n1026 9668      VX    187  N845VA    EWR  SFO     2565 2013-04-22 10:29:00\n1027 9690      UA    362  N577UA    EWR  SNA     2434 2013-11-08 18:29:00\n1028 9704      UA    257  N525UA    JFK  SFO     2586 2013-03-01 14:23:00\n1029 9714      B6    209  N821JB    JFK  LGB     2465 2013-04-30 14:08:00\n1030 9721      UA    703  N555UA    JFK  LAX     2475 2013-08-30 11:19:00\n     scheduled_departure             arrival   scheduled_arrival       late\n1    2013-06-30 09:25:00 2013-06-30 12:16:00 2013-06-30 12:20:00    -4 mins\n2    2013-04-22 17:42:00 2013-04-22 22:01:00 2013-04-22 20:55:00    66 mins\n3    2013-12-26 08:00:00 2013-12-26 10:54:00 2013-12-26 11:35:00   -41 mins\n4    2013-11-26 18:04:00 2013-11-26 21:23:00 2013-11-26 21:30:00    -7 mins\n5    2013-10-22 21:40:00 2013-10-22 00:48:00 2013-10-22 00:40:00     8 mins\n6    2013-08-23 17:10:00 2013-08-23 19:59:00 2013-08-23 20:15:00   -16 mins\n7    2013-01-07 07:00:00 2013-01-07 09:44:00 2013-01-07 10:27:00   -43 mins\n8    2013-03-06 19:05:00 2013-03-06 22:11:00 2013-03-06 22:25:00   -14 mins\n9    2013-01-15 08:00:00 2013-01-15 11:30:00 2013-01-15 11:25:00     5 mins\n10   2013-09-27 15:30:00 2013-09-27 19:07:00 2013-09-27 18:54:00    13 mins\n11   2013-05-31 17:00:00 2013-05-31 20:11:00 2013-05-31 20:25:00   -14 mins\n12   2013-12-23 07:51:00 2013-12-23 11:31:00 2013-12-23 11:37:00    -6 mins\n13   2013-09-05 11:25:00 2013-09-05 13:51:00 2013-09-05 14:25:00   -34 mins\n14   2013-01-24 07:15:00 2013-01-24 10:44:00 2013-01-24 10:40:00     4 mins\n15   2013-12-03 11:47:00 2013-12-03 15:44:00 2013-12-03 14:57:00    47 mins\n16   2013-01-01 06:00:00 2013-01-01 09:45:00 2013-01-01 09:31:00    14 mins\n17   2013-04-22 17:55:00 2013-04-22 23:05:00 2013-04-22 21:03:00   122 mins\n18   2013-04-29 06:01:00 2013-04-29 08:52:00 2013-04-29 09:33:00   -41 mins\n19   2013-02-10 16:55:00 2013-02-10 20:39:00 2013-02-10 20:09:00    30 mins\n20   2013-08-02 07:00:00 2013-08-02 09:50:00 2013-08-02 10:04:00   -14 mins\n21   2013-10-21 17:40:00 2013-10-21 20:26:00 2013-10-21 20:35:00    -9 mins\n22   2013-05-10 13:58:00 2013-05-10 16:49:00 2013-05-10 17:04:00   -15 mins\n23   2013-11-22 16:00:00 2013-11-22 20:00:00 2013-11-22 19:47:00    13 mins\n24   2013-05-07 17:15:00 2013-05-07 20:14:00 2013-05-07 20:12:00     2 mins\n25   2013-01-01 10:30:00 2013-01-01 13:51:00 2013-01-01 13:40:00    11 mins\n26   2013-07-09 10:13:00 2013-07-09 12:54:00 2013-07-09 12:56:00    -2 mins\n27   2013-04-11 19:44:00 2013-04-11 22:43:00 2013-04-11 22:55:00   -12 mins\n28   2013-05-19 08:30:00 2013-05-19 11:32:00 2013-05-19 11:47:00   -15 mins\n29   2013-07-03 09:03:00 2013-07-03 11:12:00 2013-07-03 12:00:00   -48 mins\n30   2013-11-02 09:00:00 2013-11-02 11:54:00 2013-11-02 12:10:00   -16 mins\n31   2013-10-19 17:29:00 2013-10-19 20:51:00 2013-10-19 20:30:00    21 mins\n32   2013-09-06 13:45:00 2013-09-06 16:06:00 2013-09-06 16:50:00   -44 mins\n33   2013-02-27 17:15:00 2013-02-27 20:20:00 2013-02-27 20:40:00   -20 mins\n34   2013-12-27 10:00:00 2013-12-27 13:05:00 2013-12-27 13:37:00   -32 mins\n35   2013-11-14 15:30:00 2013-11-14 18:53:00 2013-11-14 19:05:00   -12 mins\n36   2013-11-17 16:50:00 2013-11-17 21:16:00 2013-11-17 20:02:00    74 mins\n37   2013-10-04 07:00:00 2013-10-04 10:21:00 2013-10-04 10:25:00    -4 mins\n38   2013-08-18 19:40:00 2013-08-18 22:59:00 2013-08-18 22:55:00     4 mins\n39   2013-12-11 18:05:00 2013-12-11 23:55:00 2013-12-11 21:23:00   152 mins\n40   2013-11-01 21:40:00 2013-11-01 01:48:00 2013-11-01 00:40:00    68 mins\n41   2013-05-02 14:00:00 2013-05-02 17:05:00 2013-05-02 17:30:00   -25 mins\n42   2013-04-19 11:08:00 2013-04-19 13:56:00 2013-04-19 14:12:00   -16 mins\n43   2013-08-28 09:18:00 2013-08-28 12:36:00 2013-08-28 12:40:00    -4 mins\n44   2013-12-20 16:00:00 2013-12-20 20:23:00 2013-12-20 19:48:00    35 mins\n45   2013-10-04 20:00:00 2013-10-04 23:18:00 2013-10-04 23:28:00   -10 mins\n46   2013-02-23 17:30:00 2013-02-23 21:39:00 2013-02-23 20:46:00    53 mins\n47   2013-01-06 10:00:00 2013-01-06 13:25:00 2013-01-06 13:41:00   -16 mins\n48   2013-12-09 12:00:00 2013-12-09 15:19:00 2013-12-09 15:21:00    -2 mins\n49   2013-10-18 17:40:00 2013-10-18 20:49:00 2013-10-18 20:35:00    14 mins\n50   2013-09-22 10:45:00 2013-09-22 13:24:00 2013-09-22 13:49:00   -25 mins\n51   2013-07-01 21:50:00 2013-07-01 03:00:00 2013-07-01 01:00:00   120 mins\n52   2013-09-26 17:59:00 2013-09-26 21:01:00 2013-09-26 21:02:00    -1 mins\n53   2013-06-30 17:11:00 2013-06-30 21:12:00 2013-06-30 20:39:00    33 mins\n54   2013-06-07 18:36:00 2013-06-07 22:32:00 2013-06-07 21:55:00    37 mins\n55   2013-07-19 07:15:00 2013-07-19 09:29:00 2013-07-19 09:58:00   -29 mins\n56   2013-05-28 18:35:00 2013-05-28 21:38:00 2013-05-28 22:13:00   -35 mins\n57   2013-11-18 18:50:00 2013-11-18 21:56:00 2013-11-18 22:00:00    -4 mins\n58   2013-10-14 08:34:00 2013-10-14 12:21:00 2013-10-14 11:56:00    25 mins\n59   2013-06-29 19:00:00 2013-06-29 22:32:00 2013-06-29 22:45:00   -13 mins\n60   2013-08-21 20:56:00 2013-08-21 23:29:00 2013-08-21 23:59:00   -30 mins\n61   2013-09-13 09:18:00 2013-09-13 12:18:00 2013-09-13 12:40:00   -22 mins\n62   2013-05-13 18:00:00 2013-05-13 21:06:00 2013-05-13 21:15:00    -9 mins\n63   2013-09-10 10:30:00 2013-09-10 12:57:00 2013-09-10 13:25:00   -28 mins\n64   2013-05-20 12:00:00 2013-05-20 14:22:00 2013-05-20 15:05:00   -43 mins\n65   2013-07-25 14:30:00 2013-07-25 19:26:00 2013-07-25 17:54:00    92 mins\n66   2013-04-18 19:50:00 2013-04-18 23:28:00 2013-04-18 23:40:00   -12 mins\n67   2013-07-26 13:00:00 2013-07-26 15:50:00 2013-07-26 15:55:00    -5 mins\n68   2013-05-18 08:00:00 2013-05-18 10:53:00 2013-05-18 11:27:00   -34 mins\n69   2013-02-10 09:00:00 2013-02-10 12:05:00 2013-02-10 12:27:00   -22 mins\n70   2013-06-27 07:05:00 2013-06-27 09:40:00 2013-06-27 10:04:00   -24 mins\n71   2013-08-11 19:22:00 2013-08-11 22:49:00 2013-08-11 22:30:00    19 mins\n72   2013-07-26 08:40:00 2013-07-26 11:41:00 2013-07-26 11:32:00     9 mins\n73   2013-04-07 07:00:00 2013-04-07 10:26:00 2013-04-07 10:31:00    -5 mins\n74   2013-09-28 15:21:00 2013-09-28 18:04:00 2013-09-28 18:19:00   -15 mins\n75   2013-03-26 14:59:00 2013-03-26 18:04:00 2013-03-26 18:25:00   -21 mins\n76   2013-05-29 07:00:00 2013-05-29 10:13:00 2013-05-29 10:34:00   -21 mins\n77   2013-07-28 18:12:00 2013-07-28 00:17:00 2013-07-28 21:47:00 -1290 mins\n78   2013-05-13 18:55:00 2013-05-13 21:59:00 2013-05-13 22:20:00   -21 mins\n79   2013-12-11 09:46:00 2013-12-11 13:17:00 2013-12-11 13:13:00     4 mins\n80   2013-10-30 18:45:00 2013-10-30 22:27:00 2013-10-30 22:10:00    17 mins\n81   2013-08-02 13:47:00 2013-08-02 16:40:00 2013-08-02 16:58:00   -18 mins\n82   2013-12-02 07:00:00 2013-12-02 10:40:00 2013-12-02 10:37:00     3 mins\n83   2013-10-27 21:00:00 2013-10-27 00:14:00 2013-10-27 00:20:00    -6 mins\n84   2013-09-04 06:30:00 2013-09-04 09:09:00 2013-09-04 09:30:00   -21 mins\n85   2013-03-02 15:30:00 2013-03-02 18:37:00 2013-03-02 19:10:00   -33 mins\n86   2013-01-10 07:30:00 2013-01-10 11:01:00 2013-01-10 11:15:00   -14 mins\n87   2013-10-22 07:30:00 2013-10-22 10:34:00 2013-10-22 11:00:00   -26 mins\n88   2013-02-03 08:19:00 2013-02-03 12:17:00 2013-02-03 12:05:00    12 mins\n89   2013-10-17 07:00:00 2013-10-17 09:55:00 2013-10-17 10:20:00   -25 mins\n90   2013-08-23 07:15:00 2013-08-23 09:54:00 2013-08-23 10:10:00   -16 mins\n91   2013-01-13 17:25:00 2013-01-13 20:41:00 2013-01-13 20:40:00     1 mins\n92   2013-08-08 13:23:00 2013-08-08 16:38:00 2013-08-08 16:34:00     4 mins\n93   2013-09-23 17:10:00 2013-09-23 20:21:00 2013-09-23 20:33:00   -12 mins\n94   2013-01-25 07:00:00 2013-01-25 10:46:00 2013-01-25 10:34:00    12 mins\n95   2013-09-19 14:30:00 2013-09-19 17:41:00 2013-09-19 17:34:00     7 mins\n96   2013-04-09 10:35:00 2013-04-09 13:29:00 2013-04-09 14:08:00   -39 mins\n97   2013-03-08 07:30:00 2013-03-08 12:00:00 2013-03-08 11:00:00    60 mins\n98   2013-05-06 07:26:00 2013-05-06 10:00:00 2013-05-06 10:57:00   -57 mins\n99   2013-05-02 15:15:00 2013-05-02 17:50:00 2013-05-02 18:16:00   -26 mins\n100  2013-06-30 12:00:00 2013-06-30 14:26:00 2013-06-30 14:50:00   -24 mins\n101  2013-02-02 18:19:00 2013-02-02 21:07:00 2013-02-02 21:31:00   -24 mins\n102  2013-11-09 16:30:00 2013-11-09 19:29:00 2013-11-09 19:43:00   -14 mins\n103  2013-08-18 21:50:00 2013-08-18 00:21:00 2013-08-18 01:00:00   -39 mins\n104  2013-07-15 19:40:00 2013-07-15 21:59:00 2013-07-15 22:55:00   -56 mins\n105  2013-08-28 18:30:00 2013-08-28 22:17:00 2013-08-28 21:57:00    20 mins\n106  2013-11-26 17:00:00 2013-11-26 20:23:00 2013-11-26 20:35:00   -12 mins\n107  2013-01-22 17:10:00 2013-01-22 20:27:00 2013-01-22 20:36:00    -9 mins\n108  2013-11-11 13:57:00 2013-11-11 17:24:00 2013-11-11 17:28:00    -4 mins\n109  2013-07-07 07:41:00 2013-07-07 11:03:00 2013-07-07 11:01:00     2 mins\n110  2013-04-12 07:08:00 2013-04-12 10:18:00 2013-04-12 10:29:00   -11 mins\n111  2013-05-13 09:09:00 2013-05-13 11:16:00 2013-05-13 12:18:00   -62 mins\n112  2013-03-23 06:40:00 2013-03-23 09:48:00 2013-03-23 10:00:00   -12 mins\n113  2013-10-30 19:01:00 2013-10-30 22:01:00 2013-10-30 22:15:00   -14 mins\n114  2013-02-17 13:25:00 2013-02-17 16:36:00 2013-02-17 16:33:00     3 mins\n115  2013-03-05 12:00:00 2013-03-05 15:26:00 2013-03-05 15:11:00    15 mins\n116  2013-08-16 20:49:00 2013-08-16 00:20:00 2013-08-16 00:10:00    10 mins\n117  2013-08-03 16:00:00 2013-08-03 19:13:00 2013-08-03 19:13:00     0 mins\n118  2013-05-16 21:00:00 2013-05-16 23:50:00 2013-05-16 00:30:00  1400 mins\n119  2013-06-17 18:55:00 2013-06-17 22:57:00 2013-06-17 22:05:00    52 mins\n120  2013-06-01 11:43:00 2013-06-01 14:23:00 2013-06-01 15:00:00   -37 mins\n121  2013-10-11 13:45:00 2013-10-11 16:30:00 2013-10-11 16:50:00   -20 mins\n122  2013-12-28 09:00:00 2013-12-28 11:51:00 2013-12-28 12:25:00   -34 mins\n123  2013-12-06 18:15:00 2013-12-06 22:05:00 2013-12-06 21:57:00     8 mins\n124  2013-04-24 07:09:00 2013-04-24 10:23:00 2013-04-24 10:16:00     7 mins\n125  2013-05-06 17:29:00 2013-05-06 20:21:00 2013-05-06 21:10:00   -49 mins\n126  2013-05-14 18:25:00 2013-05-14 21:52:00 2013-05-14 21:50:00     2 mins\n127  2013-09-09 10:30:00 2013-09-09 13:10:00 2013-09-09 13:40:00   -30 mins\n128  2013-06-04 18:30:00 2013-06-04 21:42:00 2013-06-04 22:00:00   -18 mins\n129  2013-08-06 11:03:00 2013-08-06 13:39:00 2013-08-06 13:45:00    -6 mins\n130  2013-09-19 18:50:00 2013-09-19 22:58:00 2013-09-19 22:20:00    38 mins\n131  2013-01-28 10:00:00 2013-01-28 13:40:00 2013-01-28 13:41:00    -1 mins\n132  2013-07-10 18:00:00 2013-07-10 04:55:00 2013-07-10 21:30:00  -995 mins\n133  2013-04-14 17:29:00 2013-04-14 01:03:00 2013-04-14 21:05:00 -1202 mins\n134  2013-11-06 18:15:00 2013-11-06 21:25:00 2013-11-06 21:46:00   -21 mins\n135  2013-06-20 12:00:00 2013-06-20 14:50:00 2013-06-20 15:07:00   -17 mins\n136  2013-08-01 05:59:00 2013-08-01 09:09:00 2013-08-01 09:02:00     7 mins\n137  2013-05-24 14:35:00 2013-05-24 17:53:00 2013-05-24 17:54:00    -1 mins\n138  2013-05-24 12:14:00 2013-05-24 15:08:00 2013-05-24 15:20:00   -12 mins\n139  2013-06-17 09:15:00 2013-06-17 12:05:00 2013-06-17 12:10:00    -5 mins\n140  2013-07-08 09:35:00 2013-07-08 12:05:00 2013-07-08 12:21:00   -16 mins\n141  2013-08-20 10:06:00 2013-08-20 12:31:00 2013-08-20 12:55:00   -24 mins\n142  2013-09-07 17:40:00 2013-09-07 19:58:00 2013-09-07 20:35:00   -37 mins\n143  2013-02-10 08:40:00 2013-02-10 11:54:00 2013-02-10 11:51:00     3 mins\n144  2013-12-19 18:02:00 2013-12-19 21:31:00 2013-12-19 21:21:00    10 mins\n145  2013-02-20 20:45:00 2013-02-20 00:16:00 2013-02-20 23:57:00 -1421 mins\n146  2013-05-25 09:30:00 2013-05-25 12:55:00 2013-05-25 12:55:00     0 mins\n147  2013-07-15 16:30:00 2013-07-15 19:04:00 2013-07-15 19:39:00   -35 mins\n148  2013-07-11 13:38:00 2013-07-11 16:23:00 2013-07-11 16:34:00   -11 mins\n149  2013-01-01 15:30:00 2013-01-01 19:04:00 2013-01-01 19:10:00    -6 mins\n150  2013-03-25 08:25:00 2013-03-25 11:12:00 2013-03-25 11:33:00   -21 mins\n151  2013-01-10 11:00:00 2013-01-10 14:09:00 2013-01-10 14:25:00   -16 mins\n152  2013-03-28 07:36:00 2013-03-28 10:54:00 2013-03-28 11:15:00   -21 mins\n153  2013-08-14 17:05:00 2013-08-14 20:26:00 2013-08-14 20:30:00    -4 mins\n154  2013-07-24 07:15:00 2013-07-24 09:52:00 2013-07-24 10:10:00   -18 mins\n155  2013-06-07 19:39:00 2013-06-07 23:12:00 2013-06-07 23:18:00    -6 mins\n156  2013-05-20 09:09:00 2013-05-20 11:47:00 2013-05-20 12:18:00   -31 mins\n157  2013-02-08 08:40:00 2013-02-08 12:26:00 2013-02-08 12:04:00    22 mins\n158  2013-01-30 18:30:00 2013-01-30 21:45:00 2013-01-30 22:02:00   -17 mins\n159  2013-08-25 10:30:00 2013-08-25 13:29:00 2013-08-25 13:50:00   -21 mins\n160  2013-03-30 21:35:00 2013-03-30 00:32:00 2013-03-30 00:50:00   -18 mins\n161  2013-11-19 10:01:00 2013-11-19 13:55:00 2013-11-19 13:22:00    33 mins\n162  2013-08-12 15:30:00 2013-08-12 19:08:00 2013-08-12 18:55:00    13 mins\n163  2013-08-30 17:40:00 2013-08-30 20:12:00 2013-08-30 20:35:00   -23 mins\n164  2013-03-27 13:25:00 2013-03-27 16:33:00 2013-03-27 16:50:00   -17 mins\n165  2013-04-09 09:00:00 2013-04-09 11:38:00 2013-04-09 12:25:00   -47 mins\n166  2013-01-21 15:00:00 2013-01-21 17:58:00 2013-01-21 18:37:00   -39 mins\n167  2013-06-01 09:00:00 2013-06-01 11:46:00 2013-06-01 12:25:00   -39 mins\n168  2013-09-13 07:30:00 2013-09-13 10:11:00 2013-09-13 10:45:00   -34 mins\n169  2013-02-11 06:01:00 2013-02-11 09:51:00 2013-02-11 09:18:00    33 mins\n170  2013-10-03 11:25:00 2013-10-03 14:20:00 2013-10-03 14:25:00    -5 mins\n171  2013-02-24 08:04:00 2013-02-24 11:00:00 2013-02-24 11:29:00   -29 mins\n172  2013-09-27 13:00:00 2013-09-27 16:05:00 2013-09-27 16:14:00    -9 mins\n173  2013-07-30 10:30:00 2013-07-30 13:43:00 2013-07-30 13:45:00    -2 mins\n174  2013-08-11 18:00:00 2013-08-11 22:31:00 2013-08-11 21:02:00    89 mins\n175  2013-11-04 12:45:00 2013-11-04 17:01:00 2013-11-04 16:00:00    61 mins\n176  2013-10-07 16:55:00 2013-10-07 20:28:00 2013-10-07 20:15:00    13 mins\n177  2013-09-20 18:30:00 2013-09-20 23:18:00 2013-09-20 21:57:00    81 mins\n178  2013-09-14 13:00:00 2013-09-14 15:31:00 2013-09-14 15:55:00   -24 mins\n179  2013-04-15 16:33:00 2013-04-15 20:17:00 2013-04-15 19:45:00    32 mins\n180  2013-07-25 17:59:00 2013-07-25 22:03:00 2013-07-25 20:58:00    65 mins\n181  2013-11-17 07:30:00 2013-11-17 11:01:00 2013-11-17 11:00:00     1 mins\n182  2013-12-22 20:26:00 2013-12-22 00:44:00 2013-12-22 23:44:00 -1380 mins\n183  2013-08-23 07:30:00 2013-08-23 10:13:00 2013-08-23 10:45:00   -32 mins\n184  2013-01-18 18:30:00 2013-01-18 22:00:00 2013-01-18 21:48:00    12 mins\n185  2013-08-25 18:23:00 2013-08-25 21:16:00 2013-08-25 21:40:00   -24 mins\n186  2013-03-07 13:45:00 2013-03-07 16:56:00 2013-03-07 17:05:00    -9 mins\n187  2013-11-20 13:00:00 2013-11-20 16:10:00 2013-11-20 16:10:00     0 mins\n188  2013-04-19 20:00:00 2013-04-19 01:33:00 2013-04-19 23:25:00 -1312 mins\n189  2013-11-07 19:32:00 2013-11-07 23:40:00 2013-11-07 23:05:00    35 mins\n190  2013-08-21 14:10:00 2013-08-21 16:59:00 2013-08-21 17:01:00    -2 mins\n191  2013-02-16 11:15:00 2013-02-16 14:10:00 2013-02-16 14:24:00   -14 mins\n192  2013-04-22 06:01:00 2013-04-22 09:09:00 2013-04-22 09:33:00   -24 mins\n193  2013-03-02 16:55:00 2013-03-02 19:43:00 2013-03-02 20:30:00   -47 mins\n194  2013-05-09 13:45:00 2013-05-09 16:26:00 2013-05-09 17:00:00   -34 mins\n195  2013-12-08 07:29:00 2013-12-08 11:03:00 2013-12-08 10:45:00    18 mins\n196  2013-11-02 13:26:00 2013-11-02 16:23:00 2013-11-02 16:24:00    -1 mins\n197  2013-12-26 18:45:00 2013-12-26 21:39:00 2013-12-26 22:12:00   -33 mins\n198  2013-05-09 07:00:00 2013-05-09 09:48:00 2013-05-09 10:34:00   -46 mins\n199  2013-05-21 07:35:00 2013-05-21 10:40:00 2013-05-21 11:10:00   -30 mins\n200  2013-07-21 17:55:00 2013-07-21 21:58:00 2013-07-21 21:20:00    38 mins\n201  2013-12-29 16:36:00 2013-12-29 20:21:00 2013-12-29 20:26:00    -5 mins\n202  2013-12-21 15:15:00 2013-12-21 18:41:00 2013-12-21 18:33:00     8 mins\n203  2013-04-01 08:31:00 2013-04-01 11:26:00 2013-04-01 11:51:00   -25 mins\n204  2013-09-12 17:25:00 2013-09-12 23:59:00 2013-09-12 20:16:00   223 mins\n205  2013-05-14 18:50:00 2013-05-14 21:58:00 2013-05-14 22:25:00   -27 mins\n206  2013-06-28 07:55:00 2013-06-28 10:49:00 2013-06-28 11:15:00   -26 mins\n207  2013-12-16 09:00:00 2013-12-16 12:13:00 2013-12-16 12:10:00     3 mins\n208  2013-01-20 17:25:00 2013-01-20 20:53:00 2013-01-20 20:50:00     3 mins\n209  2013-06-07 14:55:00 2013-06-07 17:14:00 2013-06-07 17:52:00   -38 mins\n210  2013-02-28 18:15:00 2013-02-28 21:01:00 2013-02-28 21:47:00   -46 mins\n211  2013-01-03 12:00:00 2013-01-03 14:42:00 2013-01-03 15:45:00   -63 mins\n212  2013-06-12 17:15:00 2013-06-12 20:56:00 2013-06-12 20:40:00    16 mins\n213  2013-08-08 21:00:00 2013-08-08 01:00:00 2013-08-08 00:22:00    38 mins\n214  2013-09-28 08:54:00 2013-09-28 11:48:00 2013-09-28 12:13:00   -25 mins\n215  2013-06-19 07:06:00 2013-06-19 10:18:00 2013-06-19 10:01:00    17 mins\n216  2013-05-01 12:21:00 2013-05-01 15:20:00 2013-05-01 15:37:00   -17 mins\n217  2013-08-09 13:38:00 2013-08-09 16:43:00 2013-08-09 16:34:00     9 mins\n218  2013-07-18 10:28:00 2013-07-18 13:16:00 2013-07-18 13:39:00   -23 mins\n219  2013-02-23 17:25:00 2013-02-23 21:20:00 2013-02-23 20:50:00    30 mins\n220  2013-11-26 14:05:00 2013-11-26 16:55:00 2013-11-26 17:12:00   -17 mins\n221  2013-02-14 10:00:00 2013-02-14 12:59:00 2013-02-14 13:41:00   -42 mins\n222  2013-10-07 18:50:00 2013-10-07 23:28:00 2013-10-07 22:25:00    63 mins\n223  2013-10-25 20:00:00 2013-10-25 23:02:00 2013-10-25 23:28:00   -26 mins\n224  2013-02-04 19:00:00 2013-02-04 22:32:00 2013-02-04 23:01:00   -29 mins\n225  2013-05-18 13:45:00 2013-05-18 16:11:00 2013-05-18 17:00:00   -49 mins\n226  2013-05-05 12:00:00 2013-05-05 15:47:00 2013-05-05 15:19:00    28 mins\n227  2013-04-06 06:30:00 2013-04-06 09:20:00 2013-04-06 09:45:00   -25 mins\n228  2013-03-22 15:45:00 2013-03-22 19:43:00 2013-03-22 19:07:00    36 mins\n229  2013-12-04 12:00:00 2013-12-04 15:40:00 2013-12-04 15:10:00    30 mins\n230  2013-04-16 17:15:00 2013-04-16 20:15:00 2013-04-16 20:37:00   -22 mins\n231  2013-08-24 11:15:00 2013-08-24 13:31:00 2013-08-24 14:04:00   -33 mins\n232  2013-09-22 12:00:00 2013-09-22 15:00:00 2013-09-22 14:54:00     6 mins\n233  2013-12-10 15:30:00 2013-12-10 19:05:00 2013-12-10 18:56:00     9 mins\n234  2013-07-23 20:25:00 2013-07-23 00:33:00 2013-07-23 23:24:00 -1371 mins\n235  2013-08-17 09:41:00 2013-08-17 11:59:00 2013-08-17 12:35:00   -36 mins\n236  2013-10-28 13:00:00 2013-10-28 16:24:00 2013-10-28 16:22:00     2 mins\n237  2013-08-05 18:55:00 2013-08-05 22:12:00 2013-08-05 22:05:00     7 mins\n238  2013-03-27 18:47:00 2013-03-27 22:10:00 2013-03-27 22:19:00    -9 mins\n239  2013-06-19 19:31:00 2013-06-19 23:12:00 2013-06-19 23:05:00     7 mins\n240  2013-11-24 16:45:00 2013-11-24 19:50:00 2013-11-24 20:10:00   -20 mins\n241  2013-09-24 12:00:00 2013-09-24 14:52:00 2013-09-24 14:54:00    -2 mins\n242  2013-05-25 07:35:00 2013-05-25 10:49:00 2013-05-25 11:10:00   -21 mins\n243  2013-10-31 15:30:00 2013-10-31 18:43:00 2013-10-31 18:54:00   -11 mins\n244  2013-01-06 12:58:00 2013-01-06 16:36:00 2013-01-06 16:10:00    26 mins\n245  2013-11-11 20:20:00 2013-11-11 00:11:00 2013-11-11 23:59:00 -1428 mins\n246  2013-02-07 07:30:00 2013-02-07 10:49:00 2013-02-07 11:00:00   -11 mins\n247  2013-08-05 22:45:00 2013-08-05 02:28:00 2013-08-05 01:35:00    53 mins\n248  2013-05-18 18:52:00 2013-05-18 21:52:00 2013-05-18 21:48:00     4 mins\n249  2013-06-09 16:32:00 2013-06-09 19:35:00 2013-06-09 19:56:00   -21 mins\n250  2013-06-02 09:29:00 2013-06-02 12:19:00 2013-06-02 12:41:00   -22 mins\n251  2013-01-29 17:45:00 2013-01-29 21:37:00 2013-01-29 21:20:00    17 mins\n252  2013-09-09 16:40:00 2013-09-09 19:32:00 2013-09-09 19:47:00   -15 mins\n253  2013-07-03 09:10:00 2013-07-03 12:02:00 2013-07-03 12:15:00   -13 mins\n254  2013-09-16 17:00:00 2013-09-16 19:54:00 2013-09-16 20:18:00   -24 mins\n255  2013-07-20 18:00:00 2013-07-20 20:52:00 2013-07-20 21:30:00   -38 mins\n256  2013-09-21 12:00:00 2013-09-21 16:16:00 2013-09-21 14:55:00    81 mins\n257  2013-05-29 19:31:00 2013-05-29 23:02:00 2013-05-29 23:05:00    -3 mins\n258  2013-08-11 10:30:00 2013-08-11 13:49:00 2013-08-11 13:50:00    -1 mins\n259  2013-03-21 15:45:00 2013-03-21 19:08:00 2013-03-21 19:07:00     1 mins\n260  2013-12-19 12:00:00 2013-12-19 15:22:00 2013-12-19 15:35:00   -13 mins\n261  2013-09-06 06:30:00 2013-09-06 08:52:00 2013-09-06 09:30:00   -38 mins\n262  2013-06-06 06:00:00 2013-06-06 08:32:00 2013-06-06 09:00:00   -28 mins\n263  2013-05-14 17:55:00 2013-05-14 20:23:00 2013-05-14 21:03:00   -40 mins\n264  2013-05-22 16:00:00 2013-05-22 19:29:00 2013-05-22 19:51:00   -22 mins\n265  2013-09-11 18:55:00 2013-09-11 00:30:00 2013-09-11 22:00:00 -1290 mins\n266  2013-10-15 08:52:00 2013-10-15 11:51:00 2013-10-15 12:08:00   -17 mins\n267  2013-05-26 15:20:00 2013-05-26 18:11:00 2013-05-26 18:25:00   -14 mins\n268  2013-01-17 15:40:00 2013-01-17 19:03:00 2013-01-17 19:00:00     3 mins\n269  2013-05-19 10:00:00 2013-05-19 12:42:00 2013-05-19 13:29:00   -47 mins\n270  2013-05-14 09:30:00 2013-05-14 12:49:00 2013-05-14 13:05:00   -16 mins\n271  2013-11-13 09:00:00 2013-11-13 11:54:00 2013-11-13 12:35:00   -41 mins\n272  2013-02-28 10:35:00 2013-02-28 13:35:00 2013-02-28 14:04:00   -29 mins\n273  2013-07-01 10:30:00 2013-07-01 14:16:00 2013-07-01 13:45:00    31 mins\n274  2013-07-26 18:00:00 2013-07-26 22:25:00 2013-07-26 21:19:00    66 mins\n275  2013-08-09 20:01:00 2013-08-09 01:21:00 2013-08-09 23:05:00 -1304 mins\n276  2013-09-07 09:59:00 2013-09-07 13:01:00 2013-09-07 13:14:00   -13 mins\n277  2013-05-01 16:29:00 2013-05-01 19:30:00 2013-05-01 19:38:00    -8 mins\n278  2013-11-23 15:45:00 2013-11-23 19:18:00 2013-11-23 19:20:00    -2 mins\n279  2013-04-12 09:30:00 2013-04-12 13:12:00 2013-04-12 13:09:00     3 mins\n280  2013-05-22 09:24:00 2013-05-22 12:55:00 2013-05-22 12:59:00    -4 mins\n281  2013-04-09 18:00:00 2013-04-09 21:42:00 2013-04-09 21:36:00     6 mins\n282  2013-11-28 10:01:00 2013-11-28 13:15:00 2013-11-28 13:30:00   -15 mins\n283  2013-03-22 10:30:00 2013-03-22 14:02:00 2013-03-22 14:10:00    -8 mins\n284  2013-05-07 19:00:00 2013-05-07 21:49:00 2013-05-07 22:51:00   -62 mins\n285  2013-06-02 10:30:00 2013-06-02 13:45:00 2013-06-02 13:50:00    -5 mins\n286  2013-05-24 17:00:00 2013-05-24 21:05:00 2013-05-24 20:35:00    30 mins\n287  2013-04-02 20:05:00 2013-04-02 22:55:00 2013-04-02 23:23:00   -28 mins\n288  2013-05-15 18:55:00 2013-05-15 23:10:00 2013-05-15 22:20:00    50 mins\n289  2013-06-16 18:21:00 2013-06-16 22:35:00 2013-06-16 21:49:00    46 mins\n290  2013-12-07 06:40:00 2013-12-07 10:32:00 2013-12-07 10:03:00    29 mins\n291  2013-08-24 18:24:00 2013-08-24 20:48:00 2013-08-24 21:29:00   -41 mins\n292  2013-03-28 19:49:00 2013-03-28 23:12:00 2013-03-28 23:21:00    -9 mins\n293  2013-09-01 08:46:00 2013-09-01 11:11:00 2013-09-01 11:40:00   -29 mins\n294  2013-08-08 14:48:00 2013-08-08 17:41:00 2013-08-08 17:45:00    -4 mins\n295  2013-07-18 17:10:00 2013-07-18 20:15:00 2013-07-18 20:15:00     0 mins\n296  2013-02-02 16:55:00 2013-02-02 20:00:00 2013-02-02 20:15:00   -15 mins\n297  2013-03-25 07:00:00 2013-03-25 09:53:00 2013-03-25 10:44:00   -51 mins\n298  2013-02-22 07:30:00 2013-02-22 10:40:00 2013-02-22 11:00:00   -20 mins\n299  2013-11-22 08:00:00 2013-11-22 11:32:00 2013-11-22 11:36:00    -4 mins\n300  2013-04-01 07:30:00 2013-04-01 11:57:00 2013-04-01 11:00:00    57 mins\n301  2013-12-05 18:38:00 2013-12-05 22:39:00 2013-12-05 22:14:00    25 mins\n302  2013-11-19 16:45:00 2013-11-19 19:50:00 2013-11-19 20:00:00   -10 mins\n303  2013-03-15 11:15:00 2013-03-15 14:15:00 2013-03-15 14:24:00    -9 mins\n304  2013-06-28 15:28:00 2013-06-28 19:23:00 2013-06-28 18:55:00    28 mins\n305  2013-02-11 21:00:00 2013-02-11 00:17:00 2013-02-11 00:31:00   -14 mins\n306  2013-03-19 18:29:00 2013-03-19 21:22:00 2013-03-19 21:47:00   -25 mins\n307  2013-01-31 09:00:00 2013-01-31 12:26:00 2013-01-31 12:20:00     6 mins\n308  2013-11-17 20:00:00 2013-11-17 23:42:00 2013-11-17 23:15:00    27 mins\n309  2013-04-11 19:40:00 2013-04-11 01:18:00 2013-04-11 22:58:00 -1300 mins\n310  2013-08-28 14:53:00 2013-08-28 18:31:00 2013-08-28 18:11:00    20 mins\n311  2013-12-25 20:00:00 2013-12-25 23:22:00 2013-12-25 23:25:00    -3 mins\n312  2013-08-17 16:35:00 2013-08-17 18:51:00 2013-08-17 19:44:00   -53 mins\n313  2013-04-05 07:10:00 2013-04-05 10:19:00 2013-04-05 10:35:00   -16 mins\n314  2013-07-16 18:22:00 2013-07-16 22:11:00 2013-07-16 21:55:00    16 mins\n315  2013-08-17 08:39:00 2013-08-17 11:58:00 2013-08-17 11:41:00    17 mins\n316  2013-04-06 10:05:00 2013-04-06 13:10:00 2013-04-06 13:13:00    -3 mins\n317  2013-11-21 16:45:00 2013-11-21 20:20:00 2013-11-21 20:00:00    20 mins\n318  2013-08-29 09:10:00 2013-08-29 11:47:00 2013-08-29 12:20:00   -33 mins\n319  2013-06-27 09:15:00 2013-06-27 11:59:00 2013-06-27 12:15:00   -16 mins\n320  2013-03-22 19:49:00 2013-03-22 23:19:00 2013-03-22 23:21:00    -2 mins\n321  2013-10-18 07:00:00 2013-10-18 10:04:00 2013-10-18 10:03:00     1 mins\n322  2013-04-04 17:25:00 2013-04-04 20:13:00 2013-04-04 20:40:00   -27 mins\n323  2013-07-24 18:55:00 2013-07-24 22:14:00 2013-07-24 22:16:00    -2 mins\n324  2013-06-13 10:00:00 2013-06-13 13:44:00 2013-06-13 13:19:00    25 mins\n325  2013-01-11 07:00:00 2013-01-11 10:26:00 2013-01-11 10:27:00    -1 mins\n326  2013-12-19 14:45:00 2013-12-19 18:19:00 2013-12-19 18:13:00     6 mins\n327  2013-07-25 13:00:00 2013-07-25 15:54:00 2013-07-25 15:55:00    -1 mins\n328  2013-10-18 08:45:00 2013-10-18 11:33:00 2013-10-18 11:40:00    -7 mins\n329  2013-01-16 18:20:00 2013-01-16 21:51:00 2013-01-16 21:50:00     1 mins\n330  2013-05-17 14:00:00 2013-05-17 17:05:00 2013-05-17 17:15:00   -10 mins\n331  2013-11-04 17:34:00 2013-11-04 21:37:00 2013-11-04 20:46:00    51 mins\n332  2013-11-06 18:10:00 2013-11-06 21:27:00 2013-11-06 21:29:00    -2 mins\n333  2013-04-25 18:04:00 2013-04-25 22:03:00 2013-04-25 21:45:00    18 mins\n334  2013-12-16 12:00:00 2013-12-16 16:25:00 2013-12-16 15:26:00    59 mins\n335  2013-05-06 13:58:00 2013-05-06 16:34:00 2013-05-06 17:04:00   -30 mins\n336  2013-07-19 20:59:00 2013-07-19 00:57:00 2013-07-19 00:12:00    45 mins\n337  2013-10-06 19:08:00 2013-10-06 22:08:00 2013-10-06 22:16:00    -8 mins\n338  2013-12-05 16:29:00 2013-12-05 22:05:00 2013-12-05 19:46:00   139 mins\n339  2013-01-10 07:00:00 2013-01-10 10:06:00 2013-01-10 10:27:00   -21 mins\n340  2013-05-22 21:00:00 2013-05-22 01:06:00 2013-05-22 00:30:00    36 mins\n341  2013-04-02 18:29:00 2013-04-02 23:20:00 2013-04-02 21:47:00    93 mins\n342  2013-03-15 21:00:00 2013-03-15 00:13:00 2013-03-15 00:32:00   -19 mins\n343  2013-02-02 15:27:00 2013-02-02 18:50:00 2013-02-02 18:53:00    -3 mins\n344  2013-08-24 21:50:00 2013-08-24 00:33:00 2013-08-24 01:00:00   -27 mins\n345  2013-12-24 20:21:00 2013-12-24 23:38:00 2013-12-24 23:57:00   -19 mins\n346  2013-11-03 17:59:00 2013-11-03 22:59:00 2013-11-03 20:52:00   127 mins\n347  2013-04-06 18:45:00 2013-04-06 21:56:00 2013-04-06 22:17:00   -21 mins\n348  2013-05-12 13:15:00 2013-05-12 15:41:00 2013-05-12 16:16:00   -35 mins\n349  2013-01-02 12:58:00 2013-01-02 15:35:00 2013-01-02 16:10:00   -35 mins\n350  2013-08-04 18:30:00 2013-08-04 22:35:00 2013-08-04 21:55:00    40 mins\n351  2013-10-10 12:00:00 2013-10-10 14:59:00 2013-10-10 15:15:00   -16 mins\n352  2013-08-20 07:59:00 2013-08-20 11:16:00 2013-08-20 11:03:00    13 mins\n353  2013-10-03 10:30:00 2013-10-03 13:54:00 2013-10-03 13:25:00    29 mins\n354  2013-10-20 15:30:00 2013-10-20 19:06:00 2013-10-20 18:54:00    12 mins\n355  2013-12-15 10:30:00 2013-12-15 13:23:00 2013-12-15 13:40:00   -17 mins\n356  2013-12-13 08:22:00 2013-12-13 11:36:00 2013-12-13 11:42:00    -6 mins\n357  2013-04-24 07:05:00 2013-04-24 10:35:00 2013-04-24 10:30:00     5 mins\n358  2013-05-20 10:00:00 2013-05-20 12:41:00 2013-05-20 13:29:00   -48 mins\n359  2013-06-23 06:00:00 2013-06-23 08:46:00 2013-06-23 09:10:00   -24 mins\n360  2013-09-07 06:59:00 2013-09-07 09:14:00 2013-09-07 09:49:00   -35 mins\n361  2013-06-11 13:59:00 2013-06-11 17:49:00 2013-06-11 17:24:00    25 mins\n362  2013-03-24 15:45:00 2013-03-24 18:55:00 2013-03-24 19:02:00    -7 mins\n363  2013-07-02 17:00:00 2013-07-02 20:42:00 2013-07-02 20:16:00    26 mins\n364  2013-11-15 18:45:00 2013-11-15 22:11:00 2013-11-15 22:10:00     1 mins\n365  2013-10-21 18:03:00 2013-10-21 21:36:00 2013-10-21 21:17:00    19 mins\n366  2013-09-17 18:50:00 2013-09-17 21:56:00 2013-09-17 22:12:00   -16 mins\n367  2013-06-03 07:00:00 2013-06-03 10:18:00 2013-06-03 10:34:00   -16 mins\n368  2013-08-15 07:00:00 2013-08-15 09:51:00 2013-08-15 10:04:00   -13 mins\n369  2013-11-15 16:59:00 2013-11-15 20:11:00 2013-11-15 20:34:00   -23 mins\n370  2013-02-04 20:05:00 2013-02-04 23:36:00 2013-02-04 23:35:00     1 mins\n371  2013-01-23 21:00:00 2013-01-23 00:25:00 2013-01-23 00:31:00    -6 mins\n372  2013-05-21 17:29:00 2013-05-21 21:03:00 2013-05-21 21:10:00    -7 mins\n373  2013-05-04 10:30:00 2013-05-04 13:00:00 2013-05-04 13:40:00   -40 mins\n374  2013-11-08 16:50:00 2013-11-08 20:11:00 2013-11-08 20:02:00     9 mins\n375  2013-04-13 08:35:00 2013-04-13 11:36:00 2013-04-13 11:48:00   -12 mins\n376  2013-04-29 10:11:00 2013-04-29 13:22:00 2013-04-29 13:17:00     5 mins\n377  2013-11-25 08:00:00 2013-11-25 11:28:00 2013-11-25 11:34:00    -6 mins\n378  2013-10-25 20:17:00 2013-10-25 22:38:00 2013-10-25 23:20:00   -42 mins\n379  2013-11-27 06:39:00 2013-11-27 09:30:00 2013-11-27 09:55:00   -25 mins\n380  2013-12-18 10:19:00 2013-12-18 14:08:00 2013-12-18 13:50:00    18 mins\n381  2013-06-14 13:54:00 2013-06-14 16:37:00 2013-06-14 16:42:00    -5 mins\n382  2013-12-14 08:00:00 2013-12-14 11:05:00 2013-12-14 11:35:00   -30 mins\n383  2013-05-06 06:13:00 2013-05-06 08:57:00 2013-05-06 09:35:00   -38 mins\n384  2013-09-25 08:57:00 2013-09-25 12:06:00 2013-09-25 11:58:00     8 mins\n385  2013-12-04 10:30:00 2013-12-04 14:30:00 2013-12-04 14:05:00    25 mins\n386  2013-12-04 08:50:00 2013-12-04 12:49:00 2013-12-04 12:28:00    21 mins\n387  2013-09-09 13:45:00 2013-09-09 16:10:00 2013-09-09 16:50:00   -40 mins\n388  2013-11-11 12:00:00 2013-11-11 15:07:00 2013-11-11 15:20:00   -13 mins\n389  2013-02-12 08:35:00 2013-02-12 11:38:00 2013-02-12 12:15:00   -37 mins\n390  2013-03-03 15:56:00 2013-03-03 19:34:00 2013-03-03 19:25:00     9 mins\n391  2013-02-02 13:20:00 2013-02-02 16:51:00 2013-02-02 16:50:00     1 mins\n392  2013-01-17 10:00:00 2013-01-17 13:15:00 2013-01-17 13:41:00   -26 mins\n393  2013-09-03 18:50:00 2013-09-03 22:28:00 2013-09-03 22:20:00     8 mins\n394  2013-07-18 15:20:00 2013-07-18 17:44:00 2013-07-18 18:14:00   -30 mins\n395  2013-05-17 08:00:00 2013-05-17 10:41:00 2013-05-17 11:35:00   -54 mins\n396  2013-10-18 08:52:00 2013-10-18 11:28:00 2013-10-18 12:08:00   -40 mins\n397  2013-05-27 12:00:00 2013-05-27 14:54:00 2013-05-27 15:05:00   -11 mins\n398  2013-01-18 14:29:00 2013-01-18 17:40:00 2013-01-18 17:54:00   -14 mins\n399  2013-07-25 12:00:00 2013-07-25 14:38:00 2013-07-25 15:01:00   -23 mins\n400  2013-11-19 07:30:00 2013-11-19 10:36:00 2013-11-19 10:55:00   -19 mins\n401  2013-05-24 16:40:00 2013-05-24 19:54:00 2013-05-24 19:56:00    -2 mins\n402  2013-01-21 19:50:00 2013-01-21 23:23:00 2013-01-21 23:35:00   -12 mins\n403  2013-02-17 15:15:00 2013-02-17 18:17:00 2013-02-17 18:25:00    -8 mins\n404  2013-04-19 18:30:00 2013-04-19 21:43:00 2013-04-19 21:51:00    -8 mins\n405  2013-08-14 18:00:00 2013-08-14 21:28:00 2013-08-14 21:02:00    26 mins\n406  2013-10-09 17:29:00 2013-10-09 20:22:00 2013-10-09 20:30:00    -8 mins\n407  2013-05-02 09:00:00 2013-05-02 11:51:00 2013-05-02 12:10:00   -19 mins\n408  2013-11-25 07:30:00 2013-11-25 10:34:00 2013-11-25 11:10:00   -36 mins\n409  2013-11-13 17:25:00 2013-11-13 19:56:00 2013-11-13 20:40:00   -44 mins\n410  2013-11-01 13:55:00 2013-11-01 16:58:00 2013-11-01 17:17:00   -19 mins\n411  2013-04-04 07:00:00 2013-04-04 09:54:00 2013-04-04 10:29:00   -35 mins\n412  2013-05-30 06:00:00 2013-05-30 09:01:00 2013-05-30 09:16:00   -15 mins\n413  2013-04-02 07:30:00 2013-04-02 10:43:00 2013-04-02 10:50:00    -7 mins\n414  2013-07-07 18:55:00 2013-07-07 03:09:00 2013-07-07 22:15:00 -1146 mins\n415  2013-06-25 19:15:00 2013-06-25 22:59:00 2013-06-25 22:30:00    29 mins\n416  2013-10-05 16:25:00 2013-10-05 19:17:00 2013-10-05 19:32:00   -15 mins\n417  2013-03-26 07:45:00 2013-03-26 11:03:00 2013-03-26 11:25:00   -22 mins\n418  2013-08-03 17:59:00 2013-08-03 20:43:00 2013-08-03 20:58:00   -15 mins\n419  2013-06-16 17:32:00 2013-06-16 21:16:00 2013-06-16 21:14:00     2 mins\n420  2013-07-05 17:05:00 2013-07-05 19:38:00 2013-07-05 19:57:00   -19 mins\n421  2013-02-21 21:35:00 2013-02-21 00:52:00 2013-02-21 00:50:00     2 mins\n422  2013-12-15 16:59:00 2013-12-15 20:21:00 2013-12-15 20:34:00   -13 mins\n423  2013-10-12 07:00:00 2013-10-12 10:20:00 2013-10-12 10:25:00    -5 mins\n424  2013-09-07 14:48:00 2013-09-07 17:25:00 2013-09-07 18:01:00   -36 mins\n425  2013-09-27 19:47:00 2013-09-27 22:45:00 2013-09-27 22:59:00   -14 mins\n426  2013-09-13 20:25:00 2013-09-13 23:10:00 2013-09-13 23:28:00   -18 mins\n427  2013-07-16 15:40:00 2013-07-16 19:21:00 2013-07-16 18:58:00    23 mins\n428  2013-12-15 14:00:00 2013-12-15 16:54:00 2013-12-15 17:10:00   -16 mins\n429  2013-11-15 09:10:00 2013-11-15 12:14:00 2013-11-15 12:20:00    -6 mins\n430  2013-06-10 07:05:00 2013-06-10 09:56:00 2013-06-10 10:04:00    -8 mins\n431  2013-02-07 19:05:00 2013-02-07 22:53:00 2013-02-07 22:35:00    18 mins\n432  2013-11-26 16:32:00 2013-11-26 19:34:00 2013-11-26 20:14:00   -40 mins\n433  2013-07-15 16:00:00 2013-07-15 18:59:00 2013-07-15 19:38:00   -39 mins\n434  2013-11-20 18:30:00 2013-11-20 22:32:00 2013-11-20 22:06:00    26 mins\n435  2013-12-25 09:21:00 2013-12-25 12:44:00 2013-12-25 12:35:00     9 mins\n436  2013-08-31 20:29:00 2013-08-31 23:39:00 2013-08-31 23:59:00   -20 mins\n437  2013-09-04 08:25:00 2013-09-04 11:24:00 2013-09-04 11:48:00   -24 mins\n438  2013-04-16 06:00:00 2013-04-16 09:04:00 2013-04-16 09:22:00   -18 mins\n439  2013-10-19 15:21:00 2013-10-19 18:33:00 2013-10-19 18:19:00    14 mins\n440  2013-08-26 07:00:00 2013-08-26 09:44:00 2013-08-26 10:14:00   -30 mins\n441  2013-08-24 15:35:00 2013-08-24 18:25:00 2013-08-24 18:53:00   -28 mins\n442  2013-06-09 14:59:00 2013-06-09 17:51:00 2013-06-09 18:05:00   -14 mins\n443  2013-05-01 18:30:00 2013-05-01 21:30:00 2013-05-01 22:00:00   -30 mins\n444  2013-11-25 20:25:00 2013-11-25 23:45:00 2013-11-25 23:40:00     5 mins\n445  2013-08-14 12:18:00 2013-08-14 15:12:00 2013-08-14 15:16:00    -4 mins\n446  2013-11-15 10:30:00 2013-11-15 14:05:00 2013-11-15 13:35:00    30 mins\n447  2013-06-19 17:54:00 2013-06-19 21:20:00 2013-06-19 21:00:00    20 mins\n448  2013-10-29 07:00:00 2013-10-29 10:28:00 2013-10-29 10:25:00     3 mins\n449  2013-04-15 10:30:00 2013-04-15 14:12:00 2013-04-15 14:05:00     7 mins\n450  2013-04-12 07:05:00 2013-04-12 10:17:00 2013-04-12 10:30:00   -13 mins\n451  2013-10-22 10:30:00 2013-10-22 13:29:00 2013-10-22 13:55:00   -26 mins\n452  2013-10-12 16:45:00 2013-10-12 20:07:00 2013-10-12 20:15:00    -8 mins\n453  2013-09-21 14:25:00 2013-09-21 17:30:00 2013-09-21 17:29:00     1 mins\n454  2013-01-13 09:00:00 2013-01-13 12:25:00 2013-01-13 12:20:00     5 mins\n455  2013-04-19 09:10:00 2013-04-19 13:03:00 2013-04-19 12:35:00    28 mins\n456  2013-12-03 06:39:00 2013-12-03 10:30:00 2013-12-03 09:55:00    35 mins\n457  2013-08-05 19:39:00 2013-08-05 23:01:00 2013-08-05 22:34:00    27 mins\n458  2013-09-06 10:30:00 2013-09-06 13:19:00 2013-09-06 13:50:00   -31 mins\n459  2013-12-13 09:00:00 2013-12-13 12:01:00 2013-12-13 12:10:00    -9 mins\n460  2013-05-25 18:55:00 2013-05-25 22:13:00 2013-05-25 22:20:00    -7 mins\n461  2013-06-09 18:30:00 2013-06-09 22:14:00 2013-06-09 21:55:00    19 mins\n462  2013-02-11 09:00:00 2013-02-11 12:26:00 2013-02-11 12:20:00     6 mins\n463  2013-09-12 19:30:00 2013-09-12 01:11:00 2013-09-12 22:44:00 -1293 mins\n464  2013-03-31 15:30:00 2013-03-31 20:04:00 2013-03-31 19:22:00    42 mins\n465  2013-07-08 07:30:00 2013-07-08 10:26:00 2013-07-08 10:45:00   -19 mins\n466  2013-07-06 12:08:00 2013-07-06 14:51:00 2013-07-06 14:52:00    -1 mins\n467  2013-05-26 16:32:00 2013-05-26 19:49:00 2013-05-26 19:56:00    -7 mins\n468  2013-09-04 07:40:00 2013-09-04 10:30:00 2013-09-04 10:55:00   -25 mins\n469  2013-01-08 07:45:00 2013-01-08 10:58:00 2013-01-08 11:25:00   -27 mins\n470  2013-09-16 16:19:00 2013-09-16 19:32:00 2013-09-16 19:43:00   -11 mins\n471  2013-05-01 08:20:00 2013-05-01 11:35:00 2013-05-01 11:50:00   -15 mins\n472  2013-11-11 07:59:00 2013-11-11 12:02:00 2013-11-11 11:33:00    29 mins\n473  2013-08-02 20:59:00 2013-08-02 23:51:00 2013-08-02 00:12:00  1419 mins\n474  2013-04-14 09:00:00 2013-04-14 12:10:00 2013-04-14 12:25:00   -15 mins\n475  2013-10-01 12:00:00 2013-10-01 14:44:00 2013-10-01 15:15:00   -31 mins\n476  2013-11-23 10:30:00 2013-11-23 14:18:00 2013-11-23 13:55:00    23 mins\n477  2013-04-21 17:25:00 2013-04-21 20:16:00 2013-04-21 20:40:00   -24 mins\n478  2013-06-29 07:15:00 2013-06-29 09:59:00 2013-06-29 10:10:00   -11 mins\n479  2013-11-19 14:15:00 2013-11-19 17:11:00 2013-11-19 17:36:00   -25 mins\n480  2013-10-27 18:50:00 2013-10-27 22:09:00 2013-10-27 22:00:00     9 mins\n481  2013-03-18 14:25:00 2013-03-18 17:53:00 2013-03-18 17:50:00     3 mins\n482  2013-08-09 09:15:00 2013-08-09 12:18:00 2013-08-09 12:10:00     8 mins\n483  2013-10-11 13:00:00 2013-10-11 16:00:00 2013-10-11 16:10:00   -10 mins\n484  2013-06-04 10:30:00 2013-06-04 13:19:00 2013-06-04 13:50:00   -31 mins\n485  2013-05-06 13:00:00 2013-05-06 15:53:00 2013-05-06 16:15:00   -22 mins\n486  2013-03-12 19:35:00 2013-03-12 22:49:00 2013-03-12 23:16:00   -27 mins\n487  2013-10-11 15:30:00 2013-10-11 18:44:00 2013-10-11 18:54:00   -10 mins\n488  2013-11-14 13:45:00 2013-11-14 16:35:00 2013-11-14 16:50:00   -15 mins\n489  2013-06-13 08:33:00 2013-06-13 12:20:00 2013-06-13 11:39:00    41 mins\n490  2013-03-14 13:45:00 2013-03-14 16:15:00 2013-03-14 17:05:00   -50 mins\n491  2013-09-12 07:30:00 2013-09-12 10:36:00 2013-09-12 10:45:00    -9 mins\n492  2013-08-20 20:25:00 2013-08-20 23:13:00 2013-08-20 23:24:00   -11 mins\n493  2013-07-27 15:26:00 2013-07-27 18:18:00 2013-07-27 18:20:00    -2 mins\n494  2013-10-21 15:30:00 2013-10-21 18:43:00 2013-10-21 18:45:00    -2 mins\n495  2013-05-03 08:00:00 2013-05-03 10:56:00 2013-05-03 11:35:00   -39 mins\n496  2013-04-23 07:08:00 2013-04-23 10:32:00 2013-04-23 10:29:00     3 mins\n497  2013-11-26 06:39:00 2013-11-26 10:04:00 2013-11-26 10:02:00     2 mins\n498  2013-07-01 08:40:00 2013-07-01 11:26:00 2013-07-01 11:39:00   -13 mins\n499  2013-12-03 14:32:00 2013-12-03 18:23:00 2013-12-03 17:59:00    24 mins\n500  2013-10-13 18:15:00 2013-10-13 21:32:00 2013-10-13 21:38:00    -6 mins\n501  2013-10-11 12:00:00 2013-10-11 14:35:00 2013-10-11 14:55:00   -20 mins\n502  2013-09-23 18:30:00 2013-09-23 22:25:00 2013-09-23 21:57:00    28 mins\n503  2013-06-22 16:00:00 2013-06-22 19:26:00 2013-06-22 19:35:00    -9 mins\n504  2013-03-01 07:10:00 2013-03-01 09:58:00 2013-03-01 10:35:00   -37 mins\n505  2013-08-26 19:51:00 2013-08-26 22:02:00 2013-08-26 22:47:00   -45 mins\n506  2013-10-08 08:57:00 2013-10-08 11:51:00 2013-10-08 11:51:00     0 mins\n507  2013-05-23 17:25:00 2013-05-23 22:00:00 2013-05-23 20:40:00    80 mins\n508  2013-10-06 07:30:00 2013-10-06 10:05:00 2013-10-06 11:00:00   -55 mins\n509  2013-07-15 16:11:00 2013-07-15 18:54:00 2013-07-15 19:24:00   -30 mins\n510  2013-02-19 17:15:00 2013-02-19 20:45:00 2013-02-19 20:40:00     5 mins\n511  2013-07-08 17:41:00 2013-07-08 21:40:00 2013-07-08 20:37:00    63 mins\n512  2013-10-14 10:30:00 2013-10-14 13:43:00 2013-10-14 13:55:00   -12 mins\n513  2013-12-10 10:30:00 2013-12-10 14:33:00 2013-12-10 14:05:00    28 mins\n514  2013-10-21 18:35:00 2013-10-21 21:35:00 2013-10-21 21:38:00    -3 mins\n515  2013-07-30 07:30:00 2013-07-30 10:27:00 2013-07-30 10:25:00     2 mins\n516  2013-04-12 06:00:00 2013-04-12 09:06:00 2013-04-12 09:03:00     3 mins\n517  2013-07-02 07:15:00 2013-07-02 09:35:00 2013-07-02 10:05:00   -30 mins\n518  2013-01-06 17:51:00 2013-01-06 20:41:00 2013-01-06 21:03:00   -22 mins\n519  2013-09-27 06:30:00 2013-09-27 09:40:00 2013-09-27 09:46:00    -6 mins\n520  2013-08-16 07:00:00 2013-08-16 09:37:00 2013-08-16 10:04:00   -27 mins\n521  2013-01-28 17:00:00 2013-01-28 20:14:00 2013-01-28 20:49:00   -35 mins\n522  2013-06-05 20:30:00 2013-06-05 23:41:00 2013-06-05 23:56:00   -15 mins\n523  2013-02-10 17:45:00 2013-02-10 20:48:00 2013-02-10 21:20:00   -32 mins\n524  2013-09-14 15:20:00 2013-09-14 17:57:00 2013-09-14 18:18:00   -21 mins\n525  2013-04-22 10:15:00 2013-04-22 13:36:00 2013-04-22 13:36:00     0 mins\n526  2013-03-12 16:30:00 2013-03-12 21:25:00 2013-03-12 20:15:00    70 mins\n527  2013-07-14 21:50:00 2013-07-14 00:20:00 2013-07-14 01:00:00   -40 mins\n528  2013-12-31 13:50:00 2013-12-31 17:33:00 2013-12-31 17:30:00     3 mins\n529  2013-12-18 15:30:00 2013-12-18 18:55:00 2013-12-18 19:03:00    -8 mins\n530  2013-04-25 07:05:00 2013-04-25 10:34:00 2013-04-25 10:30:00     4 mins\n531  2013-02-25 15:29:00 2013-02-25 18:23:00 2013-02-25 18:41:00   -18 mins\n532  2013-06-28 05:49:00 2013-06-28 08:48:00 2013-06-28 08:58:00   -10 mins\n533  2013-12-06 14:45:00 2013-12-06 17:56:00 2013-12-06 18:09:00   -13 mins\n534  2013-03-17 17:25:00 2013-03-17 21:11:00 2013-03-17 20:50:00    21 mins\n535  2013-10-25 18:15:00 2013-10-25 21:16:00 2013-10-25 21:30:00   -14 mins\n536  2013-09-02 18:50:00 2013-09-02 21:54:00 2013-09-02 22:00:00    -6 mins\n537  2013-04-30 19:00:00 2013-04-30 22:20:00 2013-04-30 22:40:00   -20 mins\n538  2013-04-25 17:25:00 2013-04-25 20:54:00 2013-04-25 20:40:00    14 mins\n539  2013-03-09 06:07:00 2013-03-09 09:27:00 2013-03-09 09:32:00    -5 mins\n540  2013-09-19 08:30:00 2013-09-19 11:28:00 2013-09-19 11:37:00    -9 mins\n541  2013-05-27 19:30:00 2013-05-27 22:20:00 2013-05-27 22:37:00   -17 mins\n542  2013-12-27 15:15:00 2013-12-27 18:23:00 2013-12-27 18:33:00   -10 mins\n543  2013-01-25 07:30:00 2013-01-25 11:11:00 2013-01-25 11:15:00    -4 mins\n544  2013-02-17 20:27:00 2013-02-17 23:18:00 2013-02-17 23:42:00   -24 mins\n545  2013-03-15 19:00:00 2013-03-15 23:08:00 2013-03-15 22:40:00    28 mins\n546  2013-12-03 17:05:00 2013-12-03 20:41:00 2013-12-03 20:15:00    26 mins\n547  2013-10-04 08:52:00 2013-10-04 12:07:00 2013-10-04 12:08:00    -1 mins\n548  2013-01-12 08:30:00 2013-01-12 11:47:00 2013-01-12 11:54:00    -7 mins\n549  2013-02-05 16:59:00 2013-02-05 19:43:00 2013-02-05 20:15:00   -32 mins\n550  2013-10-20 18:39:00 2013-10-20 21:32:00 2013-10-20 21:56:00   -24 mins\n551  2013-04-01 15:45:00 2013-04-01 19:47:00 2013-04-01 19:10:00    37 mins\n552  2013-05-25 07:00:00 2013-05-25 10:03:00 2013-05-25 10:15:00   -12 mins\n553  2013-10-04 07:40:00 2013-10-04 10:46:00 2013-10-04 10:55:00    -9 mins\n554  2013-09-19 17:30:00 2013-09-19 20:51:00 2013-09-19 21:00:00    -9 mins\n555  2013-08-25 17:55:00 2013-08-25 20:59:00 2013-08-25 21:20:00   -21 mins\n556  2013-10-12 19:16:00 2013-10-12 22:13:00 2013-10-12 22:25:00   -12 mins\n557  2013-07-06 06:00:00 2013-07-06 09:01:00 2013-07-06 09:00:00     1 mins\n558  2013-09-04 06:30:00 2013-09-04 09:33:00 2013-09-04 09:52:00   -19 mins\n559  2013-05-24 15:40:00 2013-05-24 19:15:00 2013-05-24 18:55:00    20 mins\n560  2013-07-10 20:29:00 2013-07-10 03:49:00 2013-07-10 23:59:00 -1210 mins\n561  2013-07-31 13:38:00 2013-07-31 16:19:00 2013-07-31 16:34:00   -15 mins\n562  2013-09-19 10:30:00 2013-09-19 13:18:00 2013-09-19 13:25:00    -7 mins\n563  2013-02-20 10:30:00 2013-02-20 13:47:00 2013-02-20 14:15:00   -28 mins\n564  2013-08-27 21:40:00 2013-08-27 23:57:00 2013-08-27 00:40:00  1397 mins\n565  2013-12-05 12:00:00 2013-12-05 15:25:00 2013-12-05 15:21:00     4 mins\n566  2013-06-19 11:02:00 2013-06-19 13:54:00 2013-06-19 13:41:00    13 mins\n567  2013-10-31 17:25:00 2013-10-31 20:12:00 2013-10-31 20:40:00   -28 mins\n568  2013-04-03 17:53:00 2013-04-03 21:45:00 2013-04-03 21:05:00    40 mins\n569  2013-04-02 09:00:00 2013-04-02 12:29:00 2013-04-02 12:24:00     5 mins\n570  2013-07-20 10:30:00 2013-07-20 14:02:00 2013-07-20 13:50:00    12 mins\n571  2013-08-09 18:00:00 2013-08-09 21:39:00 2013-08-09 21:02:00    37 mins\n572  2013-05-23 20:01:00 2013-05-23 02:56:00 2013-05-23 23:20:00 -1224 mins\n573  2013-03-20 07:00:00 2013-03-20 10:23:00 2013-03-20 10:44:00   -21 mins\n574  2013-03-11 15:10:00 2013-03-11 18:00:00 2013-03-11 18:18:00   -18 mins\n575  2013-10-26 19:10:00 2013-10-26 21:47:00 2013-10-26 22:15:00   -28 mins\n576  2013-07-17 20:29:00 2013-07-17 23:55:00 2013-07-17 23:59:00    -4 mins\n577  2013-11-28 11:51:00 2013-11-28 16:07:00 2013-11-28 14:59:00    68 mins\n578  2013-07-18 18:30:00 2013-07-18 22:42:00 2013-07-18 21:45:00    57 mins\n579  2013-02-14 12:00:00 2013-02-14 14:51:00 2013-02-14 15:10:00   -19 mins\n580  2013-09-18 08:52:00 2013-09-18 11:48:00 2013-09-18 11:56:00    -8 mins\n581  2013-04-19 07:05:00 2013-04-19 10:14:00 2013-04-19 10:30:00   -16 mins\n582  2013-12-03 07:30:00 2013-12-03 11:12:00 2013-12-03 11:05:00     7 mins\n583  2013-10-26 12:00:00 2013-10-26 14:39:00 2013-10-26 14:55:00   -16 mins\n584  2013-09-12 18:30:00 2013-09-12 23:05:00 2013-09-12 21:57:00    68 mins\n585  2013-07-15 13:38:00 2013-07-15 15:44:00 2013-07-15 16:34:00   -50 mins\n586  2013-07-05 18:55:00 2013-07-05 22:41:00 2013-07-05 22:15:00    26 mins\n587  2013-07-08 20:59:00 2013-07-08 23:39:00 2013-07-08 00:12:00  1407 mins\n588  2013-05-20 10:45:00 2013-05-20 13:31:00 2013-05-20 14:20:00   -49 mins\n589  2013-01-30 07:00:00 2013-01-30 09:59:00 2013-01-30 10:27:00   -28 mins\n590  2013-07-21 20:01:00 2013-07-21 23:20:00 2013-07-21 23:05:00    15 mins\n591  2013-11-23 11:37:00 2013-11-23 15:10:00 2013-11-23 15:11:00    -1 mins\n592  2013-04-08 07:10:00 2013-04-08 10:37:00 2013-04-08 10:35:00     2 mins\n593  2013-06-26 10:30:00 2013-06-26 15:40:00 2013-06-26 13:45:00   115 mins\n594  2013-09-20 20:25:00 2013-09-20 23:12:00 2013-09-20 23:28:00   -16 mins\n595  2013-01-08 10:30:00 2013-01-08 13:43:00 2013-01-08 14:15:00   -32 mins\n596  2013-03-25 17:30:00 2013-03-25 20:23:00 2013-03-25 20:46:00   -23 mins\n597  2013-12-08 20:21:00 2013-12-08 01:17:00 2013-12-08 23:57:00 -1360 mins\n598  2013-06-07 09:00:00 2013-06-07 12:33:00 2013-06-07 11:56:00    37 mins\n599  2013-10-14 12:00:00 2013-10-14 14:47:00 2013-10-14 14:55:00    -8 mins\n600  2013-09-12 07:00:00 2013-09-12 09:47:00 2013-09-12 10:23:00   -36 mins\n601  2013-11-29 14:55:00 2013-11-29 18:14:00 2013-11-29 18:19:00    -5 mins\n602  2013-03-11 08:40:00 2013-03-11 11:24:00 2013-03-11 11:50:00   -26 mins\n603  2013-10-21 08:52:00 2013-10-21 11:41:00 2013-10-21 12:08:00   -27 mins\n604  2013-09-30 07:30:00 2013-09-30 10:10:00 2013-09-30 10:45:00   -35 mins\n605  2013-11-11 17:29:00 2013-11-11 21:06:00 2013-11-11 21:11:00    -5 mins\n606  2013-05-20 09:00:00 2013-05-20 12:00:00 2013-05-20 12:10:00   -10 mins\n607  2013-10-01 21:00:00 2013-10-01 23:48:00 2013-10-01 00:18:00  1410 mins\n608  2013-06-21 13:38:00 2013-06-21 16:16:00 2013-06-21 16:34:00   -18 mins\n609  2013-05-05 17:31:00 2013-05-05 20:53:00 2013-05-05 20:44:00     9 mins\n610  2013-10-14 18:00:00 2013-10-14 21:03:00 2013-10-14 21:04:00    -1 mins\n611  2013-11-14 06:39:00 2013-11-14 09:57:00 2013-11-14 10:02:00    -5 mins\n612  2013-03-03 13:29:00 2013-03-03 16:56:00 2013-03-03 16:54:00     2 mins\n613  2013-06-29 08:47:00 2013-06-29 12:21:00 2013-06-29 11:56:00    25 mins\n614  2013-08-13 12:00:00 2013-08-13 15:08:00 2013-08-13 14:55:00    13 mins\n615  2013-12-09 10:35:00 2013-12-09 14:25:00 2013-12-09 14:05:00    20 mins\n616  2013-11-04 19:19:00 2013-11-04 22:48:00 2013-11-04 22:33:00    15 mins\n617  2013-08-17 18:13:00 2013-08-17 20:40:00 2013-08-17 21:28:00   -48 mins\n618  2013-03-14 07:45:00 2013-03-14 10:53:00 2013-03-14 11:25:00   -32 mins\n619  2013-02-04 16:30:00 2013-02-04 21:11:00 2013-02-04 20:15:00    56 mins\n620  2013-10-01 06:30:00 2013-10-01 09:17:00 2013-10-01 09:22:00    -5 mins\n621  2013-07-09 17:10:00 2013-07-09 23:08:00 2013-07-09 20:35:00   153 mins\n622  2013-12-23 17:30:00 2013-12-23 20:36:00 2013-12-23 20:46:00   -10 mins\n623  2013-02-01 17:10:00 2013-02-01 20:28:00 2013-02-01 20:36:00    -8 mins\n624  2013-02-28 08:16:00 2013-02-28 10:57:00 2013-02-28 11:35:00   -38 mins\n625  2013-07-26 15:45:00 2013-07-26 18:38:00 2013-07-26 19:00:00   -22 mins\n626  2013-06-08 10:57:00 2013-06-08 13:20:00 2013-06-08 13:35:00   -15 mins\n627  2013-03-18 11:06:00 2013-03-18 14:18:00 2013-03-18 14:31:00   -13 mins\n628  2013-09-09 07:00:00 2013-09-09 10:09:00 2013-09-09 10:10:00    -1 mins\n629  2013-01-15 16:55:00 2013-01-15 19:53:00 2013-01-15 20:35:00   -42 mins\n630  2013-10-11 08:30:00 2013-10-11 11:53:00 2013-10-11 11:52:00     1 mins\n631  2013-02-07 11:25:00 2013-02-07 14:18:00 2013-02-07 14:38:00   -20 mins\n632  2013-07-22 22:45:00 2013-07-22 03:38:00 2013-07-22 01:35:00   123 mins\n633  2013-12-20 15:40:00 2013-12-20 19:41:00 2013-12-20 19:18:00    23 mins\n634  2013-12-20 09:00:00 2013-12-20 12:01:00 2013-12-20 12:29:00   -28 mins\n635  2013-06-26 09:00:00 2013-06-26 12:19:00 2013-06-26 11:42:00    37 mins\n636  2013-09-20 15:30:00 2013-09-20 22:03:00 2013-09-20 18:45:00   198 mins\n637  2013-04-12 12:00:00 2013-04-12 14:50:00 2013-04-12 15:11:00   -21 mins\n638  2013-03-07 09:10:00 2013-03-07 12:20:00 2013-03-07 12:35:00   -15 mins\n639  2013-09-25 15:48:00 2013-09-25 19:59:00 2013-09-25 19:06:00    53 mins\n640  2013-12-11 12:00:00 2013-12-11 14:58:00 2013-12-11 15:10:00   -12 mins\n641  2013-11-21 17:45:00 2013-11-21 21:33:00 2013-11-21 21:04:00    29 mins\n642  2013-09-09 18:35:00 2013-09-09 22:19:00 2013-09-09 21:55:00    24 mins\n643  2013-01-23 17:00:00 2013-01-23 20:50:00 2013-01-23 20:49:00     1 mins\n644  2013-09-30 18:03:00 2013-09-30 21:13:00 2013-09-30 21:17:00    -4 mins\n645  2013-03-01 11:06:00 2013-03-01 14:00:00 2013-03-01 14:31:00   -31 mins\n646  2013-02-24 09:05:00 2013-02-24 11:59:00 2013-02-24 12:35:00   -36 mins\n647  2013-10-14 18:55:00 2013-10-14 22:15:00 2013-10-14 22:15:00     0 mins\n648  2013-05-02 18:30:00 2013-05-02 21:20:00 2013-05-02 22:00:00   -40 mins\n649  2013-08-28 10:30:00 2013-08-28 15:16:00 2013-08-28 13:35:00   101 mins\n650  2013-05-05 18:50:00 2013-05-05 23:50:00 2013-05-05 22:25:00    85 mins\n651  2013-10-05 08:30:00 2013-10-05 11:05:00 2013-10-05 11:30:00   -25 mins\n652  2013-08-10 07:15:00 2013-08-10 10:09:00 2013-08-10 10:10:00    -1 mins\n653  2013-05-28 13:00:00 2013-05-28 15:52:00 2013-05-28 15:55:00    -3 mins\n654  2013-12-09 15:45:00 2013-12-09 19:54:00 2013-12-09 19:20:00    34 mins\n655  2013-11-25 18:30:00 2013-11-25 21:35:00 2013-11-25 22:05:00   -30 mins\n656  2013-04-19 13:45:00 2013-04-19 16:39:00 2013-04-19 17:00:00   -21 mins\n657  2013-08-14 17:00:00 2013-08-14 20:51:00 2013-08-14 20:18:00    33 mins\n658  2013-05-08 20:01:00 2013-05-08 02:15:00 2013-05-08 23:20:00 -1265 mins\n659  2013-08-10 16:30:00 2013-08-10 20:05:00 2013-08-10 19:59:00     6 mins\n660  2013-07-26 18:00:00 2013-07-26 20:48:00 2013-07-26 21:02:00   -14 mins\n661  2013-01-03 12:21:00 2013-01-03 18:03:00 2013-01-03 15:55:00   128 mins\n662  2013-03-14 15:30:00 2013-03-14 19:39:00 2013-03-14 19:10:00    29 mins\n663  2013-08-12 08:53:00 2013-08-12 12:37:00 2013-08-12 12:12:00    25 mins\n664  2013-06-05 18:29:00 2013-06-05 21:36:00 2013-06-05 22:03:00   -27 mins\n665  2013-03-10 08:10:00 2013-03-10 11:10:00 2013-03-10 11:35:00   -25 mins\n666  2013-05-30 07:00:00 2013-05-30 10:20:00 2013-05-30 10:34:00   -14 mins\n667  2013-04-11 10:03:00 2013-04-11 13:26:00 2013-04-11 13:22:00     4 mins\n668  2013-07-18 11:25:00 2013-07-18 13:40:00 2013-07-18 14:14:00   -34 mins\n669  2013-01-17 07:47:00 2013-01-17 11:04:00 2013-01-17 11:26:00   -22 mins\n670  2013-09-01 18:50:00 2013-09-01 22:12:00 2013-09-01 22:10:00     2 mins\n671  2013-05-16 07:00:00 2013-05-16 09:35:00 2013-05-16 10:19:00   -44 mins\n672  2013-02-21 15:30:00 2013-02-21 19:16:00 2013-02-21 19:10:00     6 mins\n673  2013-04-05 16:30:00 2013-04-05 20:03:00 2013-04-05 20:15:00   -12 mins\n674  2013-03-01 18:00:00 2013-03-01 20:43:00 2013-03-01 21:36:00   -53 mins\n675  2013-04-22 19:10:00 2013-04-22 22:52:00 2013-04-22 22:40:00    12 mins\n676  2013-07-05 10:28:00 2013-07-05 13:16:00 2013-07-05 13:39:00   -23 mins\n677  2013-12-17 14:45:00 2013-12-17 18:30:00 2013-12-17 18:09:00    21 mins\n678  2013-05-10 14:00:00 2013-05-10 16:49:00 2013-05-10 17:30:00   -41 mins\n679  2013-05-21 17:29:00 2013-05-21 20:40:00 2013-05-21 21:10:00   -30 mins\n680  2013-07-10 18:15:00 2013-07-10 22:40:00 2013-07-10 21:35:00    65 mins\n681  2013-09-13 08:10:00 2013-09-13 10:48:00 2013-09-13 10:54:00    -6 mins\n682  2013-07-10 17:59:00 2013-07-10 23:27:00 2013-07-10 20:58:00   149 mins\n683  2013-09-14 09:59:00 2013-09-14 13:15:00 2013-09-14 13:14:00     1 mins\n684  2013-02-22 15:00:00 2013-02-22 18:15:00 2013-02-22 18:37:00   -22 mins\n685  2013-07-12 18:25:00 2013-07-12 22:24:00 2013-07-12 21:31:00    53 mins\n686  2013-07-20 15:30:00 2013-07-20 18:57:00 2013-07-20 18:46:00    11 mins\n687  2013-09-16 18:35:00 2013-09-16 22:20:00 2013-09-16 21:55:00    25 mins\n688  2013-09-16 20:25:00 2013-09-16 22:51:00 2013-09-16 23:28:00   -37 mins\n689  2013-02-01 13:20:00 2013-02-01 16:54:00 2013-02-01 16:50:00     4 mins\n690  2013-07-02 14:30:00 2013-07-02 17:20:00 2013-07-02 17:54:00   -34 mins\n691  2013-07-08 12:00:00 2013-07-08 16:04:00 2013-07-08 15:07:00    57 mins\n692  2013-01-06 06:00:00 2013-01-06 09:08:00 2013-01-06 09:27:00   -19 mins\n693  2013-05-25 18:50:00 2013-05-25 22:29:00 2013-05-25 22:25:00     4 mins\n694  2013-05-09 16:29:00 2013-05-09 20:16:00 2013-05-09 19:41:00    35 mins\n695  2013-11-12 16:50:00 2013-11-12 19:31:00 2013-11-12 20:02:00   -31 mins\n696  2013-09-27 17:10:00 2013-09-27 20:21:00 2013-09-27 20:33:00   -12 mins\n697  2013-03-11 16:30:00 2013-03-11 20:21:00 2013-03-11 20:15:00     6 mins\n698  2013-08-16 16:00:00 2013-08-16 18:57:00 2013-08-16 19:38:00   -41 mins\n699  2013-06-15 18:15:00 2013-06-15 21:41:00 2013-06-15 21:40:00     1 mins\n700  2013-02-16 17:30:00 2013-02-16 20:24:00 2013-02-16 20:46:00   -22 mins\n701  2013-07-31 08:40:00 2013-07-31 12:04:00 2013-07-31 11:43:00    21 mins\n702  2013-12-05 08:54:00 2013-12-05 13:21:00 2013-12-05 12:35:00    46 mins\n703  2013-10-23 17:29:00 2013-10-23 20:17:00 2013-10-23 21:05:00   -48 mins\n704  2013-02-19 15:45:00 2013-02-19 19:59:00 2013-02-19 19:10:00    49 mins\n705  2013-06-28 09:00:00 2013-06-28 12:24:00 2013-06-28 11:42:00    42 mins\n706  2013-02-06 17:15:00 2013-02-06 20:13:00 2013-02-06 20:40:00   -27 mins\n707  2013-07-23 19:10:00 2013-07-23 22:27:00 2013-07-23 22:06:00    21 mins\n708  2013-04-17 18:55:00 2013-04-17 22:24:00 2013-04-17 22:10:00    14 mins\n709  2013-09-27 13:55:00 2013-09-27 17:08:00 2013-09-27 17:17:00    -9 mins\n710  2013-12-16 18:30:00 2013-12-16 21:52:00 2013-12-16 22:05:00   -13 mins\n711  2013-02-03 21:35:00 2013-02-03 00:57:00 2013-02-03 00:50:00     7 mins\n712  2013-04-26 17:55:00 2013-04-26 21:01:00 2013-04-26 21:03:00    -2 mins\n713  2013-05-12 10:45:00 2013-05-12 13:28:00 2013-05-12 14:20:00   -52 mins\n714  2013-07-07 09:15:00 2013-07-07 11:54:00 2013-07-07 12:15:00   -21 mins\n715  2013-01-20 12:00:00 2013-01-20 14:57:00 2013-01-20 15:10:00   -13 mins\n716  2013-07-18 07:09:00 2013-07-18 09:27:00 2013-07-18 09:59:00   -32 mins\n717  2013-04-23 16:35:00 2013-04-23 19:46:00 2013-04-23 19:54:00    -8 mins\n718  2013-02-19 17:45:00 2013-02-19 21:30:00 2013-02-19 21:20:00    10 mins\n719  2013-11-24 13:57:00 2013-11-24 17:26:00 2013-11-24 17:28:00    -2 mins\n720  2013-06-19 20:30:00 2013-06-19 23:34:00 2013-06-19 23:56:00   -22 mins\n721  2013-01-16 15:30:00 2013-01-16 19:21:00 2013-01-16 19:10:00    11 mins\n722  2013-06-08 16:30:00 2013-06-08 20:03:00 2013-06-08 19:59:00     4 mins\n723  2013-11-04 10:30:00 2013-11-04 13:52:00 2013-11-04 13:25:00    27 mins\n724  2013-01-21 15:52:00 2013-01-21 18:59:00 2013-01-21 19:04:00    -5 mins\n725  2013-06-23 08:25:00 2013-06-23 11:39:00 2013-06-23 11:47:00    -8 mins\n726  2013-10-15 08:10:00 2013-10-15 11:10:00 2013-10-15 11:08:00     2 mins\n727  2013-07-01 11:02:00 2013-07-01 13:28:00 2013-07-01 13:41:00   -13 mins\n728  2013-08-06 07:15:00 2013-08-06 10:00:00 2013-08-06 10:10:00   -10 mins\n729  2013-06-02 08:33:00 2013-06-02 11:33:00 2013-06-02 11:39:00    -6 mins\n730  2013-04-11 18:04:00 2013-04-11 21:24:00 2013-04-11 21:45:00   -21 mins\n731  2013-08-03 12:08:00 2013-08-03 15:58:00 2013-08-03 14:52:00    66 mins\n732  2013-02-07 10:30:00 2013-02-07 13:53:00 2013-02-07 14:15:00   -22 mins\n733  2013-11-06 20:00:00 2013-11-06 23:25:00 2013-11-06 23:15:00    10 mins\n734  2013-11-06 09:00:00 2013-11-06 12:25:00 2013-11-06 12:15:00    10 mins\n735  2013-01-11 13:45:00 2013-01-11 16:57:00 2013-01-11 17:05:00    -8 mins\n736  2013-07-03 08:40:00 2013-07-03 12:03:00 2013-07-03 11:43:00    20 mins\n737  2013-06-06 10:00:00 2013-06-06 13:02:00 2013-06-06 13:29:00   -27 mins\n738  2013-09-27 13:00:00 2013-09-27 15:41:00 2013-09-27 15:55:00   -14 mins\n739  2013-01-30 13:20:00 2013-01-30 16:28:00 2013-01-30 16:50:00   -22 mins\n740  2013-07-29 16:59:00 2013-07-29 21:05:00 2013-07-29 20:12:00    53 mins\n741  2013-06-24 13:33:00 2013-06-24 17:38:00 2013-06-24 16:45:00    53 mins\n742  2013-11-21 09:00:00 2013-11-21 12:29:00 2013-11-21 12:35:00    -6 mins\n743  2013-04-23 20:29:00 2020-04-23 13:05:00 2020-04-23 13:04:00     1 mins\n744  2013-07-26 18:22:00 2013-07-26 21:47:00 2013-07-26 21:55:00    -8 mins\n745  2013-06-17 18:30:00 2013-06-17 22:30:00 2013-06-17 21:55:00    35 mins\n746  2013-06-30 17:30:00 2013-06-30 21:30:00 2013-06-30 21:09:00    21 mins\n747  2013-12-05 20:19:00 2013-12-05 00:14:00 2013-12-05 23:45:00 -1411 mins\n748  2013-06-05 19:00:00 2013-06-05 23:19:00 2013-06-05 22:51:00    28 mins\n749  2013-07-24 18:30:00 2013-07-24 22:23:00 2013-07-24 21:55:00    28 mins\n750  2013-01-22 07:15:00 2013-01-22 10:37:00 2013-01-22 10:40:00    -3 mins\n751  2013-12-03 08:40:00 2013-12-03 12:27:00 2013-12-03 11:55:00    32 mins\n752  2013-12-12 07:00:00 2013-12-12 10:00:00 2013-12-12 10:15:00   -15 mins\n753  2013-09-06 16:40:00 2013-09-06 18:47:00 2013-09-06 19:47:00   -60 mins\n754  2013-08-30 18:00:00 2013-08-30 20:20:00 2013-08-30 21:02:00   -42 mins\n755  2013-07-04 15:30:00 2013-07-04 18:07:00 2013-07-04 18:44:00   -37 mins\n756  2013-09-14 10:00:00 2013-09-14 13:00:00 2013-09-14 13:04:00    -4 mins\n757  2013-09-27 18:15:00 2013-09-27 21:41:00 2013-09-27 21:30:00    11 mins\n758  2013-05-23 17:29:00 2013-05-23 21:48:00 2013-05-23 21:10:00    38 mins\n759  2013-01-20 09:00:00 2013-01-20 13:56:00 2013-01-20 12:27:00    89 mins\n760  2013-04-16 16:30:00 2013-04-16 19:34:00 2013-04-16 19:47:00   -13 mins\n761  2013-12-11 14:29:00 2013-12-11 17:46:00 2013-12-11 17:56:00   -10 mins\n762  2013-12-24 17:30:00 2013-12-24 20:42:00 2013-12-24 21:07:00   -25 mins\n763  2013-08-08 20:29:00 2013-08-08 01:05:00 2013-08-08 23:33:00 -1348 mins\n764  2013-11-23 06:39:00 2013-11-23 10:18:00 2013-11-23 10:02:00    16 mins\n765  2013-05-31 14:00:00 2013-05-31 17:01:00 2013-05-31 17:30:00   -29 mins\n766  2013-03-01 07:45:00 2013-03-01 10:39:00 2013-03-01 11:25:00   -46 mins\n767  2013-11-08 18:45:00 2013-11-08 22:25:00 2013-11-08 22:10:00    15 mins\n768  2013-01-08 15:45:00 2013-01-08 18:51:00 2013-01-08 19:10:00   -19 mins\n769  2013-12-06 07:29:00 2013-12-06 10:58:00 2013-12-06 10:45:00    13 mins\n770  2013-08-15 06:30:00 2013-08-15 09:13:00 2013-08-15 09:23:00   -10 mins\n771  2013-03-02 12:00:00 2013-03-02 14:22:00 2013-03-02 15:10:00   -48 mins\n772  2013-09-10 08:29:00 2013-09-10 11:03:00 2013-09-10 11:22:00   -19 mins\n773  2013-12-28 15:30:00 2013-12-28 18:51:00 2013-12-28 19:03:00   -12 mins\n774  2013-09-10 13:45:00 2013-09-10 16:06:00 2013-09-10 16:50:00   -44 mins\n775  2013-06-24 07:30:00 2013-06-24 10:26:00 2013-06-24 10:45:00   -19 mins\n776  2013-12-15 13:00:00 2013-12-15 16:40:00 2013-12-15 16:36:00     4 mins\n777  2013-01-21 18:07:00 2013-01-21 20:58:00 2013-01-21 21:28:00   -30 mins\n778  2013-09-24 15:35:00 2013-09-24 19:09:00 2013-09-24 18:59:00    10 mins\n779  2013-06-16 16:22:00 2013-06-16 20:46:00 2013-06-16 19:20:00    86 mins\n780  2013-10-09 07:00:00 2013-10-09 10:04:00 2013-10-09 10:15:00   -11 mins\n781  2013-11-18 21:20:00 2013-11-18 00:47:00 2013-11-18 01:00:00   -13 mins\n782  2013-04-22 18:30:00 2013-04-22 22:12:00 2013-04-22 22:00:00    12 mins\n783  2013-06-16 07:30:00 2013-06-16 10:22:00 2013-06-16 10:25:00    -3 mins\n784  2013-02-27 13:20:00 2013-02-27 16:19:00 2013-02-27 16:50:00   -31 mins\n785  2013-03-06 19:49:00 2013-03-06 23:09:00 2013-03-06 23:21:00   -12 mins\n786  2013-03-22 13:20:00 2013-03-22 16:34:00 2013-03-22 16:28:00     6 mins\n787  2013-08-22 17:59:00 2013-08-22 21:07:00 2013-08-22 20:58:00     9 mins\n788  2013-10-27 17:00:00 2013-10-27 20:17:00 2013-10-27 20:18:00    -1 mins\n789  2013-09-14 07:30:00 2013-09-14 10:15:00 2013-09-14 10:45:00   -30 mins\n790  2013-10-04 08:30:00 2013-10-04 11:41:00 2013-10-04 11:22:00    19 mins\n791  2013-10-24 14:29:00 2013-10-24 17:15:00 2013-10-24 17:28:00   -13 mins\n792  2013-12-02 07:30:00 2013-12-02 10:46:00 2013-12-02 11:05:00   -19 mins\n793  2013-09-30 09:15:00 2013-09-30 11:42:00 2013-09-30 12:15:00   -33 mins\n794  2013-05-24 06:53:00 2013-05-24 09:35:00 2013-05-24 10:06:00   -31 mins\n795  2013-08-12 19:30:00 2013-08-12 23:22:00 2013-08-12 23:04:00    18 mins\n796  2013-03-07 06:38:00 2013-03-07 09:40:00 2013-03-07 09:51:00   -11 mins\n797  2013-01-30 17:15:00 2013-01-30 20:23:00 2013-01-30 20:40:00   -17 mins\n798  2013-10-17 18:50:00 2013-10-17 22:16:00 2013-10-17 22:25:00    -9 mins\n799  2013-04-10 15:45:00 2013-04-10 20:30:00 2013-04-10 19:10:00    80 mins\n800  2013-10-18 13:45:00 2013-10-18 16:48:00 2013-10-18 16:50:00    -2 mins\n801  2013-06-29 15:30:00 2013-06-29 18:24:00 2013-06-29 18:48:00   -24 mins\n802  2013-10-20 07:23:00 2013-10-20 10:18:00 2013-10-20 10:25:00    -7 mins\n803  2013-08-22 17:29:00 2013-08-22 21:42:00 2013-08-22 20:49:00    53 mins\n804  2013-08-30 08:30:00 2013-08-30 11:11:00 2013-08-30 11:30:00   -19 mins\n805  2013-08-03 14:36:00 2013-08-03 17:29:00 2013-08-03 17:21:00     8 mins\n806  2013-10-16 18:50:00 2013-10-16 22:25:00 2013-10-16 22:25:00     0 mins\n807  2013-08-01 17:35:00 2013-08-01 22:32:00 2013-08-01 20:47:00   105 mins\n808  2013-03-15 16:55:00 2013-03-15 20:08:00 2013-03-15 20:30:00   -22 mins\n809  2013-12-26 18:29:00 2013-12-26 21:27:00 2013-12-26 21:56:00   -29 mins\n810  2013-09-06 16:55:00 2013-09-06 19:35:00 2013-09-06 20:05:00   -30 mins\n811  2013-01-12 16:55:00 2013-01-12 20:14:00 2013-01-12 20:10:00     4 mins\n812  2013-01-09 17:53:00 2013-01-09 20:44:00 2013-01-09 21:05:00   -21 mins\n813  2013-06-21 11:26:00 2013-06-21 13:56:00 2013-06-21 14:15:00   -19 mins\n814  2013-01-07 10:31:00 2013-01-07 13:35:00 2013-01-07 14:03:00   -28 mins\n815  2013-02-28 15:45:00 2013-02-28 18:29:00 2013-02-28 19:10:00   -41 mins\n816  2013-10-31 08:34:00 2013-10-31 12:00:00 2013-10-31 11:56:00     4 mins\n817  2013-11-02 08:36:00 2013-11-02 11:29:00 2013-11-02 11:35:00    -6 mins\n818  2013-09-26 06:30:00 2013-09-26 09:40:00 2013-09-26 09:46:00    -6 mins\n819  2013-08-24 19:00:00 2013-08-24 22:00:00 2013-08-24 22:40:00   -40 mins\n820  2013-03-31 15:45:00 2013-03-31 19:19:00 2013-03-31 19:04:00    15 mins\n821  2013-01-15 18:19:00 2013-01-15 21:35:00 2013-01-15 21:38:00    -3 mins\n822  2013-08-14 14:59:00 2013-08-14 19:31:00 2013-08-14 17:56:00    95 mins\n823  2013-05-13 14:00:00 2013-05-13 16:54:00 2013-05-13 17:30:00   -36 mins\n824  2013-06-10 17:00:00 2013-06-10 19:59:00 2013-06-10 20:25:00   -26 mins\n825  2013-03-21 17:15:00 2013-03-21 20:26:00 2013-03-21 20:37:00   -11 mins\n826  2013-08-25 10:30:00 2013-08-25 13:19:00 2013-08-25 13:40:00   -21 mins\n827  2013-11-20 06:39:00 2013-11-20 09:32:00 2013-11-20 09:55:00   -23 mins\n828  2013-07-04 09:15:00 2013-07-04 12:08:00 2013-07-04 12:10:00    -2 mins\n829  2013-07-27 18:00:00 2013-07-27 21:19:00 2013-07-27 21:30:00   -11 mins\n830  2013-11-05 18:15:00 2013-11-05 21:42:00 2013-11-05 21:46:00    -4 mins\n831  2013-05-17 18:05:00 2013-05-17 21:10:00 2013-05-17 21:28:00   -18 mins\n832  2013-08-08 20:59:00 2013-08-08 01:11:00 2013-08-08 23:58:00 -1367 mins\n833  2013-08-24 19:15:00 2013-08-24 21:39:00 2013-08-24 22:30:00   -51 mins\n834  2013-11-13 10:30:00 2013-11-13 12:45:00 2013-11-13 13:25:00   -40 mins\n835  2013-11-23 15:22:00 2013-11-23 19:02:00 2013-11-23 18:55:00     7 mins\n836  2013-02-21 07:00:00 2013-02-21 10:17:00 2013-02-21 10:25:00    -8 mins\n837  2013-04-23 09:29:00 2013-04-23 13:14:00 2013-04-23 13:08:00     6 mins\n838  2013-01-11 17:10:00 2013-01-11 20:42:00 2013-01-11 20:36:00     6 mins\n839  2013-02-07 17:25:00 2013-02-07 21:02:00 2013-02-07 20:41:00    21 mins\n840  2013-05-01 16:32:00 2013-05-01 19:25:00 2013-05-01 19:56:00   -31 mins\n841  2013-01-06 10:30:00 2013-01-06 13:28:00 2013-01-06 13:55:00   -27 mins\n842  2013-05-07 16:40:00 2013-05-07 19:22:00 2013-05-07 19:56:00   -34 mins\n843  2013-04-14 17:00:00 2013-04-14 22:26:00 2013-04-14 20:50:00    96 mins\n844  2013-02-02 21:35:00 2013-02-02 00:32:00 2013-02-02 00:50:00   -18 mins\n845  2013-09-23 14:30:00 2013-09-23 17:29:00 2013-09-23 17:34:00    -5 mins\n846  2013-04-26 18:00:00 2013-04-26 21:14:00 2013-04-26 21:40:00   -26 mins\n847  2013-04-06 07:00:00 2013-04-06 10:25:00 2013-04-06 10:25:00     0 mins\n848  2013-05-26 16:15:00 2013-05-26 19:41:00 2013-05-26 19:19:00    22 mins\n849  2013-12-09 14:00:00 2013-12-09 19:18:00 2013-12-09 17:10:00   128 mins\n850  2013-03-17 08:30:00 2013-03-17 11:36:00 2013-03-17 11:50:00   -14 mins\n851  2013-12-01 15:30:00 2013-12-01 18:54:00 2013-12-01 19:01:00    -7 mins\n852  2013-05-02 13:45:00 2013-05-02 16:31:00 2013-05-02 17:00:00   -29 mins\n853  2013-06-29 13:45:00 2013-06-29 16:11:00 2013-06-29 16:45:00   -34 mins\n854  2013-10-25 07:00:00 2013-10-25 10:11:00 2013-10-25 10:15:00    -4 mins\n855  2013-06-03 19:50:00 2013-06-03 23:28:00 2013-06-03 23:25:00     3 mins\n856  2013-04-08 06:00:00 2013-04-08 09:37:00 2013-04-08 09:25:00    12 mins\n857  2013-09-18 15:20:00 2013-09-18 18:08:00 2013-09-18 18:14:00    -6 mins\n858  2013-04-29 12:00:00 2013-04-29 15:08:00 2013-04-29 15:25:00   -17 mins\n859  2013-08-21 18:22:00 2013-08-21 21:57:00 2013-08-21 21:55:00     2 mins\n860  2013-07-07 11:20:00 2013-07-07 13:42:00 2013-07-07 14:09:00   -27 mins\n861  2013-08-14 07:40:00 2013-08-14 10:48:00 2013-08-14 10:55:00    -7 mins\n862  2013-06-06 15:45:00 2013-06-06 18:48:00 2013-06-06 19:10:00   -22 mins\n863  2013-02-16 12:00:00 2013-02-16 14:40:00 2013-02-16 15:10:00   -30 mins\n864  2013-12-05 07:00:00 2013-12-05 11:01:00 2013-12-05 10:40:00    21 mins\n865  2013-11-22 10:30:00 2013-11-22 14:01:00 2013-11-22 13:55:00     6 mins\n866  2013-10-26 06:00:00 2013-10-26 09:06:00 2013-10-26 09:23:00   -17 mins\n867  2013-09-25 06:00:00 2013-09-25 09:00:00 2013-09-25 09:23:00   -23 mins\n868  2013-09-02 12:00:00 2013-09-02 14:50:00 2013-09-02 14:55:00    -5 mins\n869  2013-03-27 17:30:00 2013-03-27 20:36:00 2013-03-27 20:46:00   -10 mins\n870  2013-07-01 15:38:00 2013-07-01 19:13:00 2013-07-01 19:05:00     8 mins\n871  2013-10-30 17:30:00 2013-10-30 20:52:00 2013-10-30 21:04:00   -12 mins\n872  2013-07-21 10:30:00 2013-07-21 13:12:00 2013-07-21 13:25:00   -13 mins\n873  2013-03-27 16:55:00 2013-03-27 20:18:00 2013-03-27 20:30:00   -12 mins\n874  2013-08-21 07:55:00 2013-08-21 11:20:00 2013-08-21 11:15:00     5 mins\n875  2013-01-05 07:30:00 2013-01-05 11:27:00 2013-01-05 11:15:00    12 mins\n876  2013-10-17 18:20:00 2013-10-17 21:17:00 2013-10-17 21:24:00    -7 mins\n877  2013-06-13 17:05:00 2013-06-13 21:04:00 2013-06-13 20:04:00    60 mins\n878  2013-04-25 09:30:00 2013-04-25 13:12:00 2013-04-25 13:09:00     3 mins\n879  2013-09-12 17:49:00 2013-09-12 23:53:00 2013-09-12 20:52:00   181 mins\n880  2013-05-15 12:14:00 2013-05-15 15:04:00 2013-05-15 15:20:00   -16 mins\n881  2013-08-12 17:35:00 2013-08-12 20:36:00 2013-08-12 20:30:00     6 mins\n882  2013-11-11 18:18:00 2013-11-11 21:13:00 2013-11-11 21:31:00   -18 mins\n883  2013-02-13 20:29:00 2013-02-13 23:23:00 2013-02-13 23:33:00   -10 mins\n884  2013-04-16 17:00:00 2013-04-16 21:47:00 2013-04-16 20:25:00    82 mins\n885  2013-04-27 08:03:00 2013-04-27 10:35:00 2013-04-27 11:24:00   -49 mins\n886  2013-02-05 16:55:00 2013-02-05 19:54:00 2013-02-05 20:14:00   -20 mins\n887  2013-06-26 20:49:00 2013-06-26 00:36:00 2013-06-26 23:48:00 -1392 mins\n888  2013-03-07 20:05:00 2013-03-07 23:49:00 2013-03-07 23:30:00    19 mins\n889  2013-12-23 09:20:00 2013-12-23 12:25:00 2013-12-23 12:45:00   -20 mins\n890  2013-05-05 09:17:00 2013-05-05 12:03:00 2013-05-05 12:57:00   -54 mins\n891  2013-02-14 16:45:00 2013-02-14 19:58:00 2013-02-14 20:05:00    -7 mins\n892  2013-06-06 17:27:00 2013-06-06 20:39:00 2013-06-06 20:24:00    15 mins\n893  2013-01-18 09:20:00 2013-01-18 12:25:00 2013-01-18 12:33:00    -8 mins\n894  2013-11-24 17:59:00 2013-11-24 20:36:00 2013-11-24 21:23:00   -47 mins\n895  2013-09-13 18:45:00 2013-09-13 21:42:00 2013-09-13 22:10:00   -28 mins\n896  2013-03-02 10:30:00 2013-03-02 16:04:00 2013-03-02 13:55:00   129 mins\n897  2013-04-14 08:15:00 2013-04-14 11:30:00 2013-04-14 11:19:00    11 mins\n898  2013-02-28 07:30:00 2013-02-28 10:15:00 2013-02-28 11:00:00   -45 mins\n899  2013-05-23 07:00:00 2013-05-23 10:22:00 2013-05-23 10:34:00   -12 mins\n900  2013-06-16 17:35:00 2013-06-16 20:38:00 2013-06-16 20:30:00     8 mins\n901  2013-11-04 17:00:00 2013-11-04 20:38:00 2013-11-04 20:17:00    21 mins\n902  2013-09-05 15:29:00 2013-09-05 18:24:00 2013-09-05 18:46:00   -22 mins\n903  2013-07-20 07:15:00 2013-07-20 09:49:00 2013-07-20 10:10:00   -21 mins\n904  2013-09-19 06:30:00 2013-09-19 09:19:00 2013-09-19 09:30:00   -11 mins\n905  2013-10-04 18:35:00 2013-10-04 22:11:00 2013-10-04 21:38:00    33 mins\n906  2013-10-25 18:50:00 2013-10-25 21:56:00 2013-10-25 22:00:00    -4 mins\n907  2013-06-26 15:29:00 2013-06-26 19:34:00 2013-06-26 18:56:00    38 mins\n908  2013-11-23 09:05:00 2013-11-23 12:22:00 2013-11-23 12:20:00     2 mins\n909  2013-05-27 10:30:00 2013-05-27 13:50:00 2013-05-27 13:45:00     5 mins\n910  2013-10-30 16:35:00 2013-10-30 20:17:00 2013-10-30 19:52:00    25 mins\n911  2013-11-01 07:30:00 2013-11-01 10:54:00 2013-11-01 11:00:00    -6 mins\n912  2013-07-26 16:55:00 2013-07-26 19:59:00 2013-07-26 19:40:00    19 mins\n913  2013-11-20 14:59:00 2013-11-20 18:00:00 2013-11-20 18:19:00   -19 mins\n914  2013-06-23 20:25:00 2013-06-23 00:33:00 2013-06-23 23:24:00 -1371 mins\n915  2013-11-23 16:30:00 2013-11-23 19:36:00 2013-11-23 19:43:00    -7 mins\n916  2013-07-25 18:24:00 2013-07-25 22:12:00 2013-07-25 21:29:00    43 mins\n917  2013-04-27 12:00:00 2013-04-27 14:58:00 2013-04-27 15:05:00    -7 mins\n918  2013-07-12 17:59:00 2013-07-12 21:07:00 2013-07-12 20:58:00     9 mins\n919  2013-10-24 18:35:00 2013-10-24 22:38:00 2013-10-24 21:38:00    60 mins\n920  2013-02-18 16:45:00 2013-02-18 19:52:00 2013-02-18 20:05:00   -13 mins\n921  2013-03-06 07:00:00 2013-03-06 09:57:00 2013-03-06 10:29:00   -32 mins\n922  2013-10-17 16:42:00 2013-10-17 20:16:00 2013-10-17 20:00:00    16 mins\n923  2013-10-30 18:03:00 2013-10-30 21:58:00 2013-10-30 21:17:00    41 mins\n924  2013-05-16 09:29:00 2013-05-16 12:36:00 2013-05-16 12:41:00    -5 mins\n925  2013-04-02 07:00:00 2013-04-02 10:19:00 2013-04-02 10:31:00   -12 mins\n926  2013-01-11 10:30:00 2013-01-11 13:31:00 2013-01-11 13:40:00    -9 mins\n927  2013-03-18 17:45:00 2013-03-18 21:23:00 2013-03-18 21:20:00     3 mins\n928  2013-11-28 18:30:00 2013-11-28 21:38:00 2013-11-28 22:05:00   -27 mins\n929  2013-12-18 09:20:00 2013-12-18 13:32:00 2013-12-18 12:45:00    47 mins\n930  2013-06-06 13:00:00 2013-06-06 16:04:00 2013-06-06 15:55:00     9 mins\n931  2013-04-18 15:40:00 2013-04-18 19:53:00 2013-04-18 18:55:00    58 mins\n932  2013-02-26 19:13:00 2013-02-26 21:43:00 2013-02-26 22:45:00   -62 mins\n933  2013-09-16 17:25:00 2013-09-16 20:40:00 2013-09-16 20:16:00    24 mins\n934  2013-03-21 07:15:00 2013-03-21 10:35:00 2013-03-21 10:37:00    -2 mins\n935  2013-05-30 17:32:00 2013-05-30 21:48:00 2013-05-30 21:14:00    34 mins\n936  2013-10-22 12:19:00 2013-10-22 15:10:00 2013-10-22 15:19:00    -9 mins\n937  2013-08-21 09:20:00 2013-08-21 11:44:00 2013-08-21 12:20:00   -36 mins\n938  2013-12-03 07:30:00 2013-12-03 10:56:00 2013-12-03 10:50:00     6 mins\n939  2013-08-30 17:49:00 2013-08-30 21:13:00 2013-08-30 20:52:00    21 mins\n940  2013-04-23 16:30:00 2013-04-23 19:27:00 2013-04-23 19:47:00   -20 mins\n941  2013-11-02 16:30:00 2013-11-02 20:07:00 2013-11-02 20:10:00    -3 mins\n942  2013-02-19 13:45:00 2013-02-19 16:51:00 2013-02-19 17:05:00   -14 mins\n943  2013-01-25 14:57:00 2013-01-25 18:51:00 2013-01-25 18:23:00    28 mins\n944  2013-02-02 08:30:00 2013-02-02 11:33:00 2013-02-02 11:54:00   -21 mins\n945  2013-08-31 20:59:00 2013-08-31 23:47:00 2013-08-31 23:58:00   -11 mins\n946  2013-11-01 13:11:00 2013-11-01 17:38:00 2013-11-01 16:24:00    74 mins\n947  2013-06-02 18:30:00 2013-06-02 23:48:00 2013-06-02 22:00:00   108 mins\n948  2013-04-10 19:10:00 2013-04-10 00:26:00 2013-04-10 22:40:00 -1334 mins\n949  2013-10-04 12:00:00 2013-10-04 14:41:00 2013-10-04 14:55:00   -14 mins\n950  2013-02-11 07:00:00 2013-02-11 10:34:00 2013-02-11 10:45:00   -11 mins\n951  2013-02-11 17:25:00 2013-02-11 00:11:00 2013-02-11 20:40:00 -1229 mins\n952  2013-06-27 10:30:00 2013-06-27 14:12:00 2013-06-27 13:49:00    23 mins\n953  2013-01-07 15:40:00 2013-01-07 18:59:00 2013-01-07 19:00:00    -1 mins\n954  2013-10-31 07:00:00 2013-10-31 09:37:00 2013-10-31 10:15:00   -38 mins\n955  2013-12-11 09:00:00 2013-12-11 12:54:00 2013-12-11 12:27:00    27 mins\n956  2013-07-08 18:55:00 2013-07-08 22:39:00 2013-07-08 22:05:00    34 mins\n957  2013-03-20 06:10:00 2013-03-20 08:59:00 2013-03-20 09:25:00   -26 mins\n958  2013-12-28 11:29:00 2013-12-28 14:21:00 2013-12-28 14:46:00   -25 mins\n959  2013-03-22 19:00:00 2013-03-22 23:16:00 2013-03-22 22:40:00    36 mins\n960  2013-03-27 18:29:00 2013-03-27 21:28:00 2013-03-27 21:47:00   -19 mins\n961  2013-09-25 16:30:00 2013-09-25 19:53:00 2013-09-25 20:00:00    -7 mins\n962  2013-08-08 05:59:00 2013-08-08 09:27:00 2013-08-08 09:02:00    25 mins\n963  2013-12-12 18:38:00 2013-12-12 22:38:00 2013-12-12 22:14:00    24 mins\n964  2013-09-19 18:30:00 2013-09-19 23:05:00 2013-09-19 21:57:00    68 mins\n965  2013-06-26 16:30:00 2013-06-26 22:28:00 2013-06-26 19:59:00   149 mins\n966  2013-08-02 12:00:00 2013-08-02 15:24:00 2013-08-02 15:07:00    17 mins\n967  2013-08-09 15:40:00 2013-08-09 20:37:00 2013-08-09 18:58:00    99 mins\n968  2013-07-20 18:24:00 2013-07-20 01:56:00 2013-07-20 21:29:00 -1173 mins\n969  2013-04-11 20:25:00 2013-04-11 23:36:00 2013-04-11 23:33:00     3 mins\n970  2013-07-29 06:19:00 2013-07-29 09:09:00 2013-07-29 09:04:00     5 mins\n971  2013-06-18 13:00:00 2013-06-18 17:33:00 2013-06-18 15:55:00    98 mins\n972  2013-10-21 12:45:00 2013-10-21 15:50:00 2013-10-21 16:00:00   -10 mins\n973  2013-04-11 10:30:00 2013-04-11 13:53:00 2013-04-11 14:05:00   -12 mins\n974  2013-01-19 16:55:00 2013-01-19 19:46:00 2013-01-19 20:15:00   -29 mins\n975  2013-07-14 08:59:00 2013-07-14 11:15:00 2013-07-14 11:33:00   -18 mins\n976  2013-08-22 07:00:00 2013-08-22 10:11:00 2013-08-22 10:14:00    -3 mins\n977  2013-05-20 07:00:00 2013-05-20 09:44:00 2013-05-20 10:11:00   -27 mins\n978  2013-04-16 18:55:00 2013-04-16 22:32:00 2013-04-16 22:40:00    -8 mins\n979  2013-07-01 06:30:00 2013-07-01 09:19:00 2013-07-01 09:30:00   -11 mins\n980  2013-12-31 19:01:00 2013-12-31 22:58:00 2013-12-31 22:51:00     7 mins\n981  2013-07-03 16:30:00 2013-07-03 19:28:00 2013-07-03 19:39:00   -11 mins\n982  2013-07-15 16:55:00 2013-07-15 19:16:00 2013-07-15 19:40:00   -24 mins\n983  2013-11-08 09:50:00 2013-11-08 12:47:00 2013-11-08 13:10:00   -23 mins\n984  2013-06-30 17:24:00 2013-06-30 20:31:00 2013-06-30 20:51:00   -20 mins\n985  2013-01-05 06:33:00 2013-01-05 09:46:00 2013-01-05 10:04:00   -18 mins\n986  2013-10-18 09:15:00 2013-10-18 12:22:00 2013-10-18 12:30:00    -8 mins\n987  2013-11-24 07:00:00 2013-11-24 10:10:00 2013-11-24 10:25:00   -15 mins\n988  2013-08-02 18:30:00 2013-08-02 21:26:00 2013-08-02 21:45:00   -19 mins\n989  2013-11-11 13:25:00 2013-11-11 16:21:00 2013-11-11 16:43:00   -22 mins\n990  2013-05-29 07:00:00 2013-05-29 09:35:00 2013-05-29 10:19:00   -44 mins\n991  2013-03-24 14:45:00 2013-03-24 17:50:00 2013-03-24 18:19:00   -29 mins\n992  2013-05-19 18:00:00 2013-05-19 23:14:00 2013-05-19 21:40:00    94 mins\n993  2013-08-25 09:00:00 2013-08-25 11:01:00 2013-08-25 11:56:00   -55 mins\n994  2013-10-30 20:00:00 2013-10-30 23:34:00 2013-10-30 23:15:00    19 mins\n995  2013-04-14 13:18:00 2013-04-14 16:12:00 2013-04-14 16:19:00    -7 mins\n996  2013-12-27 10:30:00 2013-12-27 13:23:00 2013-12-27 14:05:00   -42 mins\n997  2013-04-09 16:55:00 2013-04-09 19:51:00 2013-04-09 20:30:00   -39 mins\n998  2013-01-24 09:20:00 2013-01-24 12:42:00 2013-01-24 12:33:00     9 mins\n999  2013-06-21 17:27:00 2013-06-21 20:03:00 2013-06-21 20:24:00   -21 mins\n1000 2013-05-13 17:15:00 2013-05-13 19:28:00 2013-05-13 20:12:00   -44 mins\n1001 2013-11-23 08:57:00 2013-11-23 12:50:00 2013-11-23 12:10:00    40 mins\n1002 2013-04-13 07:10:00 2013-04-13 10:06:00 2013-04-13 10:05:00     1 mins\n1003 2013-11-25 14:15:00 2013-11-25 17:12:00 2013-11-25 17:36:00   -24 mins\n1004 2013-02-03 17:51:00 2013-02-03 20:57:00 2013-02-03 21:03:00    -6 mins\n1005 2013-05-10 08:33:00 2013-05-10 11:17:00 2013-05-10 11:39:00   -22 mins\n1006 2013-10-18 16:25:00 2013-10-18 19:43:00 2013-10-18 19:32:00    11 mins\n1007 2013-04-23 13:55:00 2013-04-23 17:20:00 2013-04-23 17:10:00    10 mins\n1008 2013-09-04 09:55:00 2013-09-04 12:52:00 2013-09-04 13:10:00   -18 mins\n1009 2013-06-08 18:35:00 2013-06-08 21:55:00 2013-06-08 22:13:00   -18 mins\n1010 2013-05-21 17:32:00 2013-05-21 21:00:00 2013-05-21 21:14:00   -14 mins\n1011 2013-02-17 15:30:00 2013-02-17 19:00:00 2013-02-17 19:10:00   -10 mins\n1012 2013-12-18 07:30:00 2013-12-18 10:58:00 2013-12-18 11:10:00   -12 mins\n1013 2013-10-09 16:45:00 2013-10-09 19:27:00 2013-10-09 20:15:00   -48 mins\n1014 2013-12-16 11:12:00 2013-12-16 14:22:00 2013-12-16 14:39:00   -17 mins\n1015 2013-02-28 07:30:00 2013-02-28 10:31:00 2013-02-28 11:15:00   -44 mins\n1016 2013-08-31 13:00:00 2013-08-31 15:28:00 2013-08-31 16:00:00   -32 mins\n1017 2013-08-21 06:58:00 2013-08-21 09:38:00 2013-08-21 09:36:00     2 mins\n1018 2013-08-25 17:30:00 2013-08-25 20:37:00 2013-08-25 21:10:00   -33 mins\n1019 2013-04-30 19:58:00 2013-04-30 22:45:00 2013-04-30 23:15:00   -30 mins\n1020 2013-01-26 09:00:00 2013-01-26 12:21:00 2013-01-26 12:27:00    -6 mins\n1021 2013-04-20 17:29:00 2013-04-20 20:48:00 2013-04-20 21:05:00   -17 mins\n1022 2013-12-22 21:35:00 2013-12-22 01:39:00 2013-12-22 00:55:00    44 mins\n1023 2013-09-26 13:00:00 2013-09-26 15:47:00 2013-09-26 15:55:00    -8 mins\n1024 2013-04-15 07:09:00 2013-04-15 10:15:00 2013-04-15 10:09:00     6 mins\n1025 2013-12-29 18:29:00 2013-12-29 21:32:00 2013-12-29 21:58:00   -26 mins\n1026 2013-04-22 10:30:00 2013-04-22 13:42:00 2013-04-22 14:05:00   -23 mins\n1027 2013-11-08 18:18:00 2013-11-08 21:28:00 2013-11-08 21:31:00    -3 mins\n1028 2013-03-01 14:25:00 2013-03-01 17:28:00 2013-03-01 17:50:00   -22 mins\n1029 2013-04-30 13:39:00 2013-04-30 16:34:00 2013-04-30 16:55:00   -21 mins\n1030 2013-08-30 11:25:00 2013-08-30 13:28:00 2013-08-30 14:25:00   -57 mins\n     late_scaled delayed\n1    -0.02870312   FALSE\n2    -0.02845042    TRUE\n3    -0.02883669   FALSE\n4    -0.02871395   FALSE\n5    -0.02865980   FALSE\n6    -0.02874644   FALSE\n7    -0.02884391   FALSE\n8    -0.02873922   FALSE\n9    -0.02867063   FALSE\n10   -0.02864175   FALSE\n11   -0.02873922   FALSE\n12   -0.02871034   FALSE\n13   -0.02881142   FALSE\n14   -0.02867424   FALSE\n15   -0.02851901    TRUE\n16   -0.02863814   FALSE\n17   -0.02824826    TRUE\n18   -0.02883669   FALSE\n19   -0.02858038      NA\n20   -0.02873922   FALSE\n21   -0.02872117   FALSE\n22   -0.02874283   FALSE\n23   -0.02864175   FALSE\n24   -0.02868146   FALSE\n25   -0.02864897   FALSE\n26   -0.02869590   FALSE\n27   -0.02873200   FALSE\n28   -0.02874283   FALSE\n29   -0.02886196   FALSE\n30   -0.02874644   FALSE\n31   -0.02861287   FALSE\n32   -0.02884752   FALSE\n33   -0.02876088   FALSE\n34   -0.02880420   FALSE\n35   -0.02873200   FALSE\n36   -0.02842154    TRUE\n37   -0.02870312   FALSE\n38   -0.02867424   FALSE\n39   -0.02813996    TRUE\n40   -0.02844320    TRUE\n41   -0.02877893   FALSE\n42   -0.02874644   FALSE\n43   -0.02870312   FALSE\n44   -0.02856233    TRUE\n45   -0.02872478   FALSE\n46   -0.02849735    TRUE\n47   -0.02874644   FALSE\n48   -0.02869590   FALSE\n49   -0.02863814   FALSE\n50   -0.02877893   FALSE\n51   -0.02825548    TRUE\n52   -0.02869229   FALSE\n53   -0.02856955    TRUE\n54   -0.02855511    TRUE\n55   -0.02879337   FALSE\n56   -0.02881503   FALSE\n57   -0.02870312   FALSE\n58   -0.02859843   FALSE\n59   -0.02873561   FALSE\n60   -0.02879698   FALSE\n61   -0.02876810   FALSE\n62   -0.02872117   FALSE\n63   -0.02878976   FALSE\n64   -0.02884391   FALSE\n65   -0.02835656    TRUE\n66   -0.02873200   FALSE\n67   -0.02870673   FALSE\n68   -0.02881142   FALSE\n69   -0.02876810   FALSE\n70   -0.02877532   FALSE\n71   -0.02862009   FALSE\n72   -0.02865619   FALSE\n73   -0.02870673   FALSE\n74   -0.02874283   FALSE\n75   -0.02876449   FALSE\n76   -0.02876449   FALSE\n77   -0.03334559   FALSE\n78   -0.02876449   FALSE\n79   -0.02867424   FALSE\n80   -0.02862731   FALSE\n81   -0.02875366   FALSE\n82   -0.02867785   FALSE\n83   -0.02871034   FALSE\n84   -0.02876449   FALSE\n85   -0.02880781   FALSE\n86   -0.02873922   FALSE\n87   -0.02878254   FALSE\n88   -0.02864536   FALSE\n89   -0.02877893   FALSE\n90   -0.02874644   FALSE\n91   -0.02868507   FALSE\n92   -0.02867424   FALSE\n93   -0.02873200   FALSE\n94   -0.02864536   FALSE\n95   -0.02866341   FALSE\n96   -0.02882947   FALSE\n97   -0.02847208    TRUE\n98   -0.02889445   FALSE\n99   -0.02878254   FALSE\n100  -0.02877532   FALSE\n101  -0.02877532   FALSE\n102  -0.02873922   FALSE\n103  -0.02882947   FALSE\n104  -0.02889084   FALSE\n105  -0.02861648   FALSE\n106  -0.02873200   FALSE\n107  -0.02872117   FALSE\n108  -0.02870312   FALSE\n109  -0.02868146   FALSE\n110  -0.02872839   FALSE\n111  -0.02891250   FALSE\n112  -0.02873200   FALSE\n113  -0.02873922   FALSE\n114  -0.02867785   FALSE\n115  -0.02863453   FALSE\n116  -0.02865258   FALSE\n117  -0.02868868   FALSE\n118  -0.02363466    TRUE\n119  -0.02850096    TRUE\n120  -0.02882225   FALSE\n121  -0.02876088   FALSE\n122  -0.02881142   FALSE\n123  -0.02865980   FALSE\n124  -0.02866341   FALSE\n125  -0.02886557   FALSE\n126  -0.02868146   FALSE\n127  -0.02879698   FALSE\n128  -0.02875366   FALSE\n129  -0.02871034   FALSE\n130  -0.02855150    TRUE\n131  -0.02869229   FALSE\n132  -0.03228064   FALSE\n133  -0.03302791   FALSE\n134  -0.02876449   FALSE\n135  -0.02875005   FALSE\n136  -0.02866341   FALSE\n137  -0.02869229   FALSE\n138  -0.02873200   FALSE\n139  -0.02870673   FALSE\n140  -0.02874644   FALSE\n141  -0.02877532   FALSE\n142  -0.02882225   FALSE\n143  -0.02867785   FALSE\n144  -0.02865258   FALSE\n145  -0.03381850   FALSE\n146  -0.02868868   FALSE\n147  -0.02881503   FALSE\n148  -0.02872839   FALSE\n149  -0.02871034   FALSE\n150  -0.02876449   FALSE\n151  -0.02874644   FALSE\n152  -0.02876449   FALSE\n153  -0.02870312   FALSE\n154  -0.02875366   FALSE\n155  -0.02871034   FALSE\n156  -0.02880059   FALSE\n157  -0.02860926   FALSE\n158  -0.02875005   FALSE\n159  -0.02876449   FALSE\n160  -0.02875366   FALSE\n161  -0.02856955    TRUE\n162  -0.02864175   FALSE\n163  -0.02877171   FALSE\n164  -0.02875005   FALSE\n165  -0.02885835   FALSE\n166  -0.02882947   FALSE\n167  -0.02882947   FALSE\n168  -0.02881142   FALSE\n169  -0.02856955    TRUE\n170  -0.02870673   FALSE\n171  -0.02879337   FALSE\n172  -0.02872117   FALSE\n173  -0.02869590   FALSE\n174  -0.02836739    TRUE\n175  -0.02846847    TRUE\n176  -0.02864175   FALSE\n177  -0.02839627    TRUE\n178  -0.02877532   FALSE\n179  -0.02857316    TRUE\n180  -0.02845403    TRUE\n181  -0.02868507   FALSE\n182  -0.03367049   FALSE\n183  -0.02880420   FALSE\n184  -0.02864536   FALSE\n185  -0.02877532   FALSE\n186  -0.02872117   FALSE\n187  -0.02868868   FALSE\n188  -0.03342501   FALSE\n189  -0.02856233    TRUE\n190  -0.02869590   FALSE\n191  -0.02873922   FALSE\n192  -0.02877532   FALSE\n193  -0.02885835   FALSE\n194  -0.02881142   FALSE\n195  -0.02862370   FALSE\n196  -0.02869229   FALSE\n197  -0.02880781   FALSE\n198  -0.02885474   FALSE\n199  -0.02879698   FALSE\n200  -0.02855150    TRUE\n201  -0.02870673   FALSE\n202  -0.02865980   FALSE\n203  -0.02877893   FALSE\n204  -0.02788365    TRUE\n205  -0.02878615   FALSE\n206  -0.02878254   FALSE\n207  -0.02867785   FALSE\n208  -0.02867785   FALSE\n209  -0.02882586   FALSE\n210  -0.02885474   FALSE\n211  -0.02891611   FALSE\n212  -0.02863092   FALSE\n213  -0.02855150    TRUE\n214  -0.02877893   FALSE\n215  -0.02862731   FALSE\n216  -0.02875005   FALSE\n217  -0.02865619   FALSE\n218  -0.02877171   FALSE\n219  -0.02858038      NA\n220  -0.02875005   FALSE\n221  -0.02884030   FALSE\n222  -0.02846125    TRUE\n223  -0.02878254   FALSE\n224  -0.02879337   FALSE\n225  -0.02886557   FALSE\n226  -0.02858760   FALSE\n227  -0.02877893   FALSE\n228  -0.02855872    TRUE\n229  -0.02858038      NA\n230  -0.02876810   FALSE\n231  -0.02880781   FALSE\n232  -0.02866702   FALSE\n233  -0.02865619   FALSE\n234  -0.03363800   FALSE\n235  -0.02881864   FALSE\n236  -0.02868146   FALSE\n237  -0.02866341   FALSE\n238  -0.02872117   FALSE\n239  -0.02866341   FALSE\n240  -0.02876088   FALSE\n241  -0.02869590   FALSE\n242  -0.02876449   FALSE\n243  -0.02872839   FALSE\n244  -0.02859482   FALSE\n245  -0.03384377   FALSE\n246  -0.02872839   FALSE\n247  -0.02849735    TRUE\n248  -0.02867424   FALSE\n249  -0.02876449   FALSE\n250  -0.02876810   FALSE\n251  -0.02862731   FALSE\n252  -0.02874283   FALSE\n253  -0.02873561   FALSE\n254  -0.02877532   FALSE\n255  -0.02882586   FALSE\n256  -0.02839627    TRUE\n257  -0.02869951   FALSE\n258  -0.02869229   FALSE\n259  -0.02868507   FALSE\n260  -0.02873561   FALSE\n261  -0.02882586   FALSE\n262  -0.02878976   FALSE\n263  -0.02883308   FALSE\n264  -0.02876810   FALSE\n265  -0.03334559   FALSE\n266  -0.02875005   FALSE\n267  -0.02873922   FALSE\n268  -0.02867785   FALSE\n269  -0.02885835   FALSE\n270  -0.02874644   FALSE\n271  -0.02883669   FALSE\n272  -0.02879337   FALSE\n273  -0.02857677    TRUE\n274  -0.02845042    TRUE\n275  -0.03339613   FALSE\n276  -0.02873561   FALSE\n277  -0.02871756   FALSE\n278  -0.02869590   FALSE\n279  -0.02867785   FALSE\n280  -0.02870312   FALSE\n281  -0.02866702   FALSE\n282  -0.02874283   FALSE\n283  -0.02871756   FALSE\n284  -0.02891250   FALSE\n285  -0.02870673   FALSE\n286  -0.02858038      NA\n287  -0.02878976   FALSE\n288  -0.02850818    TRUE\n289  -0.02852262    TRUE\n290  -0.02858399   FALSE\n291  -0.02883669   FALSE\n292  -0.02872117   FALSE\n293  -0.02879337   FALSE\n294  -0.02870312   FALSE\n295  -0.02868868   FALSE\n296  -0.02874283   FALSE\n297  -0.02887279   FALSE\n298  -0.02876088   FALSE\n299  -0.02870312   FALSE\n300  -0.02848291    TRUE\n301  -0.02859843   FALSE\n302  -0.02872478   FALSE\n303  -0.02872117   FALSE\n304  -0.02858760   FALSE\n305  -0.02873922   FALSE\n306  -0.02877893   FALSE\n307  -0.02866702   FALSE\n308  -0.02859121   FALSE\n309  -0.03338169   FALSE\n310  -0.02861648   FALSE\n311  -0.02869951   FALSE\n312  -0.02888001   FALSE\n313  -0.02874644   FALSE\n314  -0.02863092   FALSE\n315  -0.02862731   FALSE\n316  -0.02869951   FALSE\n317  -0.02861648   FALSE\n318  -0.02880781   FALSE\n319  -0.02874644   FALSE\n320  -0.02869590   FALSE\n321  -0.02868507   FALSE\n322  -0.02878615   FALSE\n323  -0.02869590   FALSE\n324  -0.02859843   FALSE\n325  -0.02869229   FALSE\n326  -0.02866702   FALSE\n327  -0.02869229   FALSE\n328  -0.02871395   FALSE\n329  -0.02868507   FALSE\n330  -0.02872478   FALSE\n331  -0.02850457    TRUE\n332  -0.02869590   FALSE\n333  -0.02862370   FALSE\n334  -0.02847569    TRUE\n335  -0.02879698   FALSE\n336  -0.02852623    TRUE\n337  -0.02871756   FALSE\n338  -0.02818689    TRUE\n339  -0.02876449   FALSE\n340  -0.02855872    TRUE\n341  -0.02835295    TRUE\n342  -0.02875727   FALSE\n343  -0.02869951   FALSE\n344  -0.02878615   FALSE\n345  -0.02875727   FALSE\n346  -0.02823021    TRUE\n347  -0.02876449   FALSE\n348  -0.02881503   FALSE\n349  -0.02881503   FALSE\n350  -0.02854428    TRUE\n351  -0.02874644   FALSE\n352  -0.02864175   FALSE\n353  -0.02858399   FALSE\n354  -0.02864536   FALSE\n355  -0.02875005   FALSE\n356  -0.02871034   FALSE\n357  -0.02867063   FALSE\n358  -0.02886196   FALSE\n359  -0.02877532   FALSE\n360  -0.02881503   FALSE\n361  -0.02859843   FALSE\n362  -0.02871395   FALSE\n363  -0.02859482   FALSE\n364  -0.02868507   FALSE\n365  -0.02862009   FALSE\n366  -0.02874644   FALSE\n367  -0.02874644   FALSE\n368  -0.02873561   FALSE\n369  -0.02877171   FALSE\n370  -0.02868507   FALSE\n371  -0.02871034   FALSE\n372  -0.02871395   FALSE\n373  -0.02883308   FALSE\n374  -0.02865619   FALSE\n375  -0.02873200   FALSE\n376  -0.02867063   FALSE\n377  -0.02871034   FALSE\n378  -0.02884030   FALSE\n379  -0.02877893   FALSE\n380  -0.02862370   FALSE\n381  -0.02870673   FALSE\n382  -0.02879698   FALSE\n383  -0.02882586   FALSE\n384  -0.02865980   FALSE\n385  -0.02859843   FALSE\n386  -0.02861287   FALSE\n387  -0.02883308   FALSE\n388  -0.02873561   FALSE\n389  -0.02882225   FALSE\n390  -0.02865619   FALSE\n391  -0.02868507   FALSE\n392  -0.02878254   FALSE\n393  -0.02865980   FALSE\n394  -0.02879698   FALSE\n395  -0.02888362   FALSE\n396  -0.02883308   FALSE\n397  -0.02872839   FALSE\n398  -0.02873922   FALSE\n399  -0.02877171   FALSE\n400  -0.02875727   FALSE\n401  -0.02869590   FALSE\n402  -0.02873200   FALSE\n403  -0.02871756   FALSE\n404  -0.02871756   FALSE\n405  -0.02859482   FALSE\n406  -0.02871756   FALSE\n407  -0.02875727   FALSE\n408  -0.02881864   FALSE\n409  -0.02884752   FALSE\n410  -0.02875727   FALSE\n411  -0.02881503   FALSE\n412  -0.02874283   FALSE\n413  -0.02871395   FALSE\n414  -0.03282575   FALSE\n415  -0.02858399   FALSE\n416  -0.02874283   FALSE\n417  -0.02876810   FALSE\n418  -0.02874283   FALSE\n419  -0.02868146   FALSE\n420  -0.02875727   FALSE\n421  -0.02868146   FALSE\n422  -0.02873561   FALSE\n423  -0.02870673   FALSE\n424  -0.02881864   FALSE\n425  -0.02873922   FALSE\n426  -0.02875366   FALSE\n427  -0.02860565   FALSE\n428  -0.02874644   FALSE\n429  -0.02871034   FALSE\n430  -0.02871756   FALSE\n431  -0.02862370   FALSE\n432  -0.02883308   FALSE\n433  -0.02882947   FALSE\n434  -0.02859482   FALSE\n435  -0.02865619   FALSE\n436  -0.02876088   FALSE\n437  -0.02877532   FALSE\n438  -0.02875366   FALSE\n439  -0.02863814   FALSE\n440  -0.02879698   FALSE\n441  -0.02878976   FALSE\n442  -0.02873922   FALSE\n443  -0.02879698   FALSE\n444  -0.02867063   FALSE\n445  -0.02870312   FALSE\n446  -0.02858038      NA\n447  -0.02861648   FALSE\n448  -0.02867785   FALSE\n449  -0.02866341   FALSE\n450  -0.02873561   FALSE\n451  -0.02878254   FALSE\n452  -0.02871756   FALSE\n453  -0.02868507   FALSE\n454  -0.02867063   FALSE\n455  -0.02858760   FALSE\n456  -0.02856233    TRUE\n457  -0.02859121   FALSE\n458  -0.02880059   FALSE\n459  -0.02872117   FALSE\n460  -0.02871395   FALSE\n461  -0.02862009   FALSE\n462  -0.02866702   FALSE\n463  -0.03335642   FALSE\n464  -0.02853706    TRUE\n465  -0.02875727   FALSE\n466  -0.02869229   FALSE\n467  -0.02871395   FALSE\n468  -0.02877893   FALSE\n469  -0.02878615   FALSE\n470  -0.02872839   FALSE\n471  -0.02874283   FALSE\n472  -0.02858399   FALSE\n473  -0.02356607    TRUE\n474  -0.02874283   FALSE\n475  -0.02880059   FALSE\n476  -0.02860565   FALSE\n477  -0.02877532   FALSE\n478  -0.02872839   FALSE\n479  -0.02877893   FALSE\n480  -0.02865619   FALSE\n481  -0.02867785   FALSE\n482  -0.02865980   FALSE\n483  -0.02872478   FALSE\n484  -0.02880059   FALSE\n485  -0.02876810   FALSE\n486  -0.02878615   FALSE\n487  -0.02872478   FALSE\n488  -0.02874283   FALSE\n489  -0.02854067    TRUE\n490  -0.02886918   FALSE\n491  -0.02872117   FALSE\n492  -0.02872839   FALSE\n493  -0.02869590   FALSE\n494  -0.02869590   FALSE\n495  -0.02882947   FALSE\n496  -0.02867785   FALSE\n497  -0.02868146   FALSE\n498  -0.02873561   FALSE\n499  -0.02860204   FALSE\n500  -0.02871034   FALSE\n501  -0.02876088   FALSE\n502  -0.02858760   FALSE\n503  -0.02872117   FALSE\n504  -0.02882225   FALSE\n505  -0.02885113   FALSE\n506  -0.02868868   FALSE\n507  -0.02839988    TRUE\n508  -0.02888723   FALSE\n509  -0.02879698   FALSE\n510  -0.02867063   FALSE\n511  -0.02846125    TRUE\n512  -0.02873200   FALSE\n513  -0.02858760   FALSE\n514  -0.02869951   FALSE\n515  -0.02868146   FALSE\n516  -0.02867785   FALSE\n517  -0.02879698   FALSE\n518  -0.02876810   FALSE\n519  -0.02871034   FALSE\n520  -0.02878615   FALSE\n521  -0.02881503   FALSE\n522  -0.02874283   FALSE\n523  -0.02880420   FALSE\n524  -0.02876449   FALSE\n525  -0.02868868   FALSE\n526  -0.02843598    TRUE\n527  -0.02883308   FALSE\n528  -0.02867785   FALSE\n529  -0.02871756   FALSE\n530  -0.02867424   FALSE\n531  -0.02875366   FALSE\n532  -0.02872478   FALSE\n533  -0.02873561   FALSE\n534  -0.02861287   FALSE\n535  -0.02873922   FALSE\n536  -0.02871034   FALSE\n537  -0.02876088   FALSE\n538  -0.02863814   FALSE\n539  -0.02870673   FALSE\n540  -0.02872117   FALSE\n541  -0.02875005   FALSE\n542  -0.02872478   FALSE\n543  -0.02870312   FALSE\n544  -0.02877532   FALSE\n545  -0.02858760   FALSE\n546  -0.02859482   FALSE\n547  -0.02869229   FALSE\n548  -0.02871395   FALSE\n549  -0.02880420   FALSE\n550  -0.02877532   FALSE\n551  -0.02855511    TRUE\n552  -0.02873200   FALSE\n553  -0.02872117   FALSE\n554  -0.02872117   FALSE\n555  -0.02876449   FALSE\n556  -0.02873200   FALSE\n557  -0.02868507   FALSE\n558  -0.02875727   FALSE\n559  -0.02861648   FALSE\n560  -0.03305679   FALSE\n561  -0.02874283   FALSE\n562  -0.02871395   FALSE\n563  -0.02878976   FALSE\n564  -0.02364549    TRUE\n565  -0.02867424   FALSE\n566  -0.02864175   FALSE\n567  -0.02878976   FALSE\n568  -0.02854428    TRUE\n569  -0.02867063   FALSE\n570  -0.02864536   FALSE\n571  -0.02855511    TRUE\n572  -0.03310733   FALSE\n573  -0.02876449   FALSE\n574  -0.02875366   FALSE\n575  -0.02878976   FALSE\n576  -0.02870312   FALSE\n577  -0.02844320    TRUE\n578  -0.02848291    TRUE\n579  -0.02875727   FALSE\n580  -0.02871756   FALSE\n581  -0.02874644   FALSE\n582  -0.02866341   FALSE\n583  -0.02874644   FALSE\n584  -0.02844320    TRUE\n585  -0.02886918   FALSE\n586  -0.02859482   FALSE\n587  -0.02360939    TRUE\n588  -0.02886557   FALSE\n589  -0.02878976   FALSE\n590  -0.02863453   FALSE\n591  -0.02869229   FALSE\n592  -0.02868146   FALSE\n593  -0.02827353    TRUE\n594  -0.02874644   FALSE\n595  -0.02880420   FALSE\n596  -0.02877171   FALSE\n597  -0.03359829   FALSE\n598  -0.02855511    TRUE\n599  -0.02871756   FALSE\n600  -0.02881864   FALSE\n601  -0.02870673   FALSE\n602  -0.02878254   FALSE\n603  -0.02878615   FALSE\n604  -0.02881503   FALSE\n605  -0.02870673   FALSE\n606  -0.02872478   FALSE\n607  -0.02359856    TRUE\n608  -0.02875366   FALSE\n609  -0.02865619   FALSE\n610  -0.02869229   FALSE\n611  -0.02870673   FALSE\n612  -0.02868146   FALSE\n613  -0.02859843   FALSE\n614  -0.02864175   FALSE\n615  -0.02861648   FALSE\n616  -0.02863453   FALSE\n617  -0.02886196   FALSE\n618  -0.02880420   FALSE\n619  -0.02848652    TRUE\n620  -0.02870673   FALSE\n621  -0.02813635    TRUE\n622  -0.02872478   FALSE\n623  -0.02871756   FALSE\n624  -0.02882586   FALSE\n625  -0.02876810   FALSE\n626  -0.02874283   FALSE\n627  -0.02873561   FALSE\n628  -0.02869229   FALSE\n629  -0.02884030   FALSE\n630  -0.02868507   FALSE\n631  -0.02876088   FALSE\n632  -0.02824465    TRUE\n633  -0.02860565   FALSE\n634  -0.02878976   FALSE\n635  -0.02855511    TRUE\n636  -0.02797390    TRUE\n637  -0.02876449   FALSE\n638  -0.02874283   FALSE\n639  -0.02849735    TRUE\n640  -0.02873200   FALSE\n641  -0.02858399   FALSE\n642  -0.02860204   FALSE\n643  -0.02868507   FALSE\n644  -0.02870312   FALSE\n645  -0.02880059   FALSE\n646  -0.02881864   FALSE\n647  -0.02868868   FALSE\n648  -0.02883308   FALSE\n649  -0.02832407    TRUE\n650  -0.02838183    TRUE\n651  -0.02877893   FALSE\n652  -0.02869229   FALSE\n653  -0.02869951   FALSE\n654  -0.02856594    TRUE\n655  -0.02879698   FALSE\n656  -0.02876449   FALSE\n657  -0.02856955    TRUE\n658  -0.03325534   FALSE\n659  -0.02866702   FALSE\n660  -0.02873922   FALSE\n661  -0.02822660    TRUE\n662  -0.02858399   FALSE\n663  -0.02859843   FALSE\n664  -0.02878615   FALSE\n665  -0.02877893   FALSE\n666  -0.02873922   FALSE\n667  -0.02867424   FALSE\n668  -0.02881142   FALSE\n669  -0.02876810   FALSE\n670  -0.02868146   FALSE\n671  -0.02884752   FALSE\n672  -0.02866702   FALSE\n673  -0.02873200   FALSE\n674  -0.02888001   FALSE\n675  -0.02864536   FALSE\n676  -0.02877171   FALSE\n677  -0.02861287   FALSE\n678  -0.02883669   FALSE\n679  -0.02879698   FALSE\n680  -0.02845403    TRUE\n681  -0.02871034   FALSE\n682  -0.02815079    TRUE\n683  -0.02868507   FALSE\n684  -0.02876810   FALSE\n685  -0.02849735    TRUE\n686  -0.02864897   FALSE\n687  -0.02859843   FALSE\n688  -0.02882225   FALSE\n689  -0.02867424   FALSE\n690  -0.02881142   FALSE\n691  -0.02848291    TRUE\n692  -0.02875727   FALSE\n693  -0.02867424   FALSE\n694  -0.02856233    TRUE\n695  -0.02880059   FALSE\n696  -0.02873200   FALSE\n697  -0.02866702   FALSE\n698  -0.02883669   FALSE\n699  -0.02868507   FALSE\n700  -0.02876810   FALSE\n701  -0.02861287   FALSE\n702  -0.02852262    TRUE\n703  -0.02886196   FALSE\n704  -0.02851179    TRUE\n705  -0.02853706    TRUE\n706  -0.02878615   FALSE\n707  -0.02861287   FALSE\n708  -0.02863814   FALSE\n709  -0.02872117   FALSE\n710  -0.02873561   FALSE\n711  -0.02866341   FALSE\n712  -0.02869590   FALSE\n713  -0.02887640   FALSE\n714  -0.02876449   FALSE\n715  -0.02873561   FALSE\n716  -0.02880420   FALSE\n717  -0.02871756   FALSE\n718  -0.02865258   FALSE\n719  -0.02869590   FALSE\n720  -0.02876810   FALSE\n721  -0.02864897   FALSE\n722  -0.02867424   FALSE\n723  -0.02859121   FALSE\n724  -0.02870673   FALSE\n725  -0.02871756   FALSE\n726  -0.02868146   FALSE\n727  -0.02873561   FALSE\n728  -0.02872478   FALSE\n729  -0.02871034   FALSE\n730  -0.02876449   FALSE\n731  -0.02845042    TRUE\n732  -0.02876810   FALSE\n733  -0.02865258   FALSE\n734  -0.02865258   FALSE\n735  -0.02871756   FALSE\n736  -0.02861648   FALSE\n737  -0.02878615   FALSE\n738  -0.02873922   FALSE\n739  -0.02876810   FALSE\n740  -0.02849735    TRUE\n741  -0.02849735    TRUE\n742  -0.02871034   FALSE\n743  -0.02868507   FALSE\n744  -0.02871756   FALSE\n745  -0.02856233    TRUE\n746  -0.02861287   FALSE\n747  -0.03378240   FALSE\n748  -0.02858760   FALSE\n749  -0.02858760   FALSE\n750  -0.02869951   FALSE\n751  -0.02857316    TRUE\n752  -0.02874283   FALSE\n753  -0.02890528   FALSE\n754  -0.02884030   FALSE\n755  -0.02882225   FALSE\n756  -0.02870312   FALSE\n757  -0.02864897   FALSE\n758  -0.02855150    TRUE\n759  -0.02836739    TRUE\n760  -0.02873561   FALSE\n761  -0.02872478   FALSE\n762  -0.02877893   FALSE\n763  -0.03355497   FALSE\n764  -0.02863092   FALSE\n765  -0.02879337   FALSE\n766  -0.02885474   FALSE\n767  -0.02863453   FALSE\n768  -0.02875727   FALSE\n769  -0.02864175   FALSE\n770  -0.02872478   FALSE\n771  -0.02886196   FALSE\n772  -0.02875727   FALSE\n773  -0.02873200   FALSE\n774  -0.02884752   FALSE\n775  -0.02875727   FALSE\n776  -0.02867424   FALSE\n777  -0.02879698   FALSE\n778  -0.02865258   FALSE\n779  -0.02837822    TRUE\n780  -0.02872839   FALSE\n781  -0.02873561   FALSE\n782  -0.02864536   FALSE\n783  -0.02869951   FALSE\n784  -0.02880059   FALSE\n785  -0.02873200   FALSE\n786  -0.02866702   FALSE\n787  -0.02865619   FALSE\n788  -0.02869229   FALSE\n789  -0.02879698   FALSE\n790  -0.02862009   FALSE\n791  -0.02873561   FALSE\n792  -0.02875727   FALSE\n793  -0.02880781   FALSE\n794  -0.02880059   FALSE\n795  -0.02862370   FALSE\n796  -0.02872839   FALSE\n797  -0.02875005   FALSE\n798  -0.02872117   FALSE\n799  -0.02839988    TRUE\n800  -0.02869590   FALSE\n801  -0.02877532   FALSE\n802  -0.02871395   FALSE\n803  -0.02849735    TRUE\n804  -0.02875727   FALSE\n805  -0.02865980   FALSE\n806  -0.02868868   FALSE\n807  -0.02830963    TRUE\n808  -0.02876810   FALSE\n809  -0.02879337   FALSE\n810  -0.02879698   FALSE\n811  -0.02867424   FALSE\n812  -0.02876449   FALSE\n813  -0.02875727   FALSE\n814  -0.02878976   FALSE\n815  -0.02883669   FALSE\n816  -0.02867424   FALSE\n817  -0.02871034   FALSE\n818  -0.02871034   FALSE\n819  -0.02883308   FALSE\n820  -0.02863453   FALSE\n821  -0.02869951   FALSE\n822  -0.02834573    TRUE\n823  -0.02881864   FALSE\n824  -0.02878254   FALSE\n825  -0.02872839   FALSE\n826  -0.02876449   FALSE\n827  -0.02877171   FALSE\n828  -0.02869590   FALSE\n829  -0.02872839   FALSE\n830  -0.02870312   FALSE\n831  -0.02875366   FALSE\n832  -0.03362356   FALSE\n833  -0.02887279   FALSE\n834  -0.02883308   FALSE\n835  -0.02866341   FALSE\n836  -0.02871756   FALSE\n837  -0.02866702   FALSE\n838  -0.02866702   FALSE\n839  -0.02861287   FALSE\n840  -0.02880059   FALSE\n841  -0.02878615   FALSE\n842  -0.02881142   FALSE\n843  -0.02834212    TRUE\n844  -0.02875366   FALSE\n845  -0.02870673   FALSE\n846  -0.02878254   FALSE\n847  -0.02868868   FALSE\n848  -0.02860926   FALSE\n849  -0.02822660    TRUE\n850  -0.02873922   FALSE\n851  -0.02871395   FALSE\n852  -0.02879337   FALSE\n853  -0.02881142   FALSE\n854  -0.02870312   FALSE\n855  -0.02867785   FALSE\n856  -0.02864536   FALSE\n857  -0.02871034   FALSE\n858  -0.02875005   FALSE\n859  -0.02868146   FALSE\n860  -0.02878615   FALSE\n861  -0.02871395   FALSE\n862  -0.02876810   FALSE\n863  -0.02879698   FALSE\n864  -0.02861287   FALSE\n865  -0.02866702   FALSE\n866  -0.02875005   FALSE\n867  -0.02877171   FALSE\n868  -0.02870673   FALSE\n869  -0.02872478   FALSE\n870  -0.02865980   FALSE\n871  -0.02873200   FALSE\n872  -0.02873561   FALSE\n873  -0.02873200   FALSE\n874  -0.02867063   FALSE\n875  -0.02864536   FALSE\n876  -0.02871395   FALSE\n877  -0.02847208    TRUE\n878  -0.02867785   FALSE\n879  -0.02803527    TRUE\n880  -0.02874644   FALSE\n881  -0.02866702   FALSE\n882  -0.02875366   FALSE\n883  -0.02872478   FALSE\n884  -0.02839266    TRUE\n885  -0.02886557   FALSE\n886  -0.02876088   FALSE\n887  -0.03371381   FALSE\n888  -0.02862009   FALSE\n889  -0.02876088   FALSE\n890  -0.02888362   FALSE\n891  -0.02871395   FALSE\n892  -0.02863453   FALSE\n893  -0.02871756   FALSE\n894  -0.02885835   FALSE\n895  -0.02878976   FALSE\n896  -0.02822299    TRUE\n897  -0.02864897   FALSE\n898  -0.02885113   FALSE\n899  -0.02873200   FALSE\n900  -0.02865980   FALSE\n901  -0.02861287   FALSE\n902  -0.02876810   FALSE\n903  -0.02876449   FALSE\n904  -0.02872839   FALSE\n905  -0.02856955    TRUE\n906  -0.02870312   FALSE\n907  -0.02855150    TRUE\n908  -0.02868146   FALSE\n909  -0.02867063   FALSE\n910  -0.02859843   FALSE\n911  -0.02871034   FALSE\n912  -0.02862009   FALSE\n913  -0.02875727   FALSE\n914  -0.03363800   FALSE\n915  -0.02871395   FALSE\n916  -0.02853345    TRUE\n917  -0.02871395   FALSE\n918  -0.02865619   FALSE\n919  -0.02847208    TRUE\n920  -0.02873561   FALSE\n921  -0.02880420   FALSE\n922  -0.02863092   FALSE\n923  -0.02854067    TRUE\n924  -0.02870673   FALSE\n925  -0.02873200   FALSE\n926  -0.02872117   FALSE\n927  -0.02867785   FALSE\n928  -0.02878615   FALSE\n929  -0.02851901    TRUE\n930  -0.02865619   FALSE\n931  -0.02847930    TRUE\n932  -0.02891250   FALSE\n933  -0.02860204   FALSE\n934  -0.02869590   FALSE\n935  -0.02856594    TRUE\n936  -0.02872117   FALSE\n937  -0.02881864   FALSE\n938  -0.02866702   FALSE\n939  -0.02861287   FALSE\n940  -0.02876088   FALSE\n941  -0.02869951   FALSE\n942  -0.02873922   FALSE\n943  -0.02858760   FALSE\n944  -0.02876449   FALSE\n945  -0.02872839   FALSE\n946  -0.02842154    TRUE\n947  -0.02829880    TRUE\n948  -0.03350443   FALSE\n949  -0.02873922   FALSE\n950  -0.02872839   FALSE\n951  -0.03312538   FALSE\n952  -0.02860565   FALSE\n953  -0.02869229   FALSE\n954  -0.02882586   FALSE\n955  -0.02859121   FALSE\n956  -0.02856594    TRUE\n957  -0.02878254   FALSE\n958  -0.02877893   FALSE\n959  -0.02855872    TRUE\n960  -0.02875727   FALSE\n961  -0.02871395   FALSE\n962  -0.02859843   FALSE\n963  -0.02860204   FALSE\n964  -0.02844320    TRUE\n965  -0.02815079    TRUE\n966  -0.02862731   FALSE\n967  -0.02833129    TRUE\n968  -0.03292322   FALSE\n969  -0.02867785   FALSE\n970  -0.02867063   FALSE\n971  -0.02833490    TRUE\n972  -0.02872478   FALSE\n973  -0.02873200   FALSE\n974  -0.02879337   FALSE\n975  -0.02875366   FALSE\n976  -0.02869951   FALSE\n977  -0.02878615   FALSE\n978  -0.02871756   FALSE\n979  -0.02872839   FALSE\n980  -0.02866341   FALSE\n981  -0.02872839   FALSE\n982  -0.02877532   FALSE\n983  -0.02877171   FALSE\n984  -0.02876088   FALSE\n985  -0.02875366   FALSE\n986  -0.02871756   FALSE\n987  -0.02874283   FALSE\n988  -0.02875727   FALSE\n989  -0.02876810   FALSE\n990  -0.02884752   FALSE\n991  -0.02879337   FALSE\n992  -0.02834934    TRUE\n993  -0.02888723   FALSE\n994  -0.02862009   FALSE\n995  -0.02871395   FALSE\n996  -0.02884030   FALSE\n997  -0.02882947   FALSE\n998  -0.02865619   FALSE\n999  -0.02876449   FALSE\n1000 -0.02884752   FALSE\n1001 -0.02854428    TRUE\n1002 -0.02868507   FALSE\n1003 -0.02877532   FALSE\n1004 -0.02871034   FALSE\n1005 -0.02876810   FALSE\n1006 -0.02864897   FALSE\n1007 -0.02865258   FALSE\n1008 -0.02875366   FALSE\n1009 -0.02875366   FALSE\n1010 -0.02873922   FALSE\n1011 -0.02872478   FALSE\n1012 -0.02873200   FALSE\n1013 -0.02886196   FALSE\n1014 -0.02875005   FALSE\n1015 -0.02884752   FALSE\n1016 -0.02880420   FALSE\n1017 -0.02868146   FALSE\n1018 -0.02880781   FALSE\n1019 -0.02879698   FALSE\n1020 -0.02871034   FALSE\n1021 -0.02875005   FALSE\n1022 -0.02852984    TRUE\n1023 -0.02871756   FALSE\n1024 -0.02866702   FALSE\n1025 -0.02878254   FALSE\n1026 -0.02877171   FALSE\n1027 -0.02869951   FALSE\n1028 -0.02876810   FALSE\n1029 -0.02876449   FALSE\n1030 -0.02889445   FALSE"
  },
  {
    "objectID": "assignments/solutions/assignment4-solved.html",
    "href": "assignments/solutions/assignment4-solved.html",
    "title": "Hausaufgabe 4: Umgang mit Fragebogendaten",
    "section": "",
    "text": "Aufgabe 1 [1 Punkt]\nErstellt wie immer als Erstes einen Chunk mit den notwendigen Packages. Ladet auch die Datei dataset_srl_challenges_wrangled.csv. Ihr findet sie im Moodle. Dort sind die berechneten Subskalen aus der Sitzung schon enthalten.\n\nlibrary(tidyverse)\n\ndataset &lt;- read.csv(\"dataset_srl_challenges_wrangled.csv\")\n\n\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")\n\n\n\nAufgabe 2 [2 Punkte]\nDa ihr in der Seminarsitzung nicht selbst die Gelegenheit hattet, den Mediansplit und das Interaktionsdiagramm zu erstellen, geben wir euch hier noch mal Gelegenheit dazu!\nDiesmal interessieren der Zusammenhang von zwei Subskalen der Gewissenhaftigkeit, gh_fleiss und gh_ordnungsliebe und außerdem wie sich der Zusammenhang je nach Alter (dmAge) verhält.\n\nErstellt eine neue Variable, in der ihr die Probanden in “younger” und “older” einteilt, je nachdem ob ihr Alter geringer/gleich oder höher als der Alters-Median ist\nErstellt einen Scatterplot mit Regressionsgerade(n) für den Zusammenhang von Fleiß und Ordnungsliebe.\nSplittet den Plot in zwei Farben, je nach Ausprägung der neuen Altersvariable.\n\n\ndataset$age.med &lt;- ifelse(dataset$dmAge &lt;= median(dataset$dmAge, na.rm=T), \"younger\", \"older\")\n\ndataset %&gt;% \n  ggplot(aes(gh_fleiss, gh_ordnungsliebe, color=age.med))+\n    geom_jitter()+\n    geom_smooth(method=\"lm\", se=F)+\n    theme_minimal()\n\n\n\nAufgabe 3 [3 Punkte]\nMittlerweile habt ihr gelernt, wie ihr mit group_by() und summarise() Mittelwerte für einzelne Gruppen berechnet, und wie ihr über pivot_longer() Daten so aufbereitet, dass sie für etwaige Plots besser geeginet sind. Nun sollt ihr selbst ein Plot erstellen - und zwar nicht irgendeins, sondern ihr sollt folgendes Plot reproduzieren:\n\n\n\n\n\nDen Datensatz dazu haben wir ja bereits in der letzten Seminarstunde kennengelernt (dataset_srl_challenges.csv). Die Farben müssen natürlich nicht die gleichen sein - lasst euch also gerne etwas einfallen.\n\ndataset %&gt;% \n  select(dmLivingSit, starts_with(\"pres_\")) %&gt;% \n  group_by(dmLivingSit) %&gt;% \n  summarise(across(pres_umfeld:pres_material, mean),n=n()) %&gt;% \n  filter(n&gt;1) %&gt;% \n  tidyr::pivot_longer(pres_umfeld:pres_material) %&gt;% \n  ggplot(aes(y=name,x=value))+\n           geom_col(aes(fill=name),color=\"#2b2b2b\")+\n           theme_classic()+\n           facet_wrap(dmLivingSit ~ .)+\n           scale_fill_manual(values=scales::seq_gradient_pal(\"#c7a9a3\", \"#efcd9c\", \"Lab\")(seq(0,1,length.out=5)))+\n  ylab(\"SRL Problembereich\")+\n  labs(fill=\"SRL Problembereich\")\n\n\n\nAufgabe 4 [3 Punkte]\nSchaut euch den folgenden Code an und überlegt, was er macht und wie man ihn optimieren könnte. Ergänzt im Anschluss, wie ihr das gleiche Ergebnis auf “optimierte” Art und Weise erzielen könntet.\nHinweis: Es gibt mindestens drei Funktionen/Schreibweisen, die ihr kennengelernt habt, die euch hier helfen können.\n\nspalten &lt;- c(\"hsf1_VVW01\", \"hsf1_VSL01\", \"hsf1_KIZ01\", \"hsf1_RAB01\", \"hsf1_VUL01\", \"hsf1_UA02\",  \"hsf1_MIW01\", \"hsf1_MSW01\", \"hsf1_TTL02\", \"hsf1_PU02\",  \"hsf1_RRB03\", \"hsf1_TTK01\", \"hsf1_MPR03\", \"hsf1_A02\", \"hsf1_MLM01\", \"hsf1_TTF01\", \"hsf1_RFL01\", \"hsf1_UVG02\", \"hsf1_MWL02\", \"hsf1_MNL02\", \"hsf1_PMK01\", \"hsf1_PU03\",  \"hsf1_RNE01\", \"hsf1_ZSP03\")\n  \nspalten.rekodiert &lt;- ifelse(dataset[,spalten] == 1, 5,\n                      ifelse(dataset[,spalten] == 2, 4,\n                             ifelse(dataset[,spalten] == 3, 3,\n                                    ifelse(dataset[,spalten] == 4, 2,\n                                           ifelse(dataset[,spalten] == 5, 1, NA)))))\n\ndataset.new &lt;- cbind(dataset, spalten.rekodiert)\n\n\ndataset.new &lt;- dataset %&gt;% \n  mutate(across(starts_with(\"hsf1\"), function(x) case_when(x == 1 ~ 5,\n                                                          x == 2 ~ 4,\n                                                          x == 3 ~ 3,\n                                                          x == 4 ~ 2, \n                                                          x == 5 ~ 1)))\n\n\n\nAufgabe 5 [1 Punkt]\nWir wissen, dass die Studie an zwei verschiedenen Orten durchgeführt wurde (location). Uns interessiert nun, ob die Erhebung an diesen Orten in etwa im gleichen Zeitraum stattgefunden hat, oder zetlich versetzt. Dazu können wir submitdate betrachten. Erstellt ein Density-Plot mit ggplot (-&gt; geom_denisity) und berücksichtigt dabei die verschiedenen Erhebungsorte.\nHinweis: So wie es as.factor() gibt, gibt es auch as.Date()\n\ndataset %&gt;% \n  mutate(submitdate = as.Date(submitdate)) %&gt;% \n  ggplot()+\n  geom_density(aes(x=submitdate,fill=location))+\n  theme_classic()+\n  scale_x_date(date_breaks = \"7 days\")+\n  scale_fill_manual(values=palette2)"
  },
  {
    "objectID": "assignments/solutions/assignment1-solved.html",
    "href": "assignments/solutions/assignment1-solved.html",
    "title": "Hausaufgabe 1: Grundlagen von R",
    "section": "",
    "text": "Beschreibung\nIm Seminar habt ihr einige Dinge über R-Studio, R & Quarto gelernt. Diese erste Hausaufgabe dient dazu, euer erlerntes Wissen zu festigen. Wie ihr seht, besteht dieses Aufgabenblatt aus einem Quarto-Markdown Dokument, in welchem ihr direkt in den entsprechenden Chunks eure Antworten/Lösungen eintragen könnt. Dabei können die Antworten entweder Code- oder Text-Blöcke sein - das werden wir dann jeweils kenntlich machen.\n\nPunkte\nFür jede Aufgabe bzw. Teilaufgabe gibt es Punkte - diese sind entsprechend kenntlich gemacht. Insgesamt gibt es für jedes Aufgabenblatt 10 Punkte. Aufgaben, die als [Bonus] markiert sind, geben keine Punkte.\n\n\nFür Experten\nManche Aufgaben erfordern Transferwissen, welches ihr im heutigen Seminar so nicht direkt gelernt hat. Diese Aufgaben sind als [Für Experten] markiert - hier berücksichtigen wir nicht nur die Lösung, sondern schon eure Lösungsversuche (falls ihr auf keine Lösung kommt).\n\n\nAbgabe:\nUm eure Hausaufgabe abzugeben, ladet diese bitte als .qmd Datei im Moodle hoch. Etwaige anderer Dateien (.html, assets-Ordner) müsst ihr nicht hochladen. Bitte benennt die Dateien entsprechend (bspw. hausaufgabe1_simon_krukowski.qmd, und schreibt oben bei author euren Namen rein.\n\n\n\nAufgaben\n\nAufgabe 1 [1 Punkt]\nIm Seminar habt ihr verschiedene Rechenoperatoren gelernt. Vervollständigt den folgenden Code, indem ihr die entsprechenden Rechenoperationen wie in den Beispielen anpasst, sodass das Ergebnis 4 ist.\n\n# Addition:\n2+2\n\n# Subtraktion:\n6-2\n\n# Division:\n(18-2)/4\n\n# Multiplikation:\n\n2*2\n\n# Exponent:\n\n2^2\n\n\n\nAufgabe 2 [1 Punkt]\nSpeichert nun das Ergebnis folgender Rechnung in einem Objekt namens result1:\n\n(3.5*14)-7\n\n# Lösung hier\nresult1 &lt;- (3.5*14)-7\n\n\n\nAufgabe 3 [1 Punkt]\nUnd prüft dann, ob es mit result2 übereinstimmt (logischer Vergleich):\n\nresult2 &lt;- \"42\"\n\n# Lösung hier\nresult1 == result2\n\n\n\nAufgabe 4 [1 Punkt]\nSind die beiden Objekte gleich? Begründe deine Antwort:\n\nJa, sie werden als gleich erkannt, obwohl sie eigentlich nicht der gleiche Datentyp sind (double vs. character)\n\n\n\nAufgabe 5 [1 Punkt]\nWir wollen die beiden Objekte nun zusammenfügen. Führt folgenden Code aus und erklärt, wie das Ergebnis bzw. etwaige Fehlermeldungen zustande gekommen sein könnten:\n\ncombined_results &lt;- result1+result2\n\n\nAntwort hier Hier werden die unterschiedlichen Datentypen zum Problem: Character können nicht verrechnet werden.\n\n\n\nAufgabe 6 [1 Punkt]\nVektoren sind auch ein zentraler Bestandteil von R. Erstelle im Folgenden einen 5-stelligen Vektor vec mit aufsteigender Zahlenfolge (also 1, 2 etc.):\n\n# Lösung hier\nvec &lt;- c(1,2,3,4,5)\n\n\n\nAufgabe 7 [1 Punkt]\nNun wollen wir den Vektor um die Zahl 6 an letzter Stelle ergänzen. Da ihr bereits wisst, wie man in Dataframes Elemente referenziert, könnt ihr euer Wissen auch auf Vektoren anwenden:\n\n# Element an 5. Stelle anzeigen:\nvec[5]\n\nWie könnte man über den Zuweisungsoperator die Zahl 6 als sechstes Element hinzufügen(, ohne den Weg aus Aufgabe 8 zu benutzen)? [Für Experten]\n\n# Lösung hier\nvec[6] &lt;-  6\n\n\n\nAufgabe 8 [1 Punkt]\nIhr habt auch über Funktionen gelernt. Es gibt eine base-R Funktion zum Hinzufügen von Elementen zu Vektoren namens append(). Benutzt diese, um die Zahl 6 als sechstes Element zum Vektor vec hinzuzufügen. (Hinweis: die Hilfefunktion ist euer Freund!)\n\n# Lösung hier\nappend(vec,6)\n\n\n\nAufgabe 9 [1 Punkt]\nIm Folgenden habt ihr die zwei Vektoren vec1 und vec2, welche ihr zusammenfügen wollt. Dazu bieten sich die Funktionen rbind und cbind an. Findet mithilfe der help() Funktion heraus, was der Unterschied zwischen den beiden ist, und nutzt beide, um die zwei Vektoren zu kombinieren.\n\nvec1 &lt;- c(1,2,3)\nvec2 &lt;- c(4,5,6)\n\n# Lösung hier\nvec.row &lt;- rbind(vec1, vec2)\n\nvec.col &lt;- cbind(vec1, vec2)\n\n\n\nAufgabe 10 [1 Punkt]\nWo liegt der Unterschied zwischen den beiden Ergebnissen?\n\nBei rbind werden die Vektoren zeilenweise aneinander gebunden, bei cbind spaltenweise.\n\n\n\nAufgabe 11 [Bonus]\nUm welchen Datentyp handelt es sich bei den beiden Ergebnissen?\n\n# Lösung hier\ntypeof(vec.row)\n# um einen numerischen bzw. eine Art Matrix"
  },
  {
    "objectID": "assignments/solutions/assignment6-solved.html",
    "href": "assignments/solutions/assignment6-solved.html",
    "title": "Hausaufgabe 6",
    "section": "",
    "text": "library(tidyverse)\n\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")"
  },
  {
    "objectID": "assignments/solutions/assignment6-solved.html#aufgabe-1-2-punkte",
    "href": "assignments/solutions/assignment6-solved.html#aufgabe-1-2-punkte",
    "title": "Hausaufgabe 6",
    "section": "Aufgabe 1 [2 Punkte]",
    "text": "Aufgabe 1 [2 Punkte]\nZunächst interessieren wir uns für die Verspätungen. Diese habt ihr bereits in der Seminarstunde als late berechnet, aber hier nochmal der Code (führt ihn am besten zur Reproduzierbarkeit aus):\n\ndataset &lt;- dataset %&gt;% \n              mutate(departure = dmy_hms(departure),\n                     scheduled_departure = dmy_hms(scheduled_departure),\n                     arrival = dmy_hms(arrival),\n                     scheduled_arrival = dmy_hms(scheduled_arrival),\n                     late = difftime(arrival,scheduled_arrival,units = \"mins\"))\n\nFiltert nun late so, dass alle Werte, die Ausreißer sind (oder mehr als 3 SDs abweichen), für nachfolgende Berechnungen herausgefiltert werden:\n\ndataset &lt;- dataset %&gt;% \n  filter(scale(late) &lt; 3 & scale(late) &gt; -3)"
  },
  {
    "objectID": "assignments/solutions/assignment6-solved.html#aufgabe-2-4-punkte",
    "href": "assignments/solutions/assignment6-solved.html#aufgabe-2-4-punkte",
    "title": "Hausaufgabe 6",
    "section": "Aufgabe 2 [4 Punkte]",
    "text": "Aufgabe 2 [4 Punkte]\nWir wollen nun wissen, wieviel Verspätung (late) es im Mittel pro Airline (carrier) gibt. Berechnet das entsprechend und beantwortet folgende Frage:\n\nWelche Airline hat die meiste, welche die wenigste Verspätung?\n\n\ndataset %&gt;% \n  group_by(carrier) %&gt;% \n  summarise(mean = mean(late, na.rm = T)) %&gt;% \n  arrange(mean)\n\nAntwort:\nWeiterhin interessiert uns nun nicht wieviel, sondern ob ein Flug Verspätung hat. Das könnt ihr mittlerweile auch berechnen. Meistens sind Verspätungen von bis zu 30 Minuten kein Problem, weshalb wir diese nicht als Verspätung bezeichnen wollen.\nBerechnet nun also die Variable delayed, welche die Ausprägungen TRUE/FALSE hat, je nachdem, ob der einzelne Flug über 30 Minuten Verspätung hat und speichert das ganze in dataset.\n\ndataset %&gt;% \n mutate(delayed = case_when(late &gt; 30 ~ TRUE,\n                            late &lt; 30 ~ FALSE)) -&gt; dataset\n\n\nWelche Airline hat nun nicht im Mittel die meiste, sondern die häufigsten (und wenigsten) Verspätungen über 30 Minuten? Berechnet das.\n\n\ndataset %&gt;% \n  group_by(carrier, delayed) %&gt;% \n  filter(!is.na(delayed)) %&gt;% \n  summarise(sum = n()) %&gt;% \n  arrange(desc(sum))\n\nAntwort:\n\n[Bonus]\n\nWas könnte man an der obigen Berechnung kritisieren?"
  },
  {
    "objectID": "assignments/solutions/assignment6-solved.html#aufgabe-3-2-punkte",
    "href": "assignments/solutions/assignment6-solved.html#aufgabe-3-2-punkte",
    "title": "Hausaufgabe 6",
    "section": "Aufgabe 3 [2 Punkte]",
    "text": "Aufgabe 3 [2 Punkte]\nDer Datensatz beschreibt alle Abflüge von New Yorker Flughäfen im Jahr 2013 (von allen drei Flughäfen, siehe Variable origin). Wir sind nun auf der Suche nach einem Büro in der Nähe eines Flughafens, an dem wir tagsüber gut arbeiten können, d.h., der Geräuschpegel gering ist. Je mehr Abflüge es gibt, desto höher der Geräuschpegel.\nZieht also entsprechend die Tageszeit aus den Abflugszeiten (hint: das hms Package hilft), und plottet die Abflugszeiten facettiert (facet_wrap) nach Ursprungsflughafen. Dazu eignet sich bspw. geom_density(). Am Ende solltet ihr ein Plot haben, was aus drei Kurven besteht, und auf der X-Achse die Tageszeit zeigt.\n\ndataset %&gt;% \n  mutate(departure_time = hms::as_hms(departure)) %&gt;% \n  ggplot(aes(x=departure_time))+\n  geom_density()+\n  facet_grid(origin~.)"
  },
  {
    "objectID": "assignments/solutions/assignment6-solved.html#aufgabe-4-2-punkte",
    "href": "assignments/solutions/assignment6-solved.html#aufgabe-4-2-punkte",
    "title": "Hausaufgabe 6",
    "section": "Aufgabe 4 [2 Punkte]",
    "text": "Aufgabe 4 [2 Punkte]\nEin Bekannter möchte aus dataset nur die Flüge herausfiltern, die an die wichtigsten Flughäfen Kaliforniens gingen. Dazu hat er eine Liste der Flughafen-Tags erstellt und filtert die Daten folgendermaßen:\n\nap.cali &lt;- c(\"ACV\", \"BFL\", \"BUR\", \"FAT\", \"LGB\", \"LAX\", \"MRY\", \"OAK\", \"ONT\", \"SNA\", \"PSP\", \"RDD\", \"SMF\", \"SAN\", \"SFO\", \"SJC\", \"SBP\", \"SBA\", \"SMX\", \"STS\", \"SCK\")\n\ndataset %&gt;% \n  filter(dest == ap.cali[1] | dest == ap.cali[2] | dest == ap.cali[3] | dest == ap.cali[4] | dest == ap.cali[5] | dest == ap.cali[6] | dest == ap.cali[7] | dest == ap.cali[8] | dest == ap.cali[9] | dest == ap.cali[10] | dest == ap.cali[11] | dest == ap.cali[12] | dest == ap.cali[13] | dest == ap.cali[14] | dest == ap.cali[15] | dest == ap.cali[16] | dest == ap.cali[17] | dest == ap.cali[18] | dest == ap.cali[19] | dest == ap.cali[20] | dest == ap.cali[21])\n\nWie könnte man diesen Filter deutlich effizienter umsetzen, mit dem, was ihr schon gelernt habt? Macht einen Vorschlag im Codefenster:\n\ndataset %&gt;% \n  filter(dest %in% ap.cali)"
  },
  {
    "objectID": "assignments/solutions/assigment4_with_solution_both.html",
    "href": "assignments/solutions/assigment4_with_solution_both.html",
    "title": "Hausaufgabe 4: Umgang mit Fragebogendaten",
    "section": "",
    "text": "Beschreibung\nFalls ihr an einer Stelle mal nicht weiterkommen solltet, sodass die folgenden Aufgaben nicht mehr lösbar sind, meldet euch bitte bei uns.\n\nPunkte\nFür jede Aufgabe bzw. Teilaufgabe gibt es Punkte - diese sind entsprechend kenntlich gemacht. Insgesamt gibt es für jedes Aufgabenblatt 10 Punkte. Aufgaben, die als [Bonus] markiert sind, geben keine Punkte.\n\n\nFür Experten\nManche Aufgaben erfordern Transferwissen, welches ihr im heutigen Seminar so nicht direkt gelernt hat. Diese Aufgaben sind als [Für Experten] markiert - hier berücksichtigen wir nicht nur die Lösung, sondern schon eure Lösungsversuche (falls ihr auf keine Lösung kommt).\n\n\nAbgabe [+ .html]\nUm eure Hausaufgabe abzugeben, ladet diese bitte zum die .qmd Datei und die gerenderte .html Datei im Moodle hoch. Etwaige anderer Dateien (assets-Ordner usw.) müsst ihr nicht hochladen. Bitte benennt die Dateien entsprechend (bspw. hausaufgabe2_simon_krukowski.qmd, und schreibt hier in der Datei oben bei author euren Namen rein.\n\n\n\nAufgaben\n\nAufgabe 1 [1 Punkt]\nErstellt wie immer als Erstes einen Chunk mit den notwendigen Packages. Ladet auch die Datei dataset_srl_challenges_wrangled.csv. Ihr findet sie im Moodle. Dort sind die berechneten Subskalen aus der Sitzung schon enthalten.\n\nlibrary(tidyverse)\n\ndataset &lt;- read.csv(\"dataset_srl_challenges_wrangled.csv\")\n\n\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")\n\n\n\nAufgabe 2 [2 Punkte]\nDa ihr in der Seminarsitzung nicht selbst die Gelegenheit hattet, den Mediansplit und das Interaktionsdiagramm zu erstellen, geben wir euch hier noch mal Gelegenheit dazu!\nDiesmal interessieren der Zusammenhang von zwei Subskalen der Gewissenhaftigkeit, gh_fleiss und gh_ordnungsliebe und außerdem wie sich der Zusammenhang je nach Alter (dmAge) verhält.\n\nErstellt eine neue Variable, in der ihr die Probanden in “younger” und “older” einteilt, je nachdem ob ihr Alter geringer/gleich oder höher als der Alters-Median ist\nErstellt einen Scatterplot mit Regressionsgerade(n) für den Zusammenhang von Fleiß und Ordnungsliebe.\nSplittet den Plot in zwei Farben, je nach Ausprägung der neuen Altersvariable.\n\n\ndataset$age.med &lt;- ifelse(dataset$dmAge &lt;= median(dataset$dmAge, na.rm=T), \"younger\", \"older\")\n\ndataset %&gt;% \n  ggplot(aes(gh_fleiss, gh_ordnungsliebe, color=age.med))+\n    geom_jitter()+\n    geom_smooth(method=\"lm\", se=F)+\n    theme_minimal()\n\n\n\nAufgabe 3 [3 Punkte]\nMittlerweile habt ihr gelernt, wie ihr mit group_by() und summarise() Mittelwerte für einzelne Gruppen berechnet, und wie ihr über pivot_longer() Daten so aufbereitet, dass sie für etwaige Plots besser geeginet sind. Nun sollt ihr selbst ein Plot erstellen - und zwar nicht irgendeins, sondern ihr sollt folgendes Plot reproduzieren:\n\n\n\n\n\nDen Datensatz dazu haben wir ja bereits in der letzten Seminarstunde kennengelernt (dataset_srl_challenges.csv). Die Farben müssen natürlich nicht die gleichen sein - lasst euch also gerne etwas einfallen.\n\ndataset %&gt;% \n  select(dmLivingSit, starts_with(\"pres_\")) %&gt;% \n  group_by(dmLivingSit) %&gt;% \n  summarise(across(pres_umfeld:pres_material, mean),n=n()) %&gt;% \n  filter(n&gt;1) %&gt;% \n  tidyr::pivot_longer(pres_umfeld:pres_material) %&gt;% \n  ggplot(aes(y=name,x=value))+\n           geom_col(aes(fill=name),color=\"#2b2b2b\")+\n           theme_classic()+\n           facet_wrap(dmLivingSit ~ .)+\n           scale_fill_manual(values=scales::seq_gradient_pal(\"#c7a9a3\", \"#efcd9c\", \"Lab\")(seq(0,1,length.out=5)))+\n  ylab(\"SRL Problembereich\")+\n  labs(fill=\"SRL Problembereich\")\n\n\n\nAufgabe 4 [3 Punkte]\nSchaut euch den folgenden Code an und überlegt, was er macht und wie man ihn optimieren könnte. Ergänzt im Anschluss, wie ihr das gleiche Ergebnis auf “optimierte” Art und Weise erzielen könntet.\nHinweis: Es gibt mindestens drei Funktionen/Schreibweisen, die ihr kennengelernt habt, die euch hier helfen können.\n\nspalten &lt;- c(\"hsf1_VVW01\", \"hsf1_VSL01\", \"hsf1_KIZ01\", \"hsf1_RAB01\", \"hsf1_VUL01\", \"hsf1_UA02\",  \"hsf1_MIW01\", \"hsf1_MSW01\", \"hsf1_TTL02\", \"hsf1_PU02\",  \"hsf1_RRB03\", \"hsf1_TTK01\", \"hsf1_MPR03\", \"hsf1_A02\", \"hsf1_MLM01\", \"hsf1_TTF01\", \"hsf1_RFL01\", \"hsf1_UVG02\", \"hsf1_MWL02\", \"hsf1_MNL02\", \"hsf1_PMK01\", \"hsf1_PU03\",  \"hsf1_RNE01\", \"hsf1_ZSP03\")\n  \nspalten.rekodiert &lt;- ifelse(dataset[,spalten] == 1, 5,\n                      ifelse(dataset[,spalten] == 2, 4,\n                             ifelse(dataset[,spalten] == 3, 3,\n                                    ifelse(dataset[,spalten] == 4, 2,\n                                           ifelse(dataset[,spalten] == 5, 1, NA)))))\n\ndataset.new &lt;- cbind(dataset, spalten.rekodiert)\n\n\ndataset.new &lt;- dataset %&gt;% \n  mutate(across(starts_with(\"hsf1\"), function(x) case_when(x == 1 ~ 5,\n                                                          x == 2 ~ 4,\n                                                          x == 3 ~ 3,\n                                                          x == 4 ~ 2, \n                                                          x == 5 ~ 1)))\n\n\n\nAufgabe 5 [1 Punkt]\nWir wissen, dass die Studie an zwei verschiedenen Orten durchgeführt wurde (location). Uns interessiert nun, ob die Erhebung an diesen Orten in etwa im gleichen Zeitraum stattgefunden hat, oder zetlich versetzt. Dazu können wir submitdate betrachten. Erstellt ein Density-Plot mit ggplot (-&gt; geom_denisity) und berücksichtigt dabei die verschiedenen Erhebungsorte.\nHinweis: So wie es as.factor() gibt, gibt es auch as.Date()\n\ndataset %&gt;% \n  mutate(submitdate = as.Date(submitdate)) %&gt;% \n  ggplot()+\n  geom_density(aes(x=submitdate,fill=location))+\n  theme_classic()+\n  scale_x_date(date_breaks = \"7 days\")+\n  scale_fill_manual(values=palette2)"
  },
  {
    "objectID": "assignments/solutions/assignment3-solved.html",
    "href": "assignments/solutions/assignment3-solved.html",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "",
    "text": "Aufgabe 1 [1 Punkt]\nIn der letzten Seminarstunde habt ihr einiges über statistische Verfahren in R gelernt. In dieser Hausaufgabe geht es darum, dieses Wissen anzuwenden. In der Stunde habt ihr außerdem gelernt, warum es wichtig und sinnvoll ist, zu Beginn eines jeden Quarto-Dokuments einen “Info-Chunk” zu erstellen, in dem ihr alle benötigten Packages aktiviert etc.\nErstellt nun einen solchen Chunk und nennt ihn preliminaries. Ladet darin das Package datarium (installiert es vorher ggf. über die Konsole), sowie alle weiteren Packages, die ihr benötigt. Speichert das darin enthaltene Dataset genderweight als dataset.\nAußerdem kann es hilfreich sein, dort direkt eine Farbpalette (bspw. mit 4 Farben, definiert als hex codes) in einem Vektor zu speichern. Holt euch bspw. bei colorhunt.co Inspiration und speichert eine solche Palette darin ab.\nStellt außerdem sicher, dass der Chunk keine Warnungen anzeigt beim rendern (hint: chunk-options).\n\nlibrary(tidyverse)\nlibrary(datarium)\ndataset &lt;- genderweight\npalette &lt;- c(\"#8B1874\",\"#B71375\",\"#FC4F00\",\"#F79540\")\n\n\n\nAufgabe 2 [1 Punkt]\nSchaut euch den Datensatz an, um ein Gefühl dafür zu bekommen. Gebt euch dazu wahlweise den Datensatz selbst, oder bspw. gruppierte Outputs über dplyr an. Wir wollen, dass die Tabellenoutputs nach dem Rendern nicht im default Format dargestellt werden. Stellt das entsprechend im YAML Header ein.\n\ndataset %&gt;% \n  group_by(group) %&gt;% \n  summarise(mean(weight))\n\ndataset\n\n\n\nAufgabe 3 [1 Punkt]\nPrüft nun die Variable weight auf Normalverteilung. Macht das wahlweise über einen Test, oder ein Diagramm:\n\ndataset %&gt;% \n  ggplot()+\n    geom_qq(aes(sample=weight))+\n    theme_minimal()\n\nIst die Variable normalverteilt? Begründe kurz:\nAntwort hier: Nein, da die Punkte eindeutig nicht der Form einer 45°-Geraden folgen.\n\n\nAufgabe 4 [1 Punkt]\nUnabhängig davon, was wir gerade herausgefunden haben, entscheiden wir uns dazu, einen t-Test zu rechnen, und die Mittelwerte von weight miteinander zu vergleichen. Wir haben die Vermutung, dass Männer ein höheres Gewicht haben. Berücksichtigt das und rechnet den Test (hint: gerichtetes Testen). Was kommt heraus?\n\nt.test(weight ~ group, dataset, alternative = \"less\")\n\ndataset %&gt;%\n  t_test(weight~group, alternative =\"less\")\n\nAntwort: Der Test ist signifikant, es gibt einen signifikanten Unterschied zwischen Männern und Frauen bezüglich Gewicht.\n\n\nBonus:\nWas hat die Überschrift zu bedeuten und wie könnte das mit Voraussetzungen zu tun haben?\nAntwort hier: [Nur relevant, wenn man t.test und nicht t_test gerechnet hat] Der Output hat die Überschrift “Welch Two Sample t-test”, d.h. R hat automatisch den non-parametrischen Test gerechnet, falls Normalverteilung nicht gegeben ist.\n\n\nAufgabe 5 [1 Punkt]\nAngenommen, wir hätten in der Zwischenzeit herausgefunden, dass die Variable weight nicht normalverteilt ist. Welcher Test bietet sich dann stattdessen an? Rechnet diesen.\n\nwilcox.test(dataset$weight ~ dataset$group, alternative = \"less\")\n\n\n\nAufgabe 6 [1 Punkt]\nIm Datensatz stress (auch aus datarium) wird die Auswirkung einer neuen Behandlungsmethode (treatment) auf einen Stress-Score (score) dargestellt. Berechnet die entsprechende AN(C)OVA, unter Berücksichtigung des Alters (age) als Kovariate.\n\nstress %&gt;% \n  anova_test(score ~ treatment + age)\n\nstress %&gt;% \n  anova_test(dv = score,\n             between = treatment,\n             covariate = age)\n\n\n\nAufgabe 7 [1 Punkt]\nErstellt den zu Aufgabe 6 passenden Boxplot (ohne Kovariate).\nGestaltet den Boxplot:\n\nmit Farben aus euer oben festgelegten Palette\nmit einem anderen theme\nmit einem weiteren, passenden geom\n\n\nstress %&gt;% \n  ggplot()+\n  geom_boxplot(aes(treatment, score))+\n  geom_jitter(aes(treatment, score, color=treatment), width=0.05)+\n  scale_color_manual(values = palette)+\n  theme_minimal()\n\n\n\nAufgabe 8 [1 Punkt]\nWir interessieren uns nun auch für Zusammenhänge zwischen Daten. Dazu schauen wir uns wieder das bekannte iris data set an. Primär interessiert uns, ob Sepal.Width und Sepal.Height zusammenhängen. Um also zunächst eine Idee über die Verteilung der Daten zu bekommen, sollt ihr mit ggplot ein Diagramm erstellen. Darin sollen mehrere Sachen enthalten sein:\n\nBivariates Streudiagramm (hint: ihr wollt Punkte plotten)\nEine Regressionsgrade (hint: geom_smooth() ist euer Freund)\n\n\niris %&gt;% \n  ggplot(aes(x=Sepal.Length,y=Sepal.Width)) +\n  geom_point()+\n  geom_smooth(method=\"lm\", se=F)+\n  theme_minimal()\n\nRechnet auch eine Pearson-Korrelation zwischen den beiden Variablen:\n\ncor.test(iris$Sepal.Length,iris$Sepal.Width)\n\nWas lässt sich über den Zusammenhang der beiden Variablen sagen?\nAntwort: Die Korrelation ist klein und negativ, aber nicht signifikant.\n\n\nAufgabe 9 [1 Punkt]\nWir haben nun die Annahme, dass die Spezies der Pflanzen außerdem einen Einfluss auf den Zusammenhang zwischen den beiden Variablen hat. Dazu sollt ihr zunächst die Punkte in Abhängigkeit von Species einfärben:\n\niris %&gt;% \n  ggplot(aes(x=Sepal.Length,y=Sepal.Width)) +\n  geom_point(aes(color=Species))+\n  geom_smooth(method=\"lm\")\n\nWir haben nun das Gefühl, dass ein Zusammenhang zwischen den beiden Variablen besteht und uns dazu entschieden, ein Regressionsmodell zu berechnen, in dem wir Sepal.Length als abhängige Variable haben, sowie Species und Sepal.Width als Prädiktoren. Berechnet ein solches Modell und speichert es als model:\n\nmodel &lt;- lm(Sepal.Length ~ Sepal.Width + Species, iris)\n\n\n\nAufgabe 10 [1 Punkt]\nNun wollen wir die Ergebnisse der Regressionsanalyse entsprechend berichten. Aus Übungsgründen sollt ihr dabei auf Packages wie stargazer() verzichten. Ihr habt im Seminar inline-Code gelernt. Verwendet diesen, um die Ergebnisse entsprechend zu berichten. Dazu bietet es sich an, den Output von summary() in einem Objekt zu speichern, und dann auf die Werte zuzugreifen. Denkt dran: über den $ Operator sowie ['variable'] könnt ihr auf einzelne Werte zugreifen.\n\nsum &lt;- summary(model)\n\nErgänzt also die F-Statistik in folgendem Satz:\n\n#Diese Satz soll natürlich eigentlich nicht im Codechunk stehen sondern im normalen Text, hätte aber dann für die Website nicht gerendert werden können.\n\nDie Regression mit *Sepal.Width* als abhängige und *Sepal.Length* und *Species* als erklärende Variablen ist signifikant, *F* (3,146) = `r round(sum$fstatistic[1], 2)`, *p* \\&lt; .001.\n\n\n\nAufgabe 11 [Bonus]\nWas macht die paste0 Funktion und könnte man die obige Lösung damit vereinfachen?\nDabei werden Elemente eines Vektors in Character umgewandelt und ohne Trennzeichen aneinandergehängt. Den Antwortsatz oben hätte man dementsprechend auch über paste0 zusammenbasteln können."
  },
  {
    "objectID": "assignments/solutions/assignment5-solved.html",
    "href": "assignments/solutions/assignment5-solved.html",
    "title": "Hausaufgabe 5: lapply() & Faktoren",
    "section": "",
    "text": "Die Grundlage für diese Hausaufgabe soll wieder der Datensatz dataset_srl_challenges_wrangled.csv sein, den ihr bereits in den letzten Wochen kennengelernt habt. Importiert ihn entsprechend, und speichert ihn als dataset ab.\n\nAufgabe 1 [4 Punkte]\nWir sind daran interessiert, ob unsere 32 abhängigen Variablen (pmet_, pmot_, etc….) normalverteilt sind. Das können wir mit der shapiro_test() Funktion prüfen. Allerdings wäre es uns zu aufwändig, dies für jede Variable einzeln zu machen. Zum Glück haben wir im Seminar Funktionen & lapply() kennengelernt.\nZiel dieser Aufgabe soll es nun sein, mehrere Normalverteilungstests (rstatix::shapiro_test()) zu rechnen für alle Herausforderungs-Scores (32 Stück), und diese in einem Dataframe zu speichern. Hier ein paar Hinweise:\n\nIhr wisst bereits, wie ihr bestimmte Spalten die mit einem Buchstaben anfangen, auswählen könnt (ignore.case=F hilft euch)\nErstellt eine Funktion, in der ihr mit shapiro_test() die Normalverteilung testet und das Ergebnis als Dataframe erzeugt\nErgänzt das Dataframe innerhalb der Funktion außerdem um die Spalte normality, in der ihr das Ergebnis des Tests abhängig vom p-Wert als signifikant oder nicht signifikant bezeichnet (Tipp: mutate und ifelse / case_when)\nWendet die neue Funktion mit lapply() auf die 32 ausgewählten Spalten an und formatiert das Ergebnis anschließend zu einem Dataframe\n\nCheckt gerne auch unsere Website, falls ihr nicht weiterkommt.\n\ncalculateNormality &lt;- function(column){\n  df &lt;- shapiro_test(column)\n  df &lt;- df %&gt;% \n    mutate(sig = ifelse(p &lt; .05, \"normalverteilt\", \"nicht normalverteilt\"))\n  return(df)\n}\n\ndataset %&gt;% select(starts_with(\"p\",ignore.case=F)) -&gt; normality_cols\n\ntestlist &lt;- lapply(normality_cols, calculateNormality)\n\ntestlist_df &lt;- bind_rows(testlist)\n\n[Bonus]: Im finalen Dataframe fehlen uns leider die Namen der betreffenden Variablen, in der durch lapply() erstellten Liste sind diese aber noch als Namen der Listenobjekte enthalten. Wie können wir diese Namen unserem Dataframe hinzufügen?\n\ntestlist_names &lt;- names(testlist)\ntestlist_df %&gt;% \n  mutate(variable=testlist_names)\n\n\n\nAufgabe 2 [4 Punkte]\nZur Visualisierung des Zusammenhangs zwischen Wohnsituation und Qualität des Lernorts wurde der folgende Plot erstellt:\n\n# Original zur Referenz - hier bitte nicht verändern\n\ndataset %&gt;% \n  group_by(dmLivingSit) %&gt;% \n  summarize(mean.study = mean(suboptimal_study),\n            sd.study = sd(suboptimal_study),\n            n = n()) %&gt;% \n  ggplot(aes(x=dmLivingSit, y=mean.study))+\n    geom_errorbar(aes(ymin=mean.study-sd.study, ymax=mean.study+sd.study), width=0.1, alpha=0.3)+\n  geom_point(color = \"#537188\", size=3)+\n  theme_minimal()+\n  ggtitle(\"Lernort in Abhängigkeit von Wohnsituation\")+\n  xlab(\"Wohnsituation\")+\n  ylab(\"Wie ungünstig ist der Lernort?\")\n\nWie ihr direkt erkennen könnt, gibt es ästhetische Probleme mit den Faktorstufen. Ergänzt den gleichen Code im Chunk unten so, dass sich der Plot folgendermaßen verändert:\n\nDie Faktorstufen haben “ordentliche” Namen\nDie Reihenfolge der Faktorstufen hängt von ihrer Lernortausprägung ab, sodass sie absteigend sortiert sind\n“Sonstiges” wird als letzte Faktorstufe ganz rechts geplottet (obwohl es die höchste Ausprägung hat)\n\nAls kleine Hilfestellung hier eine Liste der vorgestellten fct_-Funktionen - keine Scheu vor unserer Website und/oder der Hilfefunktion! Nicht alle hier genannte Funktionen sind notwendig für die Lösung.\n\nfct_recode\nfct_collapse\nfct_lump_min, fct_lump_prop, facet_lump_n, facet_lump_lowfreq\nfct_infreq\nfct_relevel\nfct_reorder\nfct_rev\n\n\n# Eure Veränderungen bitte hier einfügen: \ndataset %&gt;%\n  mutate(dmLivingSit = fct_recode(dmLivingSit,\n                                   \"eigene Wohnung\" = \"eigeneWohnung\",\n                                   \"Partner/ Kind\" = \"PartnerKind\",\n                                   \"Wohnheim-\\nAppartment\" = \"WohnheimAppartment\",\n                                   \"Wohnheim-\\nZimmer\" = \"WohnheimZimmer\")) %&gt;% \n  group_by(dmLivingSit) %&gt;% \n  summarize(mean.study = mean(suboptimal_study),\n            sd.study = sd(suboptimal_study),\n            n = n()) %&gt;% \n  mutate(dmLivingSit = fct_reorder(dmLivingSit, mean.study, .desc = TRUE),\n         dmLivingSit = fct_relevel(dmLivingSit, \"Sonstiges\", after = Inf)) %&gt;% \n  ggplot(aes(x = dmLivingSit, y = mean.study)) +\n  geom_errorbar(aes(ymin = mean.study - sd.study, ymax = mean.study + sd.study), width = 0.1, alpha = 0.3) +\n  geom_point(color = \"#537188\", size = 3) +\n  theme_minimal() +\n  ggtitle(\"Lernort in Abhängigkeit von Wohnsituation\") +\n  xlab(\"Wohnsituation\") +\n  ylab(\"Wie ungünstig ist der Lernort?\")\n\n\n\nAufgabe 3 [2 Punkte]\nIm Seminar haben wir mit Strings der Dateinamen der Arbeitsgedächtnisdaten gearbeitet. Ihr habt in dem Kontext str_split kennengelernt. Schaut euch nun an, wie str_sub() funktioniert und zeigt anhand des vorgegebenen Beispiels, wie ihr damit ebenfalls die Probanden-ID aus dem Dateinamen extrahieren könntet.\n\nname &lt;- \"WM_operation_span_96_1611581289527.csv\"\n\nstr_sub(name, start=19, end=20)\n\nWelche Methode findet ihr hier praktischer? Was wäre ein potenzieller Fall, in dem die andere Methode doch praktischer wäre?\nDurch den gleichen Aufbau und die Trennzeichen ist str_split hier praktischer. Wenn man allerdings einen Fall hat, bei dem es keine Trennzeichen gibt, kann str_sub eine gute Alternative sein."
  },
  {
    "objectID": "assignments/solutions/assignment2-solved.html",
    "href": "assignments/solutions/assignment2-solved.html",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "",
    "text": "Am Anfang von fast jedem R-Code aktiviert man erst mal die notwendigen Packages und lädt den relevanten Datensatz. Wir schauen uns hier einen Datensatz aus dem Package nycflights13 an. Installiert und aktiviert dementsprechend die Packages nycflights13, dplyr und ggplot2. (Denkt auch daran, welche Packages ihr installieren und welche vielleicht nur aktivieren müsst..)\n\n# Hier Lösung einfügen\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(nycflights13)\n\nDer Datensatz, mit dem wir nun arbeiten, nennt sich flights. Unter diesem Namen könnt ihr ihn nach erfolgreicher Aktivierung von nycflights13 finden. Er enthält alle Flüge, die im Jahr 2013 in New York losgeflogen sind. Mehr Informationen zu den Variablen könnt ihr über die Hilfefunktion bekommen.\nHinweis: Speichert euch bei den folgenden Aufgaben eure Änderungen an flights in Objekten mit einem anderen Namen, damit ihr - falls etwas schief geht - immer wieder auf das Original zurückgreifen könnt.\n\n# Nur mal zum Anschauen:\nflights"
  },
  {
    "objectID": "assignments/solutions/assignment2-solved.html#aufgabe-1",
    "href": "assignments/solutions/assignment2-solved.html#aufgabe-1",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "",
    "text": "Am Anfang von fast jedem R-Code aktiviert man erst mal die notwendigen Packages und lädt den relevanten Datensatz. Wir schauen uns hier einen Datensatz aus dem Package nycflights13 an. Installiert und aktiviert dementsprechend die Packages nycflights13, dplyr und ggplot2. (Denkt auch daran, welche Packages ihr installieren und welche vielleicht nur aktivieren müsst..)\n\n# Hier Lösung einfügen\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(nycflights13)\n\nDer Datensatz, mit dem wir nun arbeiten, nennt sich flights. Unter diesem Namen könnt ihr ihn nach erfolgreicher Aktivierung von nycflights13 finden. Er enthält alle Flüge, die im Jahr 2013 in New York losgeflogen sind. Mehr Informationen zu den Variablen könnt ihr über die Hilfefunktion bekommen.\nHinweis: Speichert euch bei den folgenden Aufgaben eure Änderungen an flights in Objekten mit einem anderen Namen, damit ihr - falls etwas schief geht - immer wieder auf das Original zurückgreifen könnt.\n\n# Nur mal zum Anschauen:\nflights"
  },
  {
    "objectID": "assignments/solutions/assignment2-solved.html#aufgabe-2",
    "href": "assignments/solutions/assignment2-solved.html#aufgabe-2",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "Aufgabe 2",
    "text": "Aufgabe 2\nErgänzt flights um eine weitere Spalte, in der die Verspätungen bei Ankunft und Abflug (arr_delay und dep_delay) miteinander verrechnet werden. Gestaltet den Code so, dass ihr auch bei späteren Aufgaben auf die Spalte zugreifen könntet.\nVerwendet die Pipe und die euch bekannten dplyr-Befehle.\n\n# Hier Code zur Lösung eintragen\n\nflights2 &lt;- flights %&gt;%\n              mutate(sum_delay = dep_delay + arr_delay)"
  },
  {
    "objectID": "assignments/solutions/assignment2-solved.html#aufgabe-3",
    "href": "assignments/solutions/assignment2-solved.html#aufgabe-3",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "Aufgabe 3",
    "text": "Aufgabe 3\nSortiert flights so, dass ihr einmal die geringste und einmal die größte Verspätung bei Ankunftszeit entnehmen könnt.\n\n# Hier Code zur Lösung eintragen\n\nflights2 %&gt;% \n  arrange(desc(arr_delay))\n\nflights2 %&gt;% \n  arrange(arr_delay)"
  },
  {
    "objectID": "assignments/solutions/assignment2-solved.html#aufgabe-4",
    "href": "assignments/solutions/assignment2-solved.html#aufgabe-4",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "Aufgabe 4",
    "text": "Aufgabe 4\nWie interpretiert ihr die Ergebnisse aus Aufgabe 3?\nAntwort hier: Die geringsten Verspätungen sind negativ - d.h. manche Flüge kommen sogar zu früh."
  },
  {
    "objectID": "assignments/solutions/assignment2-solved.html#aufgabe-5",
    "href": "assignments/solutions/assignment2-solved.html#aufgabe-5",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "Aufgabe 5",
    "text": "Aufgabe 5\nFür welche Variablen eignet sich group_by typischerweise bei einer “klassischen” Komedia-Studie; wofür hättet ihr sie beispielsweise bei eurer Bachelorarbeit verwenden können?\nAntwort hier: z.B. um die Probanden bezüglich ihrer deskriptiven Eigenschaften zu beschreiben und dabei Kontrollgruppe und Experimentalgruppe zu unterscheiden."
  },
  {
    "objectID": "assignments/solutions/assignment2-solved.html#aufgabe-6",
    "href": "assignments/solutions/assignment2-solved.html#aufgabe-6",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "Aufgabe 6",
    "text": "Aufgabe 6\nErstellt mittels summarize eine Tabelle, in der für jeden Monat der die durchschnittliche Distanz (Spalte distance) der Flüge und ihre Standardabweichungen angegeben werden.\nVerwendet die Pipe und die euch bekannten dplyr-Befehle.\n\n# Hier Code als Antwort eintragen\ndist_summary &lt;- flights2 %&gt;% \n                  group_by(month) %&gt;% \n                  summarize(dist_mean = mean(distance),\n                            dist_sd = sd(distance))"
  },
  {
    "objectID": "assignments/solutions/assignment2-solved.html#aufgabe-7",
    "href": "assignments/solutions/assignment2-solved.html#aufgabe-7",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "Aufgabe 7",
    "text": "Aufgabe 7\nVerwendet die in Aufgabe 6 erstellte Tabelle, um mit ggplot und geom_point einen Plot zu erstellen, in dem auf der x-Achse die Monate und auf der y-Achse die durchschnittliche Distanz zu sehen ist.\n\n# Hier Code als Antwort eintragen\nggplot(dist_summary)+\n  geom_point(aes(month, dist_mean))+\n  theme_minimal()"
  },
  {
    "objectID": "assignments/solutions/assignment2-solved.html#aufgabe-8-für-experten",
    "href": "assignments/solutions/assignment2-solved.html#aufgabe-8-für-experten",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "Aufgabe 8 für Experten",
    "text": "Aufgabe 8 für Experten\nFügt dem Plot aus Aufgabe 7 außerdem Standardabweichungen mithilfe von geom_errorbar() hinzu. (Hinweis: Alles, was ihr für den Input bei geom_errobar() benötigt, befindet sich bereits in der Tabelle von Aufgabe 6)\n\n# Hier Code als Antwort eintragen\nggplot(dist_summary)+\n  geom_point(aes(month, dist_mean))+\n  geom_errorbar(aes(x = month, ymin = dist_mean-dist_sd, ymax = dist_mean+dist_sd))+\n  theme_minimal()"
  },
  {
    "objectID": "assignments/solutions/assignment2-solved.html#aufgabe-9",
    "href": "assignments/solutions/assignment2-solved.html#aufgabe-9",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "Aufgabe 9",
    "text": "Aufgabe 9\nGestaltet den Plot aus Aufgabe 7 oder 8 ästhetischer, indem ihr\n\neinen Titel hinzufügt\ndie Farbe der Punkte zu eurer Lieblingsfarbe verändert\ndie Achsen beschriftet\n\n\n# Hier Code als Antwort einfügen\nggplot(dist_summary)+\n  geom_point(aes(month, dist_mean), color = \"dark blue\")+\n  ggtitle(\"Durchschnittliche Flugdistanz pro Monat\")+\n  xlab(\"Monat\")+\n  ylab(\"Distanz [Meilen]\")+\n  theme_minimal()"
  },
  {
    "objectID": "assignments/solutions/assignment2-solved.html#aufgabe-10",
    "href": "assignments/solutions/assignment2-solved.html#aufgabe-10",
    "title": "Hausaufgabe 2: Deskriptives",
    "section": "Aufgabe 10",
    "text": "Aufgabe 10\nRecherchiert geom_jitter und beschreibt in eigenen Worten, was die Funktion macht und in welchen Fällen sie besonders nützlich ist.\nAntwort hier: Die Funktion fügt den Punkten eine kleine, zufällige Verschiebung hinzu, die vor allem Plot übersichtlicher macht, in denen sich viele Punkte überlagen, z.B. bei ordinalen Daten"
  },
  {
    "objectID": "5factorplot.html",
    "href": "5factorplot.html",
    "title": "Umgang mit Faktoren in Plots",
    "section": "",
    "text": "Umgang mit Faktoren in Plots\nIn diesem Abschnitt tauchen wir etwas tiefer ein in den Umgang mit Faktoren in Plots.\nWenn man nur kurz für einen Überblick einen Plot erstellt, ist die Lesbarkeit und Ästhetik weniger wichtig, aber wenn Plots für eine Abgabe oder Publikation gedacht sind, ist das Verhalten von Faktoren in Plots manchmal zum Haare raufen. Daher schauen wir uns schon mal präventiv an, wie man die Darstellung unter Kontrolle bekommt.\n\ndataset %&gt;% \n  ggplot()+\n  geom_col(aes(dmLivingSit, gewissenhaftigkeit), fill = \"#537188\")+\n  theme_minimal()\n\n\n\n\nStandardmäßig sind die Faktoren alphabetisch sortiert - das ist häufig okay, kann aber auch nerven:\n\nManche Faktoren haben eine sinnvollere Reihenfolge (z.B. Monate)\nManchmal sind solche Graphen einfacher zu lesen, wenn die Balken nach Größe sortiert sind (z.B. Beliebheit aller Bundestagsmitglieder)\nDie Kategorie “Sonstiges” hätten wir hier lieber als letztes in der Reihe\n\nUm den Plot für uns schöner zu gestalten, können wir entweder direkt die Daten bearbeiten oder nur im Kontext vom Plot die Daten vorübergehend umändern.\n\nFaktorstufen umbenennen\nAuch wenn es für das Datenhandling in und außerhalb von R besser ist, keine Leerzeichen oder Sonderzeichen in den Faktoren und Faktorstufen einzubauen, wollen wir unseren Plot natürlich lesbar haben.\nÜber fct_recode() können wir die Faktorstufen nach dem Prinzip neu = alt umbenennen. Nicht genannte Stufen werden einfach beibehalten.\nEin netter Trick ist außerdem, lange Labels mit \\n mit einem Zeilensprung vom Überlappen abzuhalten. Dabei kann man \\n einfach “dreist” mitten in den neuen Namen einfügen.\n\n# Welche Stufen gibt es noch mal?\nlevels(factor(dataset$dmLivingSit))\n\n[1] \"eigeneWohnung\"      \"Elternhaus\"         \"PartnerKind\"       \n[4] \"Sonstiges\"          \"WG\"                 \"WohnheimAppartment\"\n[7] \"WohnheimZimmer\"    \n\n# Plot mit ordentlich benannten Faktorstufen\ndataset %&gt;% \n  mutate(dmLivingSit = fct_recode(dmLivingSit,\n                                   \"eigene Wohnung\" = \"eigeneWohnung\",\n                                   \"Partner/Kind\" = \"PartnerKind\",\n                                   \"Wohnheim-\\nAppartment\" = \"WohnheimAppartment\",\n                                   \"Wohnheim-\\nZimmer\" = \"WohnheimZimmer\")) %&gt;% \n  ggplot+\n  geom_bar(aes(dmLivingSit), fill = \"#537188\")+\n  theme_minimal()\n\n\n\n\n\n\nFaktorstufen zusammenfassen\nHäufig möchte man die Datenerfassung besonders sorgfältig umsetzen und fragt viele potenzielle Faktorstufen ab. In der Realität gibt es vielleicht nur wenige Teilnehmende, auf die eine bestimmte Faktorstufe zutrifft, sodass es sich anbietet, einige ähnliche Faktorstufen zusammenzulegen.\n\nIn Abhängigkeit vom Inhalt\nHier setzen wir das mithilfe von fct_collapse() für die beiden Wohnheim-Ausprägungen WohnheimAppartment und WohnheimZimmer um.\n\ndataset %&gt;% \n  mutate(dmLivingSit = fct_collapse(dmLivingSit,\n                                    Wohnheim = c(\"WohnheimAppartment\", \"WohnheimZimmer\"))) %&gt;% \n  ggplot+\n  geom_bar(aes(dmLivingSit), fill = \"#537188\")+\n  theme_minimal()\n\n\n\n\n\n\nIn Abhängigkeit von der Ausprägung\nFür die Idee von “die kleinsten Reste zusammenfassen” gibt es verschiedene fct_lump-Varianten. In dem Beispiel hier bietet es sich eigentlich nicht an, wir demonstrieren es trotzdem.\nBei fct_lump_min() lässt sich über das Argument min = spezifizieren, wie häufig eine bestimmte Ausprägung mindestens vorkommen muss, um durch einen eigenen Balken dargestellt zu werden. Der Rest wird in einem Balken zusammengefasst und standardmäßig als “Other” bezeichnet, was sich über other_level = \"..\" ändern lässt.\n\nsummary(factor(dataset$dmLivingSit))\n\n     eigeneWohnung         Elternhaus        PartnerKind          Sonstiges \n                10                 61                 12                  1 \n                WG WohnheimAppartment     WohnheimZimmer \n                22                  3                  7 \n\ndataset %&gt;% \n  mutate(dmLivingSit = fct_lump_min(dmLivingSit, min = 20, other_level= \"Sonstiges\")) %&gt;% \n  ggplot+\n  geom_bar(aes(dmLivingSit), fill = \"#537188\")+\n  theme_minimal()+\n  ggtitle(\"Ausprägungen ab n&gt;=20\")\n\n\n\n\nÄhnlich fasst fct_lump_prop() die Kategorien nach prozentualen Anteilen zusammen.\n\ndataset %&gt;% \n  mutate(dmLivingSit = fct_lump_prop(dmLivingSit, prop = 0.1, other_level= \"Sonstiges\")) %&gt;% \n  ggplot+\n  geom_bar(aes(dmLivingSit), fill = \"#537188\")+\n  theme_minimal()+\n  ggtitle(\"Ausprägungen ab Anteil von 10%\")\n\n\n\n\nAndersherum können wir mit fct_lump_n() spezifizieren, wie viele Balken wir sehen wollen, also ab dem wievielten der Rest zusammengefasst werden soll (n+1). Dabei werden natürlich nicht einfach die n alphabetisch ersten Balken gewählt, sondern die höchsten.\n\ndataset %&gt;% \n  mutate(dmLivingSit = fct_lump_n(dmLivingSit, n = 4, other_level= \"Sonstiges\")) %&gt;% \n  ggplot+\n  geom_bar(aes(dmLivingSit), fill = \"#537188\")+\n  theme_minimal()+\n  ggtitle(\"Reste zusammenfassen nach k=4\")\n\n\n\n\nZuguterletzt fasst fct_lump_lowfreq() die Ausprägungen mit den geringsten Häufigkeiten automatisch so zusammen, dass “Other” nicht größer als der nächstgröße Balken wird. Wenn man also viele Ausprägungen und nicht das Bedürfnis hat, die Anzahl der Balken genau festzulegen, ist das eine bequeme Option.\n\ndataset %&gt;% \n  mutate(dmLivingSit = fct_lump_lowfreq(dmLivingSit, other_level= \"Sonstiges\")) %&gt;% \n  ggplot+\n  geom_bar(aes(dmLivingSit), fill = \"#537188\")+\n  theme_minimal()+\n  ggtitle(\"Reste so lange zusammenfassen, wie es der niedrigste Balken bleibt\")\n\n\n\n\nAber Vorsicht: Wenn eine Ausprägung so häufig ist, dass die Summe der restlichen immer noch geringer ist, macht diese Funktion wenig Sinn, wie auch in unserem Plot zu erkennen ist.\nDie Beispiele hier haben wir anhand von Balkendiagrammen und der Häufigkeit gezeigt, es funktioniert aber natürlich auch mit anderen geoms und anderen kontinuierlichen Variablen auf der Y-Achse:\n\ndataset %&gt;% \n  mutate(dmLivingSit = fct_lump_prop(dmLivingSit, prop = 0.1, other_level= \"Sonstiges\")) %&gt;% \n  group_by(dmLivingSit) %&gt;% \n  summarize(mean.gw = mean(gewissenhaftigkeit),\n            sd.gw = sd(gewissenhaftigkeit)) %&gt;% \n  ggplot(aes(dmLivingSit, mean.gw))+\n  geom_point(color = \"#537188\", size=3)+\n  geom_errorbar(aes(ymin=mean.gw-sd.gw, ymax=mean.gw+sd.gw), width=0.1, alpha=0.3)+\n  theme_minimal()+\n  ggtitle(\"Ausprägungen ab Anteil von 10%\")\n\n\n\n\n\n\n\nFaktoren umsortieren\nWenn wir mit der Anzahl der Faktoren zufrieden sind, könnte uns aber immer noch die angezeigte, alphabetische Reihenfolge stören. Hier haben wir mehrere Möglichkeiten.\n\nSortieren nach Höhe\nDie Funktion fct_infreq() ist vor allem für Barplots gedacht und sortiert diese nach Höhe.\n\ndataset %&gt;% \n  mutate(dmLivingSit = fct_infreq(dmLivingSit)) %&gt;% \n  ggplot+\n  geom_bar(aes(dmLivingSit), fill = \"#537188\")+\n  theme_minimal()+\n  ggtitle(\"Sortierung nach Höhe, absteigend\")\n\n\n\n\nFür den Fall, dass wir mit der niedrigsten Ausprägung anfangen wollen, können wir ein fct_rev() ergänzen.\n\ndataset %&gt;% \n  mutate(dmLivingSit = fct_rev(fct_infreq(dmLivingSit))) %&gt;% \n  ggplot+\n  geom_bar(aes(dmLivingSit), fill = \"#537188\")+\n  theme_minimal()+\n  ggtitle(\"Sortierung nach Höhe, aufsteigend\")\n\n\n\n\n\n\nIndividuell Sortieren\nMit dem Sortieren nach der Größe haben wir zufällig auch erreicht, dass die “Sonstiges”-Ausprägung endlich am Ende landet. Aber das lässt sich auch gezielt umsetzen, indem wir mittels fct_relevel() genau spezifizieren, in welcher Reihenfolge die Faktorstufen angezeigt werden sollen.\nDabei werden als Argumente neben dem Faktor alle Faktorstufen in der Reihenfolge genannt, in der sie auftauchen sollen: fct_relevel(dmLivingSit, \"Elternhaus\", \"eigeneWohnung\", ...). Über das Argument after= lassen sich alternativ eine oder mehrere Ausprägungen an eine gezielte Stelle platzieren.\n\ndataset %&gt;% \n  mutate(dmLivingSit = fct_relevel(dmLivingSit, \"Sonstiges\", after=Inf)) %&gt;% \n  ggplot+\n  geom_bar(aes(dmLivingSit), fill = \"#537188\")+\n  theme_minimal()+\n  ggtitle(\"Sonstiges am Ende platziert\")\n\n\n\n\n\n\nSortieren nach Ausprägung einer weiteren Variable\nEs ist zwar praktisch, die Faktorstufen individuell sortieren zu können, aber abgesehen von Sonderkategorieren doch eher aufwendig. Besonders umständlich wäre es, wenn wir die Stufen der Größe nach sortieren wollen, aber es bei der Größe um die Ausprägung einer anderen Variable gehen soll. Da müssten wir die Variable erst pro Faktorstufe berechnen, nach Größe sortieren und dann die Reihenfolge übernehmen.\nGlücklicherweise gibt es mit fct_reorder() eine einfachere Möglichkeit: Hier können wir eine Variable spezifizieren, deren Ausprägung die Reihenfolge vorgeben soll.\n\ndataset %&gt;% \n  group_by(dmLivingSit) %&gt;% \n  summarize(mean.gw = mean(gewissenhaftigkeit),\n            sd.gw = sd(gewissenhaftigkeit)) %&gt;% \n  ggplot(aes(x=fct_rev(fct_reorder(dmLivingSit, mean.gw)), mean.gw))+\n  geom_point(color = \"#537188\", size=3)+\n  geom_errorbar(aes(ymin=mean.gw-sd.gw, ymax=mean.gw+sd.gw), width=0.1, alpha=0.3)+\n  theme_minimal()+\n  ggtitle(\"Sortierung in Abhängigkeit von Gewissenhaftigkeit\")\n\n\n\n\nHier in dem Fall taucht die fct-Funktion erst im Plot auf, da nach mean.gw sortiert werden soll und diese Variable erst mal im Kontext von summarize entsteht. Es funktioniert genauso, aber wenn man die Möglichkeit hat, ist es übersichtlicher, sie bei mutate auszuführen."
  },
  {
    "objectID": "datawrangling_base.html",
    "href": "datawrangling_base.html",
    "title": "Base R",
    "section": "",
    "text": "Show code\nlibrary(tidyverse)\nlibrary(reshape2)\nlibrary(reactable)\n\npalette1 &lt;- c(\"#648fff\",\"#785ef0\",\"#dc267f\",\"#fe6100\",\"#ffb000\",\"#000000\",\"#ffffff\")\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")"
  },
  {
    "objectID": "datawrangling_base.html#iris-datensatz",
    "href": "datawrangling_base.html#iris-datensatz",
    "title": "Base R",
    "section": "Iris Datensatz",
    "text": "Iris Datensatz\nBeginnen wir also zunächst damit, Daten in R einzulesen. Wir werden heute mit dem iris Datensatz arbeiten, einem berühmten Datensatz von R.A. Fisher aus dem Jahr 1936, in dem verschiedene Eigenschaften in Bezug auf die Blütengröße verschiedener Spezies der Blume Iris enthalten sind (siehe hier).\n\n\n\nSources: Wikipedia; Danielle Langlois, Денис Анисимов & Eric Hunt\n\n\nIm Zentrum des Datensatzes steht die Größe der verschiedenen Blatttypen für die jeweilige Spezies. Dabei gibt es die Blatttypen Sepal und Petal. Die folgende Grafik verdeutlicht das etwas:\n\n\n\n\n\nDer Datensatz ist direkt im Package datasets integriert. Um allerdings zu lernen, wie wir Daten bspw. aus .csv einlesen, haben wir den Datensatz nochmal als einzelne Datei vorbereitet. Diese können wir hier herunterladen:\n Iris Datensatz \n\nExkurs: Trennzeichengetrennte Textdateien & CSV\n.csv ist ein typisches Datenformat, aus dem wir mit R Daten einlesen können. Wenn wir die Datei mit einem Textbearbeitungsprogramm öffnen, sehen wir, wie die Daten dort strukturiert sind:\n\n\n\n.csv in einem Texteditor (hier Sublime Text)\n\n\nWir sehen, dass die Daten einfach hintereinander per Text in der Datei gespeichert sind, und mit einem Trennzeichen (in diesem Fall das ,) voneinander getrennt sind. Strings werden mit \" abgespeichert. Die erste Zeile beschreibt die Spaltennamen."
  },
  {
    "objectID": "datawrangling_base.html#daten-einlesen",
    "href": "datawrangling_base.html#daten-einlesen",
    "title": "Base R",
    "section": "Daten einlesen",
    "text": "Daten einlesen\nNun wissen wir also, wie .csv Dateien funktionieren. Fangen wir also an, die Daten in R-einzulesen:\n\ndataset &lt;- read.csv(\"assets/datasets/iris.csv\")\n\nDie Funktion read.csv liest die Dateien ein. Als Parameter müssen wir lediglich den Pfad zur Datei angeben. In unserem Fall handelt es sich um einen relativen Pfad - absolute Pfade würden auch funktionieren. In unserem Fall ist die Datei wir wir wissen mit Komma (,) getrennt, daher brauchen wir nichts weiter als Parameter zu übergeben. Achtung: Das deutsche Excel speichert Dateien bei .csv oft mit Semikolon (;) als Trennzeichen ab (aufrund des Kommas als Dezimaltrennzeichen).\n\nMac User:innen aufgepasst: Wenn ihr im Finder mit der rechten Maustaste auf eine Datei klickt, und dann alt bzw. option drückt, könnt ihr direkt den Pfad zur Datei in eure Zwischenablage kopieren. Das eignet sich hier bspw. besonders gut.\n\nWenn alles geklappt hat, sollte dataset rechts in unserem Environment auftauchen. Schauen wir es uns also an. Hierzu können wir entweder rechts oben auf das Objekt klicken, damit es sich im Viewer öffnet, oder wir schauen es uns hier an:\n\ndataset\n\n\n\n  \n\n\n\nWie wir sehen gibt es mehrere Spalten für die Länge und Breite der Blätter (e.g., Sepal.Length), sowie eine Spalte mit der Spezies (Species).\nWerfen wir nun einen genaueren Blick in die Daten."
  },
  {
    "objectID": "datawrangling_base.html#daten-anschauen",
    "href": "datawrangling_base.html#daten-anschauen",
    "title": "Base R",
    "section": "Daten anschauen",
    "text": "Daten anschauen\nUm schnell einen Überblick über die Daten zu bekommen, eignet sich die summary() Funktion:\n\nsummary(dataset)\n\n       X           Sepal.Length    Sepal.Width     Petal.Length  \n Min.   :  1.00   Min.   :4.300   Min.   :2.000   Min.   :1.000  \n 1st Qu.: 38.25   1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600  \n Median : 75.50   Median :5.800   Median :3.000   Median :4.350  \n Mean   : 75.50   Mean   :5.843   Mean   :3.057   Mean   :3.758  \n 3rd Qu.:112.75   3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100  \n Max.   :150.00   Max.   :7.900   Max.   :4.400   Max.   :6.900  \n  Petal.Width      Species         \n Min.   :0.100   Length:150        \n 1st Qu.:0.300   Class :character  \n Median :1.300   Mode  :character  \n Mean   :1.199                     \n 3rd Qu.:1.800                     \n Max.   :2.500                     \n\n\nHier sehen wir direkt deskriptive Werte wie Minimum, Maximum oder Median für jede einzelne Spalte. Für die Spalte Species sehen wir allerdings lediglich, dass diese als character gespeichert ist, wenngleich es sich eigentlich um einen Faktor handelt, da wir ja bereits wissen, dass es drei Spezies gibt. Das können wir ändern:\n\ndataset$Species &lt;- as.factor(dataset$Species)\n\nFühren wir nun den Code erneut aus, sehen wir die entsprechenden Faktorlevel bzw. Ausprägungen und die jeweiligen Datenpunkte pro Ausprägung:\n\nsummary(dataset)\n\n       X           Sepal.Length    Sepal.Width     Petal.Length  \n Min.   :  1.00   Min.   :4.300   Min.   :2.000   Min.   :1.000  \n 1st Qu.: 38.25   1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600  \n Median : 75.50   Median :5.800   Median :3.000   Median :4.350  \n Mean   : 75.50   Mean   :5.843   Mean   :3.057   Mean   :3.758  \n 3rd Qu.:112.75   3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100  \n Max.   :150.00   Max.   :7.900   Max.   :4.400   Max.   :6.900  \n  Petal.Width          Species  \n Min.   :0.100   setosa    :50  \n 1st Qu.:0.300   versicolor:50  \n Median :1.300   virginica :50  \n Mean   :1.199                  \n 3rd Qu.:1.800                  \n Max.   :2.500                  \n\n\nDas Gleiche würden wir sehen, wenn wir mit der Funktion levels die Ausprägungen für die entsprechende Spalte abfragen:\n\nlevels(dataset$Species)\n\n[1] \"setosa\"     \"versicolor\" \"virginica\""
  },
  {
    "objectID": "datawrangling_base.html#deskriptive-analysen",
    "href": "datawrangling_base.html#deskriptive-analysen",
    "title": "Base R",
    "section": "Deskriptive Analysen",
    "text": "Deskriptive Analysen\nStrenggenommen hat uns die summary() Funktion bereits viele interessante Werte für alle Spalten gegeben. Falls wir dies aber für eine einzelne Spalte machen wollen, können wir dies natürlich auch tun:\n\nmean(dataset$Sepal.Length)\n\n[1] 5.843333\n\n\nWie wir sehen, kann die mean() Funktion mit einer Spalte eines Dataframes (über den $-Operator ausgewählt) arbeiten, und gibt uns den entsprechenden Mittelwert aus. Gleich verhält es sich mit der Standardabweichung:\n\nsd(dataset$Sepal.Length)\n\n[1] 0.8280661\n\n\nWie wir in der ersten Seminarstunde bereits gesagt haben, bietet R als Statistiksoftware natürlich eine Vielzahl eingebauter Standard-Funktionen. So können wir etwa auch gleich die Korrelation zwischen Sepal.Width und Sepal.Length berechnen…\n\ncor(dataset$Sepal.Length,dataset$Sepal.Width, method = \"pearson\")\n\n[1] -0.1175698\n\n\n… oder die Quantile ausgeben lassen:\n\nquantile(dataset$Sepal.Length)\n\n  0%  25%  50%  75% 100% \n 4.3  5.1  5.8  6.4  7.9 \n\n\nDas sind natürlich alles nur Beispiele der im base Package enthaltenen Funktionen - alle weiteren können wir bspw. in der Dokumentation oder über help(base) finden."
  },
  {
    "objectID": "datawrangling_base.html#datensatz-aufteilen",
    "href": "datawrangling_base.html#datensatz-aufteilen",
    "title": "Base R",
    "section": "Datensatz aufteilen",
    "text": "Datensatz aufteilen\nAngenommen, wir wollen die Spalte Species von den anderen Spalten trennen, und in einem separaten Aufgabenblatt abspeichern. Dies können wir über die $ und &lt;- Operatoren machen:\n\ndataset_species &lt;- dataset$Species\n\nDies speichert die entsprechende Spalte als Objekt dataset_species in unserem Environment. Dies geschieht als Vektor des Typs factor. Die Länge des Vektors entspricht natürlich der Anzahl an Observations:\n\nlength(dataset_species)\n\n[1] 150\n\n\nNun wollen wir einen Schritt weitergehen, und nicht nur einzelne Spalten extrahieren, sondern unseren Datensatz auf Basis gewisser Kriterien filtern, bzw. ein Subset bilden. Base R bietet dafür die subset() Funktion. Deren Syntax ist folgendermaßen:\n\ndataset_filtered &lt;- subset(dataset, Sepal.Width &gt; 3)\n\nWir definieren das betreffende Objekt dataset, sowie die Spalte, nach der wir filtern wollen (Sepal.Width) und unsere Bedingung (&gt; 3).\nWir wollen aber noch weiter spezifizieren. Angenommen, wir wollen, dass zusätzlich nur Blumen der Spezies setosa im Datensatz enthalten sind, und wir nur die Spalten Sepal.Width und Sepal.Length betrachten wollen:\n\ndataset_filtered2 &lt;- subset(dataset, Sepal.Width &gt; 3 & Species == \"setosa\",select = c(Sepal.Width,Sepal.Length,Species))\n\nDer obige Befehl hat das Objekt dataset_filtered2 erzeugt, welches die entsprechenden Filterungen beinhaltet.\nWir haben nun also gelernt, wie wir sogenannte Subsets von Dataframes auf Basis von Variablenausprägungen und Spalten erzeugen können, und diese enstprechend in unserem Environment speichern können.\nWenn wir nun allerdings einen Blick in unser Environment werfen, und uns vorstellen, wie dieses nach einer R-Session aussehen könnte, stellt sich vielleicht eine Frage: Wie können wir den Überblick behalten?\n\n\n\nHow the author imagines Environment overload\n\n\nDabei, sowie bei vielen anderen Dingen die mit Data Wrangling zu tun haben, hilft uns das dplyr package. Dazu auf der nächsten Seite mehr."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction & Basics",
    "section": "",
    "text": "Verteilung Vorwissen"
  },
  {
    "objectID": "intro.html#vorstellungsrunde",
    "href": "intro.html#vorstellungsrunde",
    "title": "Introduction & Basics",
    "section": "",
    "text": "Verteilung Vorwissen"
  },
  {
    "objectID": "intro.html#vorstellungsrunde-1",
    "href": "intro.html#vorstellungsrunde-1",
    "title": "Introduction & Basics",
    "section": "Vorstellungsrunde",
    "text": "Vorstellungsrunde\nVorwissen Programmiersprachen"
  },
  {
    "objectID": "intro.html#vorstellungsrunde-2",
    "href": "intro.html#vorstellungsrunde-2",
    "title": "Introduction & Basics",
    "section": "Vorstellungsrunde",
    "text": "Vorstellungsrunde\nErwartungen ans Seminar"
  },
  {
    "objectID": "intro.html#ziele-des-seminars",
    "href": "intro.html#ziele-des-seminars",
    "title": "Introduction & Basics",
    "section": "Ziele des Seminars",
    "text": "Ziele des Seminars\n\nDaten einlesen, bearbeiten, grafisch darstellen und statistisch auswerten\nEinblick in Breite und Tiefe, die R bietet\nGrundlagen schaffen, auf die ihr selbstständig aufbauen könnt (z.B. für Masterarbeit oder eigene Projekte)"
  },
  {
    "objectID": "intro.html#zeitplan",
    "href": "intro.html#zeitplan",
    "title": "Introduction & Basics",
    "section": "Zeitplan",
    "text": "Zeitplan\n\n7-8 Sitzungen, die jeweils 3h dauern\n\nMittagspause?\n\n31.05 vrsl. letzte, kürzere Sitzung\nInhaltlich: Basics, Deskriptives, Inferenzstatistik, Auswertung von Forschungsdaten\ninnerhalb der Sitzung: abwechselnd Blöcke von Theorie + Praxis\nWebsite für Präsentationsinhalte, Lösungen, Cheatsheets usw. (selbst Notizen machen lohnt sich auch!)"
  },
  {
    "objectID": "intro.html#prüfungsleistung",
    "href": "intro.html#prüfungsleistung",
    "title": "Introduction & Basics",
    "section": "Prüfungsleistung",
    "text": "Prüfungsleistung\n\nWöchentliche “Hausaufgaben”: Wiederholen und erweitern das im Seminar Gelernte\n\nAbgabe per Moodle spätestens am Sonntag vor der nächsten Sitzung\nwerden benotet, am Ende per Durchschnitt zusammengefasst und machen gemeinsam 50% der Note aus\nAbgabe mit der schlechtesten Benotung wird aus der Durchschnittsberechnung entfernt\nEinzelarbeit (Plagiatscheck)\nWir laden nach Abgabe “Musterlösung” hoch\n\n1x Hausaufgabe vorstellen (unbenotet)\nBericht zu (neuem) Datensatz einreichen (50% der Note) - mehr Infos folgen\n\nEs gibt keine Anwesenheitspflicht, wir empfehlen aber immer da zu sein, da euch die Prüfungsleistungen dann leichter fallen werden."
  },
  {
    "objectID": "intro.html#was-ist-r",
    "href": "intro.html#was-ist-r",
    "title": "Introduction & Basics",
    "section": "Was ist R?",
    "text": "Was ist R?\n\nProgrammiersprache (und -oberfläche) für statistische Berechnungen und Grafiken\nopen-source & kostenlos\ngroße Community, die ständig Funktionen erweitert und bei Problemen hilft\nR Studio ist die meistgenutzte Benutzeroberfläche und macht die Handhabung einfacher"
  },
  {
    "objectID": "intro.html#user-interface",
    "href": "intro.html#user-interface",
    "title": "Introduction & Basics",
    "section": "User Interface",
    "text": "User Interface\n\n\noben links: Code\nunten links: Konsole - ausgeführter Code und Output\n\nhier lässt sich auch Code eintippen, dieser kann allerdings nicht gespeichert werden\n\noben rechts: u.a. Environment - welche Objekte und Daten exisitieren\nunten rechts: Dateizugriff, Plotanzeige, Hilfeanzeige, Package-Übersicht"
  },
  {
    "objectID": "intro.html#code-erstellen-ausführen",
    "href": "intro.html#code-erstellen-ausführen",
    "title": "Introduction & Basics",
    "section": "Code erstellen + ausführen",
    "text": "Code erstellen + ausführen\n\nÖffnet das File das ihr auf der Seite mit unseren Installationstips heruntergeladen habt (vielleicht ist es auch noch offen)\nIn dem File ist nur die Zeile ohne #ausführbarer Code. Wie hier geschehen, lassen sich mit # Kommentare in den Code hinzufügen, die dem Code Struktur geben oder erklären, was hier passieren soll\nFührt die Zeile Code aus, in dem ihr euren Cursor in die Zeile stellt und STRG+ENTER drückt\nÜber das Markieren von mehreren/allen Zeilen werden die entsprechenden Zeilen nacheinander ausgeführt\n\n\n# Erstes Skript zum Seminar Medienbasierte Wissenskonstruktion: R\n\n# Satz in Konsole printen:\nprint(paste0(\"Ich habe \",R.version$version.string,\" und RStudio v\",rstudioapi::versionInfo()$version))\n\n\n\n[1] \"Ich habe R version 4.2.1 (2022-06-23 ucrt) und RStudio v2023.3.0.386\""
  },
  {
    "objectID": "intro.html#r-vs.-quarto",
    "href": "intro.html#r-vs.-quarto",
    "title": "Introduction & Basics",
    "section": ".R vs. Quarto",
    "text": ".R vs. Quarto\n\nR’s Standardformat sind .R-Dateien\nFür “echte Arbeit” mit R sind Quarto-Dokumente meistens nützlicher:\n\nermöglichen Export/Rendern in andere Dateiformate (html, pdf, docx, pptx,…)\nermöglichen neben Code-Abschnitte auch Text-Abschnitte, die formatiert werden können (wie LaTeX)\nermöglichen einzustellen, ob nur Code, nur Output, oder Code+Output angezeigt werden soll\nAuswertung & Bericht können somit im gleichen Dokument geschehen\nDiese Präsentation ist auch in R entstanden!"
  },
  {
    "objectID": "intro.html#r-vs.-quarto-1",
    "href": "intro.html#r-vs.-quarto-1",
    "title": "Introduction & Basics",
    "section": ".R vs. Quarto",
    "text": ".R vs. Quarto"
  },
  {
    "objectID": "intro.html#quarto---dokument-aufsetzen",
    "href": "intro.html#quarto---dokument-aufsetzen",
    "title": "Introduction & Basics",
    "section": "Quarto - Dokument aufsetzen",
    "text": "Quarto - Dokument aufsetzen\n\nErstellt ein Quarto-Dokument über File &gt; New File &gt; Quarto Document\nIm auftauchenden Fenster könnt ihr einstellen:\n\nTitel & AutorIn des Dokuments\ngewünschtes Output-Format (hier: html)\nwomit das Quarto-Dokument gerendert werden soll (hier: knitr)"
  },
  {
    "objectID": "intro.html#quarto---im-dokument",
    "href": "intro.html#quarto---im-dokument",
    "title": "Introduction & Basics",
    "section": "Quarto - im Dokument",
    "text": "Quarto - im Dokument\n\nDer Kasten oben heißt “YAML-header” - dort sind die Rendereinstellungen (Titel, Speicherort, Format, Schriftgröße usw.)\nIm Feld darunter kann Text geschrieben und formatiert werden\n\nSource: Format lässt sich über bestimmte Zeichen einstellen\nVisual: Format lässt sich über Markieren + Auswählen einstellen\n\nCode kann man nur innerhalb von Chunks einfügen (oben rechts auf das grün unterlegte C klicken oder STRG+ALT+I)\nIm grau unterlegten Kästchen lässt sich “normaler” R-Code schreiben und ausführen\n\n“Vorschau” über den Play-Button\nÜber #| am Zeilenbeginn lässt sich einstellen, was mit Code + Output beim Rendern passieren soll\n\nÜber “Render” wird das Dokument in das Zielformat umgewandelt\nIn den meisten Fällen rendert man nur gegen Ende und nutzt während der Analyse die Chunk-Vorschau"
  },
  {
    "objectID": "intro.html#quarto",
    "href": "intro.html#quarto",
    "title": "Introduction & Basics",
    "section": "Quarto",
    "text": "Quarto\n\nErstellt zwei Code-Chunks\nFügt bei einem der Chunks in die erste Zeile #| echo: TRUE\nFügt beim anderen Chunk in die erste Zeile #| echo: FALSE\nSchreibt in den Text- und in die Code-Bereiche 4+5\nRendert das Dokument\n\nOutput ohne Code:\n\n4+5\n\n[1] 9\n\n\nOutput mit Code:\n\n4+5\n\n[1] 9\n\n\nReiner Text:\n4+5"
  },
  {
    "objectID": "intro.html#rechenoperatoren",
    "href": "intro.html#rechenoperatoren",
    "title": "Introduction & Basics",
    "section": "(Rechen)Operatoren",
    "text": "(Rechen)Operatoren\n\nDezimaltrennzeichen: Punkt . , nicht Komma ,\n+ - * /\nExponent: ^\nlogisch gleich: ==\nlogisch ungleich: !=\nlogisches und: &\nlogisches oder: |\nlogisches exklusives oder: xor\nnicht: !"
  },
  {
    "objectID": "intro.html#objekte",
    "href": "intro.html#objekte",
    "title": "Introduction & Basics",
    "section": "Objekte",
    "text": "Objekte\n\nAnstatt nur Code durchzuführen und das Ergebnis in der Konsole abzulesen, können wir auch alles mögliche als Objekte speichern\nKonzept: links mit Objektname beginnen, dann den Zuweisungsoperator und anschließend das, was als Objekt gespeichert werden soll\n\n\nergebnis &lt;- 3+5\n\n\nR führt den Code rechts vom Pfeil aus - das Objekt ist “8”, nicht “3+5”!\nObjekte lassen sich abrufen, indem man ihren Namen schreibt und ausführt\n\n\nergebnis\n\n[1] 8\n\n\n\nR ist case-sensitive, d.h. Groß-und Kleinschreibung muss übereinstimmen!\nObjekte lassen sich auch oben rechts im Environment einsehen (wird aber irgendwann unübersichtlich…)\nErstellt selbst eine Rechenaufgabe und speichert sie als Objekt!\nWas passiert, wenn man den gleichen Objektnamen erneut verwendet?"
  },
  {
    "objectID": "intro.html#objekte-1",
    "href": "intro.html#objekte-1",
    "title": "Introduction & Basics",
    "section": "Objekte",
    "text": "Objekte\n\nWarum ist Objekte erstellen wichtig?\n\nFür R ist jeder Output sonst “flüchtig”: Es wird nicht wirklich etwas verändert\nZwischenergebnisse überprüfen\nParameter festlegen\nFlüchtigkeitsfehler vermeiden\nuvm.\n\nShortcut für &lt;- : ALT+-\nPfeil in die andere Richtung -&gt; und Gleichheitszeichen = funktionieren nicht bzw. sollten nicht verwendet werden!"
  },
  {
    "objectID": "intro.html#funktionen",
    "href": "intro.html#funktionen",
    "title": "Introduction & Basics",
    "section": "Funktionen",
    "text": "Funktionen\n\nMithilfe von Funktionen lassen sich Objekte/Daten bearbeiten\nBeispiel: round(3.45, digits = 1) rundet 3.45 auf die erste Nachkommastelle\n\nam Anfang steht der Name der Funktion (auch hier: case-sensitive)\ndie Argumente der Funktion werden von runden Klammern eingerahmt\nArgumente sind bspw. die Daten, auf die die Funktion angewendet werden soll, aber auch weitere Einstellungen der Funktion, z.B. auf wie viele Nachkommastellen gerundet werden soll\nsie folgen der Syntax Argument = Angabe\nArgumente werden durch Komma getrennt\nmanche Argumente sind zwingend notwendig, viele aber optional\ndie Argumente einer Funktion haben eine bestimmte Reihenfolge, daher kann man den Argumentnamen häufig weglassen, z.B. round(3.45, 1) (solange man die Funktion noch nicht gut kennt, oder auch um den Überblick zu behalten, besser die Argumente explizit nennen)"
  },
  {
    "objectID": "intro.html#hilfe-in-r",
    "href": "intro.html#hilfe-in-r",
    "title": "Introduction & Basics",
    "section": "Hilfe in R",
    "text": "Hilfe in R\n\nÜber help(Funktion) wird die Hilfeseite/Dokumentation der Funktion “Funktion” aufgerufen\n\ngenauso funktioniert ?Funktion\nauf der Hilfeseite stehen mögliche Argumente, ihre Reihenfolge und in welchem Format das Argument angegeben wird (wird eine Zahl oder ein Wort erwartet?)\n\nFindet mit der Hilfe-Funktion heraus, was mean() macht und welche Argumente es hat\n\n\n?mean\n#oder\nhelp(mean)"
  },
  {
    "objectID": "intro.html#hilfe-außerhalb-von-r",
    "href": "intro.html#hilfe-außerhalb-von-r",
    "title": "Introduction & Basics",
    "section": "Hilfe außerhalb von R",
    "text": "Hilfe außerhalb von R\n\nFehlermeldungen lesen und versuchen, Problem zu verstehen\ndas Internet!\n\nFehlermeldung bei Google einfügen und Links durchsuchen\nStack Overflow\nStatt selbst eine Frage einreichen zu müssen findet sich fast immer ein Thread mit dem gleichen/ähnlichen Problem und möglichen Lösungen\n\nDanach: Lösung für sich dokumentieren"
  },
  {
    "objectID": "intro.html#packages",
    "href": "intro.html#packages",
    "title": "Introduction & Basics",
    "section": "Packages",
    "text": "Packages\n\nFrisch nach der Installation besteht R aus Base R und einigen wenigen Erweiterungen\nDurch die Installation von weiteren Paketen/Packages lassen sich die Funktionen fast beliebig erweitern: Jedes Package enthält Funktionen und/oder Datensätze, meistens zu bestimmten Analysen, mehr oder weniger nischig\nIm Fenster unten rechts unter “Packages” könnt ihr sehen, welche Packages schon installiert und/oder aktiviert sind\nNeue Packages lassen sich mit install.packages(\"package-name\") installieren und mit library(package-name) aktivieren (auf die Anführungszeichen achten!)\nMan kann neue Funktionen auch selbst schreiben, das ist aber meistens nur in Sonderfällen notwendig"
  },
  {
    "objectID": "intro.html#packages-1",
    "href": "intro.html#packages-1",
    "title": "Introduction & Basics",
    "section": "Packages",
    "text": "Packages\n\nInstalliert und aktiviert das Package psych (Erinnerung: install.packages()& library())\nWendet die Hilfefunktion help() auf sich selbst an, um herauszufinden, wie ihr mit ihr Informationen über Packages bekommt\nSchaut euch mit dem neuen Wissen an, welche Funktionen das Package psych beinhaltet\n\n\n# Installieren\ninstall.packages(\"psych\")\n# Aktivieren\nlibrary(psych)\n\n# Mehr über help() herausfinden\nhelp(help) # Inception!\n# Aha, das Argument \"package\" kann mir weiterhelfen!\n\n# Über psych informieren\nhelp(package=psych)"
  },
  {
    "objectID": "intro.html#datentypen",
    "href": "intro.html#datentypen",
    "title": "Introduction & Basics",
    "section": "Datentypen",
    "text": "Datentypen\n\nBasic:\n\nnumeric: Zahlen (integer, double)\ncharacter: Buchstabenfolgen (strings)\nfactor: z.B. Faktorstufen eines Faktors\nlogical: TRUE, FALSE (vgl. 1 & 0)\n\nVektor: eindimensionale “Aufzählung” von Elementen\nMatrix: ein- bis zweidimensionale Aufzählung von Elementen\nArray: beliebig-dimensionale Aufzählung von Elementen\nListe: kann verschiedene Datentypen und Strukturen enthalten (z.B. Ergebnis einer ANOVA)\nDataframe, Tibble: Spezifische Formate, um Datensätze darzustellen\n\nKönnen pro Spalte unterschiedliche Datentypen beinhalten\nStandardformat, wenn man von extern Daten in R reinlädt"
  },
  {
    "objectID": "intro.html#datentypen-1",
    "href": "intro.html#datentypen-1",
    "title": "Introduction & Basics",
    "section": "Datentypen",
    "text": "Datentypen\nDer Datensatz aus der Umfrage sieht als Vorschau in der Konsole so aus:\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nNew names:\nRows: 4 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): sex, r_problems\ndbl  (5): ...1, id, lastpage, age, hopes_perc\nlgl  (3): r_knowledge, r_knowledge_amount, programming_knowledge\ndttm (1): submitdate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n# A tibble: 4 × 7\n     id alter geschlecht r.vorwissen r.wieviel.vorwissen r.probleme\n  &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;      &lt;lgl&gt;       &lt;lgl&gt;               &lt;chr&gt;     \n1     1    NA &lt;NA&gt;       NA          NA                  &lt;NA&gt;      \n2     2    12 female     TRUE        TRUE                Test      \n3     3    19 female     TRUE        TRUE                kp        \n4     4    20 male       TRUE        TRUE                problemz  \n# ℹ 1 more variable: programmier.vorwissen &lt;lgl&gt;\n\n\n\n\nZeile: Ein Tibble mit diesen Dimensionen wird angezeigt\n\n\nZeile: Spaltennamen\n\n\nZeile: Datentypen\n\nfolgende Zeilen: Daten\nin der Konsole werden Daten meistens nur gekürzt angezeigt\nÜber view(daten) öffnet sich eine Tabellenübersicht"
  },
  {
    "objectID": "intro.html#bestimmte-daten-abrufen",
    "href": "intro.html#bestimmte-daten-abrufen",
    "title": "Introduction & Basics",
    "section": "Bestimmte Daten abrufen",
    "text": "Bestimmte Daten abrufen\n\nIn eckigen Klammern nach dem Objektnamen lassen sich die “Koordinaten” angeben\n\n\numfrage[2,3] # zeigt den Wert der zweiten Zeile und dritten Spalte\n\n# A tibble: 1 × 1\n  geschlecht\n  &lt;fct&gt;     \n1 female    \n\n\n\nStatt Zahlen können auch Spaltennamen benutzt werden\n\n\numfrage[3, \"geschlecht\"]\n\n# A tibble: 1 × 1\n  geschlecht\n  &lt;fct&gt;     \n1 female    \n\n\n\nSpalten lassen sich auch direkt über $ ansprechen.\n\n\numfrage$geschlecht\n\n[1] &lt;NA&gt;   female female male  \nLevels: female male"
  },
  {
    "objectID": "intro.html#bestimmte-daten-abrufen-1",
    "href": "intro.html#bestimmte-daten-abrufen-1",
    "title": "Introduction & Basics",
    "section": "Bestimmte Daten abrufen",
    "text": "Bestimmte Daten abrufen\n\nUm alles anzeigen zu lassen, kann man die Koordinate “leer” lassen\n\n\numfrage[ , \"geschlecht\"]\n\n# A tibble: 4 × 1\n  geschlecht\n  &lt;fct&gt;     \n1 &lt;NA&gt;      \n2 female    \n3 female    \n4 male      \n\n\n\numfrage[ , ]\n\n# A tibble: 4 × 7\n     id alter geschlecht r.vorwissen r.wieviel.vorwissen r.probleme\n  &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;      &lt;lgl&gt;       &lt;lgl&gt;               &lt;chr&gt;     \n1     1    NA &lt;NA&gt;       NA          NA                  &lt;NA&gt;      \n2     2    12 female     TRUE        TRUE                Test      \n3     3    19 female     TRUE        TRUE                kp        \n4     4    20 male       TRUE        TRUE                problemz  \n# ℹ 1 more variable: programmier.vorwissen &lt;lgl&gt;"
  },
  {
    "objectID": "intro.html#datentypen-2",
    "href": "intro.html#datentypen-2",
    "title": "Introduction & Basics",
    "section": "Datentypen",
    "text": "Datentypen\n\nR erkennt häufig von selbst, welcher Datentyp gemeint ist\nHäufig ist es aber sinnvoll, noch mal “von Hand” zu überprüfen und/oder den richtigen Datentyp festzulegen\ntypeof() um den Datentyp zu erfragen\nis.numeric() / is.factor() / is.logical() / is.character() um einen bestimmten Datentyp zu testen\nas.numeric() usw. nutzen, um den Datentyp zu verändern\n\n\numfrage$r.probleme &lt;- as.factor(umfrage$r.probleme)\n# Die umgewandelte Spalte überschreibt die alte Spalte!"
  },
  {
    "objectID": "intro.html#neue-daten-erstellen",
    "href": "intro.html#neue-daten-erstellen",
    "title": "Introduction & Basics",
    "section": "Neue Daten erstellen",
    "text": "Neue Daten erstellen\n\nVektoren: c()\nKombiniert alle aufgezählten Objekte\n\n\nvektor &lt;- c(1,3,5)\nvektor\n\n[1] 1 3 5\n\n\n\nStrings müssen in Anführungszeichen gesetzt werden, damit R sie nicht mit Objekten verwechselt.\nIm Output erkennt man Strings auch an den Anführungszeichen\n\n\nstring &lt;- \"hallo\"\nstring\n\n[1] \"hallo\""
  },
  {
    "objectID": "intro.html#unterschiede-zu-anderen-programmiersprachen",
    "href": "intro.html#unterschiede-zu-anderen-programmiersprachen",
    "title": "Introduction & Basics",
    "section": "Unterschiede zu anderen Programmiersprachen",
    "text": "Unterschiede zu anderen Programmiersprachen\n\nkeine Unterscheidung zwischen integer und double\nverwendet keine Pointer\ntendenziell: Viele Angelegenheiten, bei denen andere Sprachen empfindlich sind, sind in R simpler aufgebaut"
  },
  {
    "objectID": "content3.html",
    "href": "content3.html",
    "title": "Inferenzstatistik in R",
    "section": "",
    "text": "library(tidyverse)\nlibrary(rstatix)\nlibrary(ggplot2)\nlibrary(car)\nlibrary(nycflights13)"
  },
  {
    "objectID": "content3.html#die-qual-der-wahl",
    "href": "content3.html#die-qual-der-wahl",
    "title": "Inferenzstatistik in R",
    "section": "Die Qual der Wahl",
    "text": "Die Qual der Wahl\nÄhnlich wie ihr letzte Woche die Unterschiede zwischen base R und dplyr kennengelernt habt, gibt es auch für die inferenzstatistischen Verfahren verschiedene Packages und Funktionen, und damit Vorgehensweisen.\nGrundsätzlich gibt es hier keine richtigen oder falschen Packages, stattdessen hängt es vom Kontext ab. Manche Packages ermöglichen ziemlich komplexe Analysen, und um sich die als Möglichkeit offen zu lassen, kann es sich lohnen, auch direkt die “einfachen” Analysen eines Projekts damit zu rechnen, damit die verschiedenen Analysen kompatibler miteinander sind. Manche Packages sind von der Syntax möglichst eingängig gestaltet, sodass man als Anfänger besser abgeholt wird. Wiederum andere bieten die gleichen Funktionen, verwenden aber leicht unterschiedliche Berechnungsmethoden, da die Methoden für verschiedene Kontexte verschieden robust sind.\nMeistens macht es Sinn mit dem, was man kennt (bzw. was ihr hier kennenlernt), anzufangen. Wenn sich dann eine Datensituation ergibt, die komplexer ist, lässt sich immer noch im Internet recherchieren, welches Package/welche Funktion vielleicht besser geeignet sind. Die Hürde wird dann weniger euer R-Wissen sein, sondern eher euer allgemeines Statistik-Wissen. Unserer Erfahrung nach verbringt man eher mehr Zeit mit der Recherche von statistischen Methoden statt R-Funktionen.\nWie machen wir es hier? Wir zeigen euch die Funktionen von base R und vom Package rstatix, welches bewusst so gestaltet ist, damit es gut mit der Pipe und den dplyr-Funktionen funktioniert."
  },
  {
    "objectID": "content3.html#voraussetzungen",
    "href": "content3.html#voraussetzungen",
    "title": "Inferenzstatistik in R",
    "section": "Voraussetzungen",
    "text": "Voraussetzungen\nWie ihr wisst, gibt es für die sogennannten parametrischen Testverfahren bestimmte Voraussetzungen, die die Daten erfüllen sollten, damit die Tests anwendbar sind und die Auswertung angemessen. Vorbildlich wie wir sind, schauen wir uns diese Tests für die Voraussetzungen zuerst an.\n\nNormalverteilung\n\nplot(dnorm, xlim=c(-3,3))\n\n\n\n\n\n# base\nshapiro.test(Daten$Spalte)\n\n# rstatix\ndata %&gt;% \n  shapiro_test(Spalte)\n\nDer Shapiro-Wilk Test testet, ob die Daten signifikant von einer Normalverteilung abweichen. Wenn er signifikant wird, sind die Daten also nicht normalverteilt.\nJe größer die Stichprobe ist, desto schlechter funktioniert der Shapiro-Wilk Test, da er dann tendenziell zu schnell signifikant wird, obwohl die Daten einigermaßen normalverteilt sind. Daher bietet es sich an, ab ca. n &gt; 50 stattdessen einen QQ-Plot anzuschauen. Ab n &gt; 5000 würde der Test nicht mehr ausgeführt werden.\n\n# normalverteilte Werte erzeugen\nvec.norm &lt;- rnorm(100, mean = 0, sd=1)\n\n# QQ-Plot\nggplot()+\n  geom_qq(aes(sample=vec.norm))+\n  theme_minimal()\n\n\n\n\n\nshapiro.test(vec.norm)\n\n\n    Shapiro-Wilk normality test\n\ndata:  vec.norm\nW = 0.9863, p-value = 0.3925\n\n\nBei einem QQ-Plot werden die Werte, die wir testen, standardisiert und dann gegen die “echte” Standardnormalverteilung geplottet. Wenn unsere Daten perfekt (standard)normalverteilt wären, würde sich eine perfekte 45°-Gerade ergeben. Unsere künstlichen Daten oben sind auf jeden Fall nah genug an der “perfekten Gerade” dran.\nHier noch ein Beispiel, in dem die Daten nicht normalverteilt sind:\n\n# Daten aus nycflights13 package\nggplot(flights)+\n  geom_qq(aes(sample=air_time))+\n  theme_minimal()\n\nWarning: Removed 9430 rows containing non-finite values (`stat_qq()`).\n\n\n\n\nflights\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;      &lt;int&gt;   &lt;dbl&gt;   &lt;int&gt;   &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;  \n 1  2013     1     1      517        515       2     830     819      11 UA     \n 2  2013     1     1      533        529       4     850     830      20 UA     \n 3  2013     1     1      542        540       2     923     850      33 AA     \n 4  2013     1     1      544        545      -1    1004    1022     -18 B6     \n 5  2013     1     1      554        600      -6     812     837     -25 DL     \n 6  2013     1     1      554        558      -4     740     728      12 UA     \n 7  2013     1     1      555        600      -5     913     854      19 B6     \n 8  2013     1     1      557        600      -3     709     723     -14 EV     \n 9  2013     1     1      557        600      -3     838     846      -8 B6     \n10  2013     1     1      558        600      -2     753     745       8 AA     \n# … with 336,766 more rows, 9 more variables: flight &lt;int&gt;, tailnum &lt;chr&gt;,\n#   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n\nggplot(flights)+\n  geom_qq(aes(sample=dep_delay))+\n  theme_minimal()\n\nWarning: Removed 8255 rows containing non-finite values (`stat_qq()`).\n\n\n\n\nhist(flights$dep_delay)\n\n\n\n\n\n\nVarianzhomogenität\nBei der Varianzhomogenität geht es darum, dass unterschiedliche Gruppen bezüglich einer Variable die in etwa gleiche Varianz haben.\n\n# rstatix\ndata %&gt;% \n  levene_test(abhängigeVariable ~ Gruppe)\n\nflights %&gt;% \n  levene_test(dep_delay ~ factor(month))"
  },
  {
    "objectID": "content3.html#gruppenvergleiche",
    "href": "content3.html#gruppenvergleiche",
    "title": "Inferenzstatistik in R",
    "section": "Gruppenvergleiche",
    "text": "Gruppenvergleiche\n\nt-Test\nZiel: zwei Gruppen vergleichen\nDatenstruktur: kontinuierliche abhängige Variable & dichotome Gruppenvariable\nZur Veranschaulichung verwenden wir hier den Datensatz ToothGrowth: Hier wurde der Zahnwachstum von Meerschweinchen in Abhängigkeit von verabreichtem Vitamin C untersucht. Die Stichprobe besteht aus 60 Meerschweinchen und sowohl die Verabreichungsmethode (Orangensaft vs. Ascorbinsäure) als auch die Vitamin C-Dosis (0.5, 1 oder 2mg pro Tag) wurden variiert. Da wir beim t-Test nur mit zwei Gruppen arbeiten können, schauen wir uns jetzt nur die Unterschiede durch die Verabreichungsmethode an.\n\nsummary(ToothGrowth)\n\n      len        supp         dose      \n Min.   : 4.20   OJ:30   Min.   :0.500  \n 1st Qu.:13.07   VC:30   1st Qu.:0.500  \n Median :19.25           Median :1.000  \n Mean   :18.81           Mean   :1.167  \n 3rd Qu.:25.27           3rd Qu.:2.000  \n Max.   :33.90           Max.   :2.000  \n\nview(ToothGrowth)\n\nToothGrowth %&gt;% \n  get_summary_stats()\n\n# A tibble: 2 × 13\n  variable     n   min   max median    q1    q3   iqr   mad  mean    sd    se\n  &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 len         60   4.2  33.9   19.2  13.1  25.3  12.2 9.04  18.8  7.65  0.988\n2 dose        60   0.5   2      1     0.5   2     1.5 0.741  1.17 0.629 0.081\n# … with 1 more variable: ci &lt;dbl&gt;\n\ntooth &lt;- ToothGrowth %&gt;% \n            mutate(dose = as.factor(dose))\n\n\nggplot(tooth)+\n  geom_boxplot(aes(x=supp, y=len))+\n  theme_minimal()\n\n\n\n\n\nFunktionsaufbau\n\n# Base: Format 1\nt.test(AV ~ group, data)\n\n# Base: Format 2\nt.test(daten$group1, daten$group2)\n\n# rstatix\ndata %&gt;% \n  t_test(AV ~ group)\n\nDie Tilde ~ ist das Zeichen in R, um einen Zusammenhang, eine Abhängigkeit oder ein Modell zu symbolisieren.\nNatürlich gibt es innerhalb von t.test()/t_test() mit Argumenten Möglichkeiten um\n\neinen t-Test für eine Stichprobe durchzuführen: z.B. mu = 100\neinen t-Test für abhängige Stichproben durchzuführen: paired = TRUE\neinen gerichteten t-Test durchzuführen: z.B. alternative = \"less\"\nbei nicht vorliegender Varianzhomogenität stattdessen den Welch-Test anzuwenden: var.equal = FALSE\n\n\n\nFunktionsanwendung\n\n# Base: Format 1\nt.base &lt;- t.test(len ~ supp, tooth, var.equal = TRUE)\nt.base\n\n\n    Two Sample t-test\n\ndata:  len by supp\nt = 1.9153, df = 58, p-value = 0.06039\nalternative hypothesis: true difference in means between group OJ and group VC is not equal to 0\n95 percent confidence interval:\n -0.1670064  7.5670064\nsample estimates:\nmean in group OJ mean in group VC \n        20.66333         16.96333 \n\n# rstatix\nt.rstatix &lt;- tooth %&gt;% \n                t_test(len ~ supp,var.equal = TRUE)\nt.rstatix\n\n# A tibble: 1 × 8\n  .y.   group1 group2    n1    n2 statistic    df      p\n* &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 len   OJ     VC        30    30      1.92    58 0.0604\n\n# Normalerweise würde ich die Ergebnisse nicht als Objekte speichern, dient hier nur der Demonstration.\n\nUnterschied zwischen base und rstatix:\n\nListe vs. tibble\nbase: Zusatzinfos - Zuordnung, Verständnis\nrstatix: Formatierung als Tabelle\nrstatix garantiert pipe-Kompatibilität, funktioniert bei Base-Funktionen nicht immer (aber manchmal)\n\nEuch wird im Laufe der kommenden Funktionen auffallen, dass die rstatix Funktionen netterweise fast immer exakt so heißen wie die base Funktionen, nur das statt . ein _ verwendet wird: t.test() vs. t_test()\n\n\nNonparametrisch: Wilcoxon Rank Sum Test\nReminder: Wenn Voraussetzungen nicht erfüllt sein sollten.\n\n# Base\nwilcox.test(len ~ supp, tooth)\n\nWarning in wilcox.test.default(x = c(15.2, 21.5, 17.6, 9.7, 14.5, 10, 8.2, :\ncannot compute exact p-value with ties\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  len by supp\nW = 575.5, p-value = 0.06449\nalternative hypothesis: true location shift is not equal to 0\n\n# rstatix\ntooth %&gt;% \n  wilcox_test(len ~ supp)\n\n# A tibble: 1 × 7\n  .y.   group1 group2    n1    n2 statistic      p\n* &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n1 len   OJ     VC        30    30      576. 0.0645\n\n\n\n\n\nANOVA\nZiel: Zwei oder mehr Gruppen vergleichen.\nWir können hier bei den Meerschweinchendaten bleiben, da die Dosis-Variable drei Faktorstufen hat.\n\n#base\ntooth.aov &lt;- aov(len ~ dose, tooth)\nsummary(tooth.aov)\n\n            Df Sum Sq Mean Sq F value   Pr(&gt;F)    \ndose         2   2426    1213   67.42 9.53e-16 ***\nResiduals   57   1026      18                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n#funktioniert nicht:\n\n#tooth %&gt;% \n#  aov(len ~ dose) %&gt;% \n#  summary()\n\n\n#rstatix\n## Schreibweise 1\ntooth %&gt;%\n  anova_test(len ~ dose)\n\nANOVA Table (type II tests)\n\n  Effect DFn DFd      F        p p&lt;.05   ges\n1   dose   2  57 67.416 9.53e-16     * 0.703\n\n## Schreibweise 2\ntooth %&gt;%\n  anova_test(dv = len,\n             between = dose)\n\nANOVA Table (type II tests)\n\n  Effect DFn DFd      F        p p&lt;.05   ges\n1   dose   2  57 67.416 9.53e-16     * 0.703\n\n# Hybrid aus base und rstatix\nanova_summary(tooth.aov)\n\n  Effect DFn DFd      F        p p&lt;.05   ges\n1      1   2  57 67.416 9.53e-16     1 0.703\n\n\nDie Funktion aov() steht natürlich für “analysis of variances”. Die Funktion gibt uns nicht direkt das Ergebnis, was wir von einer ANOVA erwarten, sondern fittet (=“baut”) erst mal nur das Modell. Wenn wir das ANOVA-Modell auswerten wollen, müssen wir uns das aov-Ergebnis über summary() zusammenfassen lassen.\nDie Funktion anova_test() gibt uns direkt das erwartete Ergebnis aus. Innerhalb der Funktion gibt es zwei mögliche Schreibweisen, um das Modell zu spezifizieren: Entweder über die Tilde, oder indem wir Rollen der Variablen separat über die Argumente spezifizieren.\n\n# Hybrid aus base und rstatix\nanova_summary(tooth.aov)\n\n  Effect DFn DFd      F        p p&lt;.05   ges\n1      1   2  57 67.416 9.53e-16     1 0.703\n\n\nanova_summary() kann Outputs von aov() verwerten und verpackt sie in das praktische dataframe-Format, das wir von anova_test() schon kennen.\n\nKomplexere Modelle\nKomplexere Modelle mit mehreren Faktoren lassen sich natürlich auch realisieren. Dafür ein neues Beispiel: Im Datensatz ChickWeight wurde das Gewicht von Küken seit Geburt getrackt. Es sind verschiedene Messzeitpunkte und die Art der Ernährung enthalten.\n\nChickWeight %&gt;% \n  summary()\n\n     weight           Time           Chick     Diet   \n Min.   : 35.0   Min.   : 0.00   13     : 12   1:220  \n 1st Qu.: 63.0   1st Qu.: 4.00   9      : 12   2:120  \n Median :103.0   Median :10.00   20     : 12   3:120  \n Mean   :121.8   Mean   :10.72   10     : 12   4:118  \n 3rd Qu.:163.8   3rd Qu.:16.00   17     : 12          \n Max.   :373.0   Max.   :21.00   19     : 12          \n                                 (Other):506          \n\nview(ChickWeight)\n\nHier schauen wir uns direkt nur rstatix an, da das die eindeutig angenehmere Umsetzung ist.\n\n# rstatix\n# Schreibweise 1\nChickWeight %&gt;% \n  anova_test(weight ~ Diet + Time + Error(Chick/Time))\n\nANOVA Table (type III tests)\n\n$ANOVA\n     Effect DFn DFd       F         p p&lt;.05   ges\n1      Diet   3  41   5.075  4.00e-03     * 0.161\n2      Time  11 451 280.945 6.41e-194     * 0.769\n3 Diet:Time  33 451   3.766  9.34e-11     * 0.118\n\n$`Mauchly's Test for Sphericity`\n     Effect        W         p p&lt;.05\n1      Time 2.68e-17 1.03e-251     *\n2 Diet:Time 2.68e-17 1.03e-251     *\n\n$`Sphericity Corrections`\n     Effect   GGe      DF[GG]    p[GG] p[GG]&lt;.05   HFe      DF[HF]    p[HF]\n1      Time 0.114 1.26, 51.48 2.01e-24         * 0.116 1.28, 52.34 8.63e-25\n2 Diet:Time 0.114 3.77, 51.48 1.00e-02         * 0.116 3.83, 52.34 1.00e-02\n  p[HF]&lt;.05\n1         *\n2         *\n\n# Schreibweise 2\nChickWeight %&gt;% \n  anova_test(dv = weight,\n             between = Diet,\n             within = Time,\n             wid = Chick)\n\nANOVA Table (type III tests)\n\n$ANOVA\n     Effect DFn DFd       F         p p&lt;.05   ges\n1      Diet   3  41   5.075  4.00e-03     * 0.161\n2      Time  11 451 280.945 6.41e-194     * 0.769\n3 Diet:Time  33 451   3.766  9.34e-11     * 0.118\n\n$`Mauchly's Test for Sphericity`\n     Effect        W         p p&lt;.05\n1      Time 2.68e-17 1.03e-251     *\n2 Diet:Time 2.68e-17 1.03e-251     *\n\n$`Sphericity Corrections`\n     Effect   GGe      DF[GG]    p[GG] p[GG]&lt;.05   HFe      DF[HF]    p[HF]\n1      Time 0.114 1.26, 51.48 2.01e-24         * 0.116 1.28, 52.34 8.63e-25\n2 Diet:Time 0.114 3.77, 51.48 1.00e-02         * 0.116 3.83, 52.34 1.00e-02\n  p[HF]&lt;.05\n1         *\n2         *\n\n\nBei Daten mit Messwiederholung müssen wir spezifizieren, welcher Faktor mehrmals gemessen wurde und an welcher Variable erkannt wird, welche Messungen zu welchem “Probanden” gehören. In der Formelschreibweise lässt sich das durch den Term Error(ProbandenID/wiederholterFaktor) ausdrücken. In der Argumentschreibweise spezifizieren wir within = wiederholterFaktor und wid = ProbandenID\nanova_test() testet netterweise die Sphärizität direkt mit. Wenn der Mauchly-Test signifikant wird, müssen wir die messwiederholten Faktoren (hier: Time und die Interaktion Diet:Time) im unteren Abschnitt des Outputs interpretieren. Die Spalten mit “GG” sind dabei korrigiert nach Greenhouse-Geisser, die Spalten mit “HF” nach Huynh-Feldt.\nKovariaten können wir in anova_test() über das Argument covariate = einfügen, so wie bei dv =, between = usw.\nNoch mehr Faktoren/Variablen lassen sich über c() verknüpfen, z.B. between = c(Diet, Species)\n\n\nPost Hoc Test\nWenn eine ANOVA signifikant wird, interessiert uns meistens noch, welche/r der Mittelwertsunterschiede dafür verantwortlich ist. Im Bezug auf unser Meerschweinchen-Beispiel hängt der Zahnwachstum offensichtlich von der Dosis ab, aber bisher wissen wir nicht, ob die höchste Dosis zu mehr Wachstum als die anderen beiden führt, oder ob sich alle signifikant voneinander unterscheiden, oder ob es nur einen Unterschied im Bezug zur niedrigsten Dosis gibt usw.\n\n# base\nTukeyHSD(tooth.aov)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = len ~ dose, data = tooth)\n\n$dose\n        diff       lwr       upr    p adj\n1-0.5  9.130  5.901805 12.358195 0.00e+00\n2-0.5 15.495 12.266805 18.723195 0.00e+00\n2-1    6.365  3.136805  9.593195 4.25e-05\n\n# rstatix\ntooth %&gt;%\n  tukey_hsd(len ~ dose)\n\n# A tibble: 3 × 9\n  term  group1 group2 null.value estimate conf.low conf.high    p.adj p.adj.si…¹\n* &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;     \n1 dose  0.5    1               0     9.13     5.90     12.4  2   e- 8 ****      \n2 dose  0.5    2               0    15.5     12.3      18.7  1.12e-11 ****      \n3 dose  1      2               0     6.36     3.14      9.59 4.25e- 5 ****      \n# … with abbreviated variable name ¹​p.adj.signif\n\n\nDie Funktion tukey_hsd erlaubt als Input entweder eine Formel (wie hier) oder das Ergebnis von aov() oder lm(). Der Output von anova_test() funktioniert hier nicht als Input!\n\n\nNonparametrisch: Kruskal-Wallis Rank Sum Test\n\n# base\nkruskal.test(tooth, len ~ dose)\n\nWarning in kruskal.test.default(tooth, len ~ dose): 'x' is a list, so ignoring\nargument 'g'\n\n\nWarning in kruskal.test.default(tooth, len ~ dose): some elements of 'x' are not\nnumeric and will be coerced to numeric\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  tooth\nKruskal-Wallis chi-squared = 129.49, df = 2, p-value &lt; 2.2e-16\n\n# rstatix\ntooth %&gt;% \n  kruskal_test(len ~ dose)\n\n# A tibble: 1 × 6\n  .y.       n statistic    df             p method        \n* &lt;chr&gt; &lt;int&gt;     &lt;dbl&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt;         \n1 len      60      40.7     2 0.00000000148 Kruskal-Wallis"
  },
  {
    "objectID": "content3.html#zusammenhänge",
    "href": "content3.html#zusammenhänge",
    "title": "Inferenzstatistik in R",
    "section": "Zusammenhänge",
    "text": "Zusammenhänge\n\nKorrelation\nZiel: Zusammenhang zwischen zwei Variablen feststellen\nDatenstruktur: Zwei kontinuierliche Variablen\nAls Beispiel haben wir den cars Datensatz, der Geschwindigkeit und Bremsweg von Autos enthält.\n\nget_summary_stats(cars)\n\n# A tibble: 2 × 13\n  variable     n   min   max median    q1    q3   iqr   mad  mean    sd    se\n  &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 speed       50     4    25     15    12    19     7  5.93  15.4  5.29 0.748\n2 dist        50     2   120     36    26    56    30 23.7   43.0 25.8  3.64 \n# … with 1 more variable: ci &lt;dbl&gt;\n\nggplot(cars)+\n  geom_point(aes(speed, dist))+\n  theme_minimal()\n\n\n\n\n\n# r base\ncor(cars$speed, cars$dist)\n\n[1] 0.8068949\n\n# rstatix\ncars %&gt;% \n  cor_test(speed, dist)\n\n# A tibble: 1 × 8\n  var1  var2    cor statistic        p conf.low conf.high method \n  &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;  \n1 speed dist   0.81      9.46 1.49e-12    0.682     0.886 Pearson\n\n# psych\nlibrary(psych)\n\n\nAttaching package: 'psych'\n\n\nThe following object is masked from 'package:car':\n\n    logit\n\n\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n\ncorr.test(cars$speed, cars$dist)\n\nCall:corr.test(x = cars$speed, y = cars$dist)\nCorrelation matrix \n[1] 0.81\nSample Size \n[1] 50\nThese are the unadjusted probability values.\n  The probability values  adjusted for multiple tests are in the p.adj object. \n[1] 0\n\n To see confidence intervals of the correlations, print with the short=FALSE option\n\n\nBase R kann Korrelationen berechnen, hat aber standardmäßig keinen Test auf Signifikanz enthalten. Hier wird der Nutzen von rstatix besonders deutlich.\nAls Ergänzung noch die Funktion corr.test() aus dem psych Package.\n\nNonparametrisch: Spearman & Kendall\nNonparametrische Korrelationsberechnungen lassen sich über das Argument method spezifizieren.\n\ndata %&gt;% \n  cor_test(method = \"Spearman\") # oder auch Kendall\n\n\n\n\nRegression\nZiele:\n\nGruppenunterschiede feststellen\nWerte vorhersagen\nrelevante Prädiktoren für eine bestimmte abhängige Variable identifizieren\nModell mit bestem Fit finden\n\nDatenstruktur: kontinuierliche abhängige Variable & kategoriale/kontinuierliche Prädiktoren\nHier haben wir als Datenbeispiel den Datensatz swiss, in dem die Fertilität der Population der 47 französisch-sprachigen Provinzen in der Schweiz erfasst wurde. Die weiteren Variablen:\n\nAgriculture: % of males involved in agriculture as occupation\nExamination: % draftees receiving highest mark on army examination\nEducation: % education beyond primary school for draftees\nCatholic: % ‘catholic’ (as opposed to ‘protestant’)\nInfant.Mortality: live births who live less than 1 year\n\n\nswiss\n\n             Fertility Agriculture Examination Education Catholic\nCourtelary        80.2        17.0          15        12     9.96\nDelemont          83.1        45.1           6         9    84.84\nFranches-Mnt      92.5        39.7           5         5    93.40\nMoutier           85.8        36.5          12         7    33.77\nNeuveville        76.9        43.5          17        15     5.16\nPorrentruy        76.1        35.3           9         7    90.57\nBroye             83.8        70.2          16         7    92.85\nGlane             92.4        67.8          14         8    97.16\nGruyere           82.4        53.3          12         7    97.67\nSarine            82.9        45.2          16        13    91.38\nVeveyse           87.1        64.5          14         6    98.61\nAigle             64.1        62.0          21        12     8.52\nAubonne           66.9        67.5          14         7     2.27\nAvenches          68.9        60.7          19        12     4.43\nCossonay          61.7        69.3          22         5     2.82\nEchallens         68.3        72.6          18         2    24.20\nGrandson          71.7        34.0          17         8     3.30\nLausanne          55.7        19.4          26        28    12.11\nLa Vallee         54.3        15.2          31        20     2.15\nLavaux            65.1        73.0          19         9     2.84\nMorges            65.5        59.8          22        10     5.23\nMoudon            65.0        55.1          14         3     4.52\nNyone             56.6        50.9          22        12    15.14\nOrbe              57.4        54.1          20         6     4.20\nOron              72.5        71.2          12         1     2.40\nPayerne           74.2        58.1          14         8     5.23\nPaysd'enhaut      72.0        63.5           6         3     2.56\nRolle             60.5        60.8          16        10     7.72\nVevey             58.3        26.8          25        19    18.46\nYverdon           65.4        49.5          15         8     6.10\nConthey           75.5        85.9           3         2    99.71\nEntremont         69.3        84.9           7         6    99.68\nHerens            77.3        89.7           5         2   100.00\nMartigwy          70.5        78.2          12         6    98.96\nMonthey           79.4        64.9           7         3    98.22\nSt Maurice        65.0        75.9           9         9    99.06\nSierre            92.2        84.6           3         3    99.46\nSion              79.3        63.1          13        13    96.83\nBoudry            70.4        38.4          26        12     5.62\nLa Chauxdfnd      65.7         7.7          29        11    13.79\nLe Locle          72.7        16.7          22        13    11.22\nNeuchatel         64.4        17.6          35        32    16.92\nVal de Ruz        77.6        37.6          15         7     4.97\nValdeTravers      67.6        18.7          25         7     8.65\nV. De Geneve      35.0         1.2          37        53    42.34\nRive Droite       44.7        46.6          16        29    50.43\nRive Gauche       42.8        27.7          22        29    58.33\n             Infant.Mortality\nCourtelary               22.2\nDelemont                 22.2\nFranches-Mnt             20.2\nMoutier                  20.3\nNeuveville               20.6\nPorrentruy               26.6\nBroye                    23.6\nGlane                    24.9\nGruyere                  21.0\nSarine                   24.4\nVeveyse                  24.5\nAigle                    16.5\nAubonne                  19.1\nAvenches                 22.7\nCossonay                 18.7\nEchallens                21.2\nGrandson                 20.0\nLausanne                 20.2\nLa Vallee                10.8\nLavaux                   20.0\nMorges                   18.0\nMoudon                   22.4\nNyone                    16.7\nOrbe                     15.3\nOron                     21.0\nPayerne                  23.8\nPaysd'enhaut             18.0\nRolle                    16.3\nVevey                    20.9\nYverdon                  22.5\nConthey                  15.1\nEntremont                19.8\nHerens                   18.3\nMartigwy                 19.4\nMonthey                  20.2\nSt Maurice               17.8\nSierre                   16.3\nSion                     18.1\nBoudry                   20.3\nLa Chauxdfnd             20.5\nLe Locle                 18.9\nNeuchatel                23.0\nVal de Ruz               20.0\nValdeTravers             19.5\nV. De Geneve             18.0\nRive Droite              18.2\nRive Gauche              19.3\n\n\n\nswiss.lm &lt;- lm(Fertility ~ Agriculture + Examination + Education + Catholic, swiss)\nsummary(swiss.lm)\n\n\nCall:\nlm(formula = Fertility ~ Agriculture + Examination + Education + \n    Catholic, data = swiss)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-15.7813  -6.3308   0.8113   5.7205  15.5569 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 91.05542    6.94881  13.104  &lt; 2e-16 ***\nAgriculture -0.22065    0.07360  -2.998  0.00455 ** \nExamination -0.26058    0.27411  -0.951  0.34722    \nEducation   -0.96161    0.19455  -4.943 1.28e-05 ***\nCatholic     0.12442    0.03727   3.339  0.00177 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.736 on 42 degrees of freedom\nMultiple R-squared:  0.6498,    Adjusted R-squared:  0.6164 \nF-statistic: 19.48 on 4 and 42 DF,  p-value: 3.95e-09\n\n#funktioniert nicht:\n# swiss %&gt;% \n#   lm(Fertility ~ Agriculture)\n\nMit diesem Output können wir feststellen, welche Prädiktoren signifikant mit der Fertilität zusammenhängen, kontrolliert für die anderen Prädiktoren. Auch hier sehen wir wieder: lm() baut nur das Modell, erst summary() wertet es aus. In dem Fall gibt es kein Äquivalent von rstatix.\nWie oben erwähnt, kann ein anderes mögliches Ziel einer Regression sein, das Regressionsmodell mit dem besten Fit zu den Daten herauszufinden, also nur Prädiktoren nach dem Prinzip “so viel wie nötig, so wenig wie möglich” im finalen Modell zu behalten. Dafür werden mehrere Regressionsgleichungen bezüglich ihrer Varianzaufklärung miteinander verglichen.\n\n# Modelle bauen\nswiss.lm1 &lt;- lm(Fertility ~ 1, swiss)\nswiss.lm2 &lt;- update(swiss.lm1, ~. + Education)\nswiss.lm3 &lt;- update(swiss.lm2, ~. + Catholic)\n\n# Modelle vergleichen\nanova(swiss.lm1, swiss.lm2, swiss.lm3)\n\nAnalysis of Variance Table\n\nModel 1: Fertility ~ 1\nModel 2: Fertility ~ Education\nModel 3: Fertility ~ Education + Catholic\n  Res.Df    RSS Df Sum of Sq      F    Pr(&gt;F)    \n1     46 7178.0                                  \n2     45 4015.2  1    3162.7 45.564  2.66e-08 ***\n3     44 3054.2  1     961.1 13.846 0.0005598 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nMithilfe der Funktion update() können wir uns sparen, das bisherige Modell noch mal komplett einzutippen. Sie funktioniert nach dem Prinzip update(altes Modell, neues Modell). Mit ~. kürzen wir das alte Modell ab, danach ergänzen wir neue Prädiktoren und/oder Interaktionen.\nDie Funktion anova() ist potentiell verwirrend: Wir rechnen hier offensichtlich keine ANOVA, wie wir sie weiter oben kennengelernt haben. Wir führen allerdings schon eine “Analyse der Varianzen” durch - nur beziehen sich die Varianzen auf jeweils die aufgeklärte Varianz der Regressionsmodelle. anova() kann als Input nur “fitted model objects” verwerten, also bereits erstellte Modelle, und gibt als Output einen Vergleich dieser Modelle.\nAnsonsten lassen sich Messwiederholungen genauso wie in der “Formelschreibweise” der ANOVA über + Error(ProbandenID/messwiederholteVariable) spezifizieren.\nInteraktionen können wir in die Formel durch * oder : einbauen: Fertility ~ Education*Catholic"
  },
  {
    "objectID": "content3.html#andere-ressourcen",
    "href": "content3.html#andere-ressourcen",
    "title": "Inferenzstatistik in R",
    "section": "Andere Ressourcen:",
    "text": "Andere Ressourcen:\n\nÜberblick über rstatx-Funktionen: https://rpkgs.datanovia.com/rstatix/\nListe von Datasets, die direkt in base R abrufbar sind: https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/00Index.html"
  },
  {
    "objectID": "quarto_reports.html",
    "href": "quarto_reports.html",
    "title": "Berichte in Quarto",
    "section": "",
    "text": "Wir haben nun kennengelernt, wie wir mit Hilfe statistischer Analysen Daten mit R auswerten können. Dabei haben wir die Ergebnisse direkt in R ausgewertet - im Output der jeweiligen Chunks. Doch was ist, wenn dir unsere Ergbenisse mit anderen Teilen wollen? Nicht jede:r hat R & R-Studio installiert, und kann ganz einfach unsere .qmd Dateien öffnen. Daher ist es wichtig, sich mit dem Bereitstellen von wissenschaftlichen Ergebnissen zu beschäftigen.\nZwar haben wir in der ersten Sitzung kurz kennengelernt, wie Quarto mit seinen Chunks & HTML Output funktioniert, diese Sitzung soll allerdings dazu dienen, dieses Wissen zu festigen. Dabei wollen wir verschiedene Möglichkeiten zeigen, wie wir Ergebnisse in verschiedener Art und Weise vermitteln können. Dabei ist die Art der Darbietung, auf die wir uns fokussieren html. Zwar ist der Export in .docx und .pdf ebenfalls möglich, diesen wollen wir aber euch aber nur zum Schluss kurz zeigen."
  },
  {
    "objectID": "quarto_reports.html#packages-quarto-rendering",
    "href": "quarto_reports.html#packages-quarto-rendering",
    "title": "Berichte in Quarto",
    "section": "Packages & Quarto-Rendering",
    "text": "Packages & Quarto-Rendering\nIhr solltet mittlerweise wissen, wir ihr Packages sowohl installiert als auch aktiviert. Doch was ist, wenn ihr euer Quarto Dokument für die Übergabe bspw. an eine Dozentin/Vorgesetzte rendern wollt?\n\nFrage: Wir würdet ihr dann vorgehen?\nAntwort: Das Dokument rendern!\n\nHierbei kann es passieren, dass Quarto beim Rendern bspw. folgende Fehlermeldung schmeißt:\n\nError: could not find function “%&gt;%”\n\nEtwaige Fehlermeldungen können immer mal passieren, und zu Anfang ganz schön für Verwirrung sorgen.\n\nFrage: Was ist hier passiert?\nAntwort: WIr haben vergessen, alle Packages zu aktivieren\n\nDa wir das package dplyr, in dem der Pipe-Operator %&gt;% vorhanden ist, nicht aktiviert haben, weiß Quarto nicht, wie es diesen interpretieren muss. Dabei ist es auch egal, ob ihr das entsprechende Package in euer laufenden R-Session bereits aktiviert habt: Wenn es um das Rendern geht, könnt ihr jedes Quarto-Dokument als in-sich geschlossenes System betrachten - daher ist es nötig, alle notwendigen Packages zu aktivieren.\n\nFrage: Was für eine Vorgehensweise bietet sich dafür an?\nAntwort: Zu Beginn ein “Info-Chunk” definieren.\n\nDaher bietet es sich an, gleich zu Beginn des Dokuments einen Basis “Konfigurations-/Packagechunk” zu erstellen, in dem ihr alle wichtigen Dinge definiert. Die Position ist relevant, da Quarto das Dokument ja von oben nach unten rendert, und somit die Packages zunächst aktiviert werden müssen, bevor deren Funktionen verwendet werden können.\nDieser könnte dann etwa so aussehen:\n\nlibrary(tidyverse)\nlibrary(rstatix)\n\npalette1 &lt;- c(\"#648fff\",\"#785ef0\",\"#dc267f\",\"#fe6100\",\"#ffb000\",\"#000000\",\"#ffffff\")\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")\n\nNatürlich wollen wir nicht immer, dass das dann aber gleich auch das erste ist, was eine potenzielle Rezipientin unseres Berichts sieht.\n\nFrage: Wie können wir sicherstellen, dass dieser Chunk im finalen Bericht nicht angezeigt wird?\nAntwort: Wir können zu Beginn in den Chunk Optionen über #| einstellen, dass er nicht angezeigt (aber ausgeführt) wird.\n\nPerfekt! Wir haben nun alles was wir brauchen, ohne dass man sieht, was wir gemacht haben."
  },
  {
    "objectID": "quarto_reports.html#kurzer-exkurs-packages-explizit-machen",
    "href": "quarto_reports.html#kurzer-exkurs-packages-explizit-machen",
    "title": "Berichte in Quarto",
    "section": "Kurzer Exkurs: Packages : : explizit machen",
    "text": "Kurzer Exkurs: Packages : : explizit machen\nEs soll vorkommen, dass ein wissenschaftlicher Quarto-Bericht ganz schön lang wird, und über mehrere Wochen/Monate hinweg erstellt wird, bevor er dann gerendert wird. Da kann es sein, dass wir uns gar nicht mehr so gut erinnern können, was wir alles für Packages verwendet haben. Dagegen gibt es zwei Möglichkeiten:\nEntweder, ihr aktiviert ganz bewusst jedes mal, wenn ihr ein besonderes Package verwendet (bspw. wesanderson), dieses im jeweiligen Chunk - denn doppeltes Aktivieren von Packages (im Gegensatz zu install.packages() ist erstmal nicht weiter problematisch:\n\nlibrary(wesanderson)\n\niris %&gt;% \n  ggplot()+\n  geom_density(aes(x=Sepal.Width,fill=Species)) +\n  scale_fill_manual(values=wes_palette(\"GrandBudapest1\",type=\"discrete\"))+\n  theme_classic()\n\n\n\n\nIhr könnt Packages aber auch explizit nutzen über den :: Operator. Gleicher Chunk Output wie oben kann dann ohne library() erreicht werden:\n\niris %&gt;% \n  ggplot()+\n  geom_density(aes(x=Sepal.Width,fill=Species)) +\n  scale_fill_manual(values=wesanderson::wes_palette(\"GrandBudapest1\",type=\"discrete\"))+\n  theme_classic()"
  },
  {
    "objectID": "quarto_reports.html#chunk-options",
    "href": "quarto_reports.html#chunk-options",
    "title": "Berichte in Quarto",
    "section": "Chunk Options",
    "text": "Chunk Options\n\n#| eval\nWir wollen nun die verschiedenen Chunk-Options etwas beleuchten. Fangen wir mit dem relevantesten an, eval. Angenommen, wir wollen uns für den eben benutzten ToothGrowth Datensatz kurz die Summary anschauen, wollen diese aber nicht in unserem Bericht integrieren. Dann können wir das so tun über #| eval: false in der ersten Zeile des Chunks tun. Achtet auf die Leerstelle nach dem | ! RStudio sollte euch hier die versch. Options vorschlagen (bspw. true):\n\nsummary(ToothGrowth)\n\nIm final gerenderten Dokument sollte der obige Chunk nicht angezeigt sein.\n\n\n#| include\nJe nach Art des Berichts (simples Zeigen der Ergebnisse vs. zeigen der Ergebnisse + Code) kann es sinnvoll sein, auch den Code zu zeigen. Dabei ist es wichtig zu verstehen, dass der Code per default angezeigt wird. Wenn wir nun wollen, dass dieser für einzelne Chunks ausgeblendet wird, können wir #| include: false verwenden:\nNatürlich können wir mehere dieser Optionen kombineren (als einzelne Zeilen).\n\n\n#| output\nManchmal wollen wir auch nur den Code ausführen, ohne die Ergebnisse zu zeigen. Dabei hilft die #| output Option:\n\nsummary(ToothGrowth)\n\n\n\n#| warning\nWenn wir bspw. Packages aktivieren, kann es oft zu Warnungen kommen, welche im finalen Bericht unschön sind. Dabei kann #| warning helfen:\n\nlibrary(dplyr)\n\nManchmal kann es auch sein, dass wir Probleme dabei haben, einen Chunk auszuführen und nicht gleich wissen, wo das Problem ist. Um Dokumente trotzdem zu rendern, gibt es zwei Möglichkeiten: #| error und #| eval :\n\n\n#| error\nSollte ein error entstehen ohne den Code zu unterbrechen ist das eine gute Wahl:\n\n2+\"2\"\n\n\n\n#| eval\n\n2+\"2\"\n\nAußerdem gibt es eine Vielzahl weiterer Optionen für bspw. das Anzeigen von Figures etc. Diese könnt ihr auf posit.co einsehen."
  },
  {
    "objectID": "quarto_reports.html#results",
    "href": "quarto_reports.html#results",
    "title": "Berichte in Quarto",
    "section": "#| results",
    "text": "#| results\nIhr könnt auch entscheiden, wie die results aussehen sollen. Manchmal kann es bspw. hilfreich sein, diese so wie sie sind darzustellen. Das könnt ihr über die Option machen:\n#| results: asis"
  },
  {
    "objectID": "quarto_reports.html#tabellen",
    "href": "quarto_reports.html#tabellen",
    "title": "Berichte in Quarto",
    "section": "Tabellen",
    "text": "Tabellen\nIm Rahmen der Regression habt ihr das swiss Package kennengelernt. Üblicherweise würden wir uns die Daten zunächst anschauen bzw. wollen, dass unsere Rezipientinnen diese anschauen können. Standardmäßig rendert Quarto Tabellen allerdings etwas unschön:\n\nswiss\n\n\n\n  \n\n\n\nEine Lösung dafür sind die Optionen df-print im YAML Header. Hierfür gibt es die Optionen:\n\ndefault\nkable\ntibble\npaged\n\nDiese könnt ihr dann entsprechend oben definieren:\n\n---\ntitle: \"Berichte in Quarto\"\nauthor: \"Simon Krukowski\"\ndf-print: paged\n---\n\nAngenommen, wir wollen das gesamte Ergebnis eines t-Tests direkt berichten. Hierfür bietet sich das rstatix package an, da dieses den Output direkt als tibble speichert. Zeigen wir uns also den t-Test für ToothGrowth an:\n\nToothGrowth %&gt;% \n  mutate(dose = as.factor(dose)) %&gt;% \n  t_test(len ~ supp,var.equal = TRUE)\n\n\n\n  \n\n\n\n\nFrage: Probiert die verschiedenen Funktionen aus. Wie unterscheiden sich die Outputs?\n\nJe nach Option solltet ihr nun verschieden-gestylte Tabellen Output sehen. Am besten ihr benutzt die, die euch am besten gefällt."
  },
  {
    "objectID": "quarto_reports.html#in-text-variablen",
    "href": "quarto_reports.html#in-text-variablen",
    "title": "Berichte in Quarto",
    "section": "In-Text Variablen",
    "text": "In-Text Variablen\nManchmal wollt ihr im Fließtext Ergebnisse beschreiben, dabei aber flexibel bleiben und diese nicht “fest” in den Text schreiben. Auch das ist mit Quarto möglich.\nAngenommen, wir wollen den Koeffizient für Agriculture unseres eben gerechneten Regressionsmodells im Text beschreiben:\n\n# Erneut rechnen just to be safe\nswiss.lm &lt;- lm(Fertility ~ Agriculture + Examination + Education + Catholic, swiss)\n\nÜber `r können wir (im Source Editor) in-text ausführbaren Code integrieren. Um den Wert zu bekommen, müssen wir folgendes machen:\n\nswiss.lm$coefficients['Agriculture']\n\nAgriculture \n -0.2206455 \n\n\nUnd der finale Satz könnte dann so aussehen:\n\nFür unser Regressionsmodeel ergeben sich die Koeffizienten -0.221 für Agriculture, (…)\n\nWir sehen also, dass wir auch im Text selbst Variablen anzeigen können."
  },
  {
    "objectID": "quarto_reports.html#und-latex",
    "href": "quarto_reports.html#und-latex",
    "title": "Berichte in Quarto",
    "section": "Und LaTeX?",
    "text": "Und LaTeX?\nSolltet ihr mit LaTeX bspw. über Overleaf arbeiten, so ist stargazer sogar noch besser geeignet. Die default Einstellung ist, euch den entsprechenden LaTeX geben:\n\nswiss.lm %&gt;% stargazer::stargazer()\n\n\n% Table created by stargazer v.5.2.3 by Marek Hlavac, Social Policy Institute. E-mail: marek.hlavac at gmail.com\n% Date and time: Mon, Oct 02, 2023 - 13:53:28\n\\begin{table}[!htbp] \\centering \n  \\caption{} \n  \\label{} \n\\begin{tabular}{@{\\extracolsep{5pt}}lc} \n\\\\[-1.8ex]\\hline \n\\hline \\\\[-1.8ex] \n & \\multicolumn{1}{c}{\\textit{Dependent variable:}} \\\\ \n\\cline{2-2} \n\\\\[-1.8ex] & Fertility \\\\ \n\\hline \\\\[-1.8ex] \n Agriculture & $-$0.221$^{***}$ \\\\ \n  & (0.074) \\\\ \n  & \\\\ \n Examination & $-$0.261 \\\\ \n  & (0.274) \\\\ \n  & \\\\ \n Education & $-$0.962$^{***}$ \\\\ \n  & (0.195) \\\\ \n  & \\\\ \n Catholic & 0.124$^{***}$ \\\\ \n  & (0.037) \\\\ \n  & \\\\ \n Constant & 91.055$^{***}$ \\\\ \n  & (6.949) \\\\ \n  & \\\\ \n\\hline \\\\[-1.8ex] \nObservations & 47 \\\\ \nR$^{2}$ & 0.650 \\\\ \nAdjusted R$^{2}$ & 0.616 \\\\ \nResidual Std. Error & 7.736 (df = 42) \\\\ \nF Statistic & 19.482$^{***}$ (df = 4; 42) \\\\ \n\\hline \n\\hline \\\\[-1.8ex] \n\\textit{Note:}  & \\multicolumn{1}{r}{$^{*}$p$&lt;$0.1; $^{**}$p$&lt;$0.05; $^{***}$p$&lt;$0.01} \\\\ \n\\end{tabular} \n\\end{table}"
  },
  {
    "objectID": "dataviz_ggplot2.html",
    "href": "dataviz_ggplot2.html",
    "title": "Visualisierung mit ggplot2",
    "section": "",
    "text": "Show code\nlibrary(tidyverse)\nlibrary(reshape2)\nlibrary(reactable)\n\npalette1 &lt;- c(\"#648fff\",\"#785ef0\",\"#dc267f\",\"#fe6100\",\"#ffb000\",\"#000000\",\"#ffffff\")\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")\n\ndataset &lt;- read.csv(\"assets/datasets/iris.csv\")\ndataset$Species &lt;- as.factor(dataset$Species)"
  },
  {
    "objectID": "dataviz_ggplot2.html#hintergrund",
    "href": "dataviz_ggplot2.html#hintergrund",
    "title": "Visualisierung mit ggplot2",
    "section": "Hintergrund",
    "text": "Hintergrund\nBase-R bietet natürlich auch Funktionen zur Visualisierung von Daten. Jedoch ist es auch hier hilfreich, gleich den “state-of-the-art” zu lernen und sich ggplot2 anzueignen, da wir somit viel mehr Anpassungsmöglichkeiten, sowie eine vereinfachte Grammatik haben. Um dennoch etwas Kontext zu bieten, schauen wir uns illustrativ die base-R hist() Funktion an:\n\nhist(dataset$Sepal.Length)\n\n\n\n\nWir sehen, mit ganz wenig Code bietet base-R bereits eine Funktion zum erstellen von Histogrammen an. Das kann manchmal nützlich sein, bspw. wenn wir schnell einen Überblick über die Verteilung einer Variablen bekommen möchten. Aus den oben genannten Gründen wollen wir an dieser Stelle aber den Fokus vor allem auf ggplot2 setzen. Hinweis: ggplot2 ist der offzielle Name und auch das richtige Package, der Einfachheit halber werden wir aber von ggplot sprechen."
  },
  {
    "objectID": "dataviz_ggplot2.html#syntax",
    "href": "dataviz_ggplot2.html#syntax",
    "title": "Visualisierung mit ggplot2",
    "section": "Syntax",
    "text": "Syntax\nEbenso wie der Pipe-Operator %&gt;% bei dplyr eine besondere Rolle spielt, tut es das + bei ggplot. Aber dazu gleich mehr. Im Folgenden sehen wir den grundsätzlichen Aufbau eines Befehls bzw. einer Befehlskette, die ein Plot erzeugt:\n\nggplot(data=object)+\n  geom_function(aes(x=variable),parameters=\"xyz\")+\n  additional_functions(parameters=\"additionals\")\n\nDas sieht auf den ersten Blick erstmal komplizierter aus, als es ist. Aber wir werden den Code Schritt für Schritt aufschlüsseln.\n\n+ Operator\nWie bereits erwähnt, spielt der + Operator eine wichtige Rolle bei ggplot2. Durch + können wir Befehle miteinander verketten. Wichtig zu verstehen ist, dass - ähnlich wie bei dplyr - das Verketten von Befehlen dem “Stapeln” verschiedener Visualisierungen bzw. Eigenschaften entspricht, und jeder einzelne Schritt etwas zum finalen Plot beiträgt. Wie genau das abläuft, werden wir gleich am Beispiel des iris Datensatzes sehen.\n\n\ngeom_function()\ngeom_function() (geom_ für geometrical) ist hier nur ein Platzhalter für eine Vielzahl verschiedener Funktionen, die wir in Abhängigkeit davon benutzen, was wir visualisieren wollen. So gibt es etwa geom_bar() für Bar-Charts, geom_point() für Punktwolken oder geom_line() für Liniendiagramme. Weiter unten werden wir einige davon beispielhaft vorstellen.\n\n\naes()\naes() steht für aesthetics und sorgt dafür, Datenpunkte in visuelle Darstellung zu übertragen bzw. zu mappen. Das klingt erstmal abstrakter, als es eigentlich ist. Meistens werden hier die Variablen für die entsprechenden Achsen angebenen (bspw. x=Sepal.Width) oder aber auch für die Farben bzw. Füllungen von Balken/Punkten (bspw. color=Species). Warum das wichtig ist und was der Unterschied zu Parametern außerhalb der aes() Funktion ist, werden wir gleich sehen.\n\n\nParameters\nWie bei allen Funktionen können wir hier auch diverse Dinge als Parameter übergeben. Beispiele sind etwa color oder size.\n\n\nadditional_functions()\nAuch additional_functions() sind hier nur ein Platzhalter für eine Vielzahl weiterer Funktionen, die wir mit in unsere ggplot Kette nehmen können, bspw. theme_classic() oder xlab(). Mithilfe dieser können wir das Plot im Nachhinein weiter anpassen."
  },
  {
    "objectID": "dataviz_ggplot2.html#beispiel",
    "href": "dataviz_ggplot2.html#beispiel",
    "title": "Visualisierung mit ggplot2",
    "section": "Beispiel",
    "text": "Beispiel\nSoweit die Syntax. Am besten lässt sich ggplot aber anhand eines Beispiels verstehen. Machen wir also mit unserem iris Datensatz weiter. Wir wollen die Verteilung der Blattgrößen besser verstehen, und entscheiden uns dazu, ein Plot mit ggplot zu erstellen. Wie bereits beschrieben, hilft der + Operator dabei, verschiedene Funktionen für das Plot miteinander zu verketten. Fangen wir also mit der ersten Ebene an:\n\nggplot(data = dataset)\n\n\n\n\nWir sehen, mit dem Befehl ggplot() haben wir ein leeres Plot erzeugt. Fügen wir nun also ein Diagramm unserer Wahl hinzu. Wir fangen mit geom_bar() an.\n\nggplot(data = dataset)+\n  geom_bar()\n\nWie wir sehen können, wirft R den Fehler :\n`stat_count()` requires an x or y aesthetic.\nDas liegt daran, dass wir die aes() Funktion vergessen haben. Ohne das mapping von Datenpunkten weiß die geom_bar() Funktion nicht, wo welcher Datenpunkt hinsoll. Versuchen wir es also nochmal, und spezifizieren wir Sepal.Width als x-Variable:\n\nggplot(data=dataset)+\n  geom_bar(aes(x=Sepal.Width))\n\n\n\n\nWie wir sehen, haben wir nun die Variable Sepal.Width erfolgreich visualisiert und entdecken eine Normalverteilung.\nDa es sich bei geom_bar() um ein Histogramm handelt, müssen wir lediglich die x-Variable übergeben, da für die y-Variable automatisch gezählt wird.\nAngenommen, wir möchten die Farbe verändern, sodass die Balken die Farbe rot haben. Dann müssen wir dies als fill Parameter der geom_bar() Funktion übergeben:\n\nggplot(data=dataset)+\n  geom_bar(aes(x=Sepal.Width), fill=\"red\")\n\n\n\n\nNun sind alle Balken rot. Was ist aber, wenn wir wollen, dass die Balken in Abhängigkeit einer Variable verschiedenfarbig sind? Dann müssen wir die fill Variable in der aes() Funktion übergeben:\n\nggplot(data=dataset)+\n  geom_bar(aes(x=Sepal.Width, fill=Species))\n\n\n\n\nPerfekt! Auf einen Blick können wir sehen, dass Pflanzen der Spezies setosaeher größere Sepal.Width haben. Bis jetzt haben wir allerdings nur einen Befehl mithilfe des + Operators verknüpft. Angenommen, uns stören die Achsenbeschriftungen und wir wollen einen Titel haben. Auch das ist einfach möglich:\n\nggplot(data=dataset)+\n  geom_bar(aes(x=Sepal.Width, fill=Species))+\n  ylab(\"Prevalence\")+\n  xlab(\"Width of Sepal\")+\n  ggtitle(\"Sepal width of Iris Flower for each Species\")\n\n\n\n\nDie Farben sehen noch etwas langweilig aus. Ein kurzer Blick auf colorhunt.co inspiriert uns und wir wollen nun die Farben #9A208C, #E11299 und #F5C6EC als Farben haben. Das können wir über scale_fill_manual() machen. Dazu speichern wir die Farben einfach in einen Vektor namens palette und übergeben diesen als Parameter.\n\npalette &lt;- c(\"#9A208C\",\"#E11299\",\"#F5C6EC\")\n\nggplot(data=dataset)+\n  geom_bar(aes(x=Sepal.Width, fill=Species))+\n  ylab(\"Prevalence\")+\n  xlab(\"Width of Sepal\")+\n  ggtitle(\"Sepal width of Iris Flower for each Species\")+\n  scale_fill_manual(values = palette)\n\n\n\n\nWir hätten nun gerne noch einen schwarzen Rand um die Balken. Dabei hilft uns der Parameter colour in geom_bar():\n\nggplot(data=dataset)+\n  geom_bar(aes(x=Sepal.Width, fill=Species), color=\"#2b2b2b\")+\n  ylab(\"Prevalence\")+\n  xlab(\"Width of Sepal\")+\n  ggtitle(\"Sepal width of Iris Flower for each Species\")+\n  scale_fill_manual(values = palette)\n\n\n\n\nJetzt stört uns nur noch der Hintergrund, und dann sind wir zufrieden. ggplot bietet verschiedene themes, die wir einfach über den + Operator verwenden können. Wir entscheiden uns für theme_classic():\n\nggplot(data=dataset)+\n  geom_bar(aes(x=Sepal.Width, fill=Species), color=\"#2b2b2b\")+\n  ylab(\"Prevalence\")+\n  xlab(\"Width of Sepal\")+\n  ggtitle(\"Sepal width of Iris Flower for each Species\")+\n  scale_fill_manual(values = palette)+\n  theme_classic()\n\n\n\n\nSuper! Ein publizierfähiges Plot in 7 Zeilen wiederverwendbarem Code. An diesem Beispiel haben wir gesehen, wie einfach das mit ggplot und das verketten von Befehlen geht. Im Folgenden wollen wir euch noch eine Auswahl an Visualisierungsfunktionen vorstellen, die wir häufig benötigen."
  },
  {
    "objectID": "dataviz_ggplot2.html#visualisierungsfunktionen",
    "href": "dataviz_ggplot2.html#visualisierungsfunktionen",
    "title": "Visualisierung mit ggplot2",
    "section": "Visualisierungsfunktionen",
    "text": "Visualisierungsfunktionen\nWie bereits beschrieben, sind geom_ die Visualisierungsfunktionen. Jenachdem, wie unsere Daten strukturiert sind, bietet sich einige davon mehr, andere weniger an. Eine sinnvolle Einteilung geht von den Achsen bzw. zu visualisierenden Variablen aus. Dabei sollten wir uns immer die Frage stellen:\n\nWieviele Variablen möchte ich darstellen?\n\nIn einem 2-dimensionalen Koordinatensystem können wir natürlich erstmal nur zwei Variablen darstellen. Allerdings erlaubt uns ggplot auch die Visualisierung von mehr Variablen. So können wir etwa über fill bzw. colour weitere Variablen visualieren. Eine weitere Frage, die wir uns in diese Richtung stellen sollten, ist:\n\nWas für einen Datentyp haben die zu visualisierenden Variablen?\n\nJe nachdem, wie die wir diese Fragen beantworten, bieten sich dann verschiedene Funktionen an. Im obigen Beispiel haben wir eine Variable (Sepal.Width), welche intervallskaliert ist. Dafür bietet sich entsprechend ein Histogramm bzw. geom_bar()an. Doch was ist, wenn wir zwei intervallskalierte Variablen haben? Hier könnten wir bspw. die geom_point() Funktion benutzen. Für solche Fragestellungen kann das ggplot Cheatsheet sehr hilfreich sein:\n\n\n\n\n\nNeben geom_bar wollen wir zwei weitere, häufig benötigte Funktionen, sowie deren Kombination zeigen: geom_point() und geom_smooth().\n\ngeom_point()\nAngenommen, wir haben zwei intervallskalierte Variablen, die wir visualisieren wollen. Dann bietet sich geom_point() an. Versuchen wir also mal, die Verteilung von Sepal.Width und Sepal.Length zu visualisieren.\n\nggplot(data=dataset)+\n  geom_point(aes(x=Sepal.Width,y=Sepal.Length))\n\n\n\n\nSuper! Nun wäre es praktisch, wenn wir auch noch die Variable Species einbringen könnten. Dies können wir durch colour in aes() tun.\n\nggplot(data=dataset)+\n  geom_point(aes(x=Sepal.Width,y=Sepal.Length,color=Species))\n\n\n\n\nAuch hier sehen wir direkt, dass es einen Unterschied zwischen den verschiedenen Spezies zu geben scheint. Visuell können wir auch den (offensichtlichen) Zusammenhang zwischen Sepal.Width und Sepal.Length erkennen. Um das aber noch etwas besser zu verstehen, legen wir eine Regressionsgrade mithilfe von geom_smooth() rein. Das können wir über den + Operator tun - denn in ggplot können wir alle Visualisierungsfunktionen nach Belieben “stapeln”.\n\nggplot(data=dataset)+\n  geom_point(aes(x=Sepal.Width,y=Sepal.Length,color=Species))+\n  geom_smooth(aes(x=Sepal.Width,y=Sepal.Length), method=\"lm\") # lm for linear model\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nDie Regressionsgrade zeigt einen negativen Zusammenhang, obwohl wir offensichtlich einen positiven Zusammenhang vorliegen haben. Das liegt daran, dass geom_smooth() unseren Faktor Species nicht berücksichtigt. Dies können wir ändern, indem wir in dessen aes() Funktion ebenfalls colour übergeben.\n\nggplot(data=dataset)+\n  geom_point(aes(x=Sepal.Width,y=Sepal.Length,colour=Species))+\n  geom_smooth(aes(x=Sepal.Width,y=Sepal.Length, colour=Species), method=\"lm\") # lm for linear model\n\n\n\n\nVoila! Wir sehen unsere drei kleinen Regressionsgraden und den erwarteten positiven Zusammenhang."
  },
  {
    "objectID": "dataviz_ggplot2.html#fazit-weitere-resourcen",
    "href": "dataviz_ggplot2.html#fazit-weitere-resourcen",
    "title": "Visualisierung mit ggplot2",
    "section": "Fazit & Weitere Resourcen",
    "text": "Fazit & Weitere Resourcen\nWir haben nun gelernt, wie wir mithilfe von ggplot Daten visualisieren können. Natürlich war das nur die Spitze des Eisbergs, und noch viel mehr ist möglich. Einige dieser Dinge werden wir im weiteren Verlauf des Seminars kennenlernen, wenn es um das Arbeiten (und Visualisieren) von konkreten Datensätzen geht. Im Laufe des Seminars werden wir auch eine eigene “nice to know” Seite erstellen, auf der wir zusätzliches Wissen sammeln.\nNeben dieser Website hier (🥳) gibt es natürlich noch viele weitere, tolle Resourcen im Internet. Neben den offziellen Dokumentationen bspw. auf tidyverse oder CRAN wollen wir euch vor allem mit Blick auf dplyr und ggplot noch einige ans ❤️ legen:\n\nsthda.com: Be Awesome in ggplot2: A Practical Guide to be Highly Effective - R software and data visualization\nr-graph-gallery.com: A collection of charts made with the R programming language\nr-bloggers.com: DPLYR: A beginner’s guide"
  },
  {
    "objectID": "learninganalytics.html",
    "href": "learninganalytics.html",
    "title": "Analysebeispiel - Virtual Learning Environment Data",
    "section": "",
    "text": "In der heutigen Sitzung wollen wir beispielhaft eine komplette Analyse mit euch durchführen. Das soll euch auch darauf vorbereiten, wie ihr bei der Erstellung des Berichts vorgehen könnt.\nWir haben heute grob drei Teile:\nWir verwenden Daten, die unter dem Namen “Open University Learning Analytics Dataset” laufen. Dort sind insgesamt sieben Datensätze enthalten, die verschiedene Informationen zur Studierenden und denen von ihnen belegten Kursen und durchgeführten Prüfungen enthalten. Mehr wollen wir noch nicht verraten, da ihr euch auch selbst der Herauforderung stellen sollt, sich in einen zunächst unbekannten Datensatz einzuarbeiten."
  },
  {
    "objectID": "learninganalytics.html#exkurs-zu-kaggle.com",
    "href": "learninganalytics.html#exkurs-zu-kaggle.com",
    "title": "Analysebeispiel - Virtual Learning Environment Data",
    "section": "Exkurs zu kaggle.com",
    "text": "Exkurs zu kaggle.com\nKaggle ist eine Website für alle, die an Data Science interessiert sind. Dort gibt es zahlreiche echte Datensätze zu diversen Themen, die man herunterladen und bearbeiten kann. Die eigene Auswertung kann man auch wieder hochladen und mit anderen Leuten diskutieren. Es gibt Wettbewerbe, bei denen Daten ausgewertet werden sollen, aber auch Kurse für Anfänger und Fortgeschrittene.\nAlles in allem also eine gute Plattform, um die eigenen Skills zu testen und zu erweitern.\nDen Datensatz für die heutige Stunde haben wir auch dort gefunden, und auch werdet dort beginnen, wenn ihr euch mit den Daten vertraut macht."
  },
  {
    "objectID": "learninganalytics.html#nach-bearbeitung",
    "href": "learninganalytics.html#nach-bearbeitung",
    "title": "Analysebeispiel - Virtual Learning Environment Data",
    "section": "Nach Bearbeitung:",
    "text": "Nach Bearbeitung:\n\nDatensätze\n\nIn studentRegistration finden wir, welche/r Studierende sich wann in welchem Kurs eingeschrieben hat.\n\nWarum gibt es immer module und presentation? Was steckt dahinter?\n\nIn studentAssessment finden wir die Bewertung der Studierenden in verschiedenen Prüfungen, wann die Prüfung abgelegt wurde, und ob sie von einem anderen Kurs übertragen wurde\nIn studentVle finden wir die Interaktionen der Studierenden mit dem Virtual Learning Environment. Mit welchem Element haben sie interagiert (id_site), und an welchem Tag (date) mit wie vielen Klicks (sum_click)\n\nIn welchem Format befindet sich date? Welche Information enthält es? Welche nicht?\n\nIn assessments werden die einzelnen Prüfungen einem Modul und Semester zugeordnet. Außerdem wird nach Art der Prüfung unterschieden und der Zeitpunkt der Prüfung angegeben. Weight gibt an, ob es sich um eine alleinstehende Prüfung handelt oder sie mit anderen zusammen verrechnet wird. Der type “Final Exam” ist dabei alleinstehend, die anderen Types addieren sich zu 100%\nIn courses werden die Module und Semester einander zugeordnet\n\nWarum gibt es dafür einen extra Datensatz, wenn diese Information auch in vielen anderen Datensätzen miteinander kombiniert wird?\n\nIn vle stehen genauere Information über die Materialien aus dem VLE (id_site), unter anderem um was für eine Aktivität sie sich handelt und in welchem zeitlichen Abschnitt die Interaktion damit vorgesehen wäre.\nIn studentInfo sind vor allem demographische Daten pro Student enthalten, aber auch das final_result des Moduls\n\nDie Variablen sind relativ selbsterklärend - hat jemand geschaut, wobei es sich um imd_band handelt?\n\n\n\n\nVerknüpfungen der Datensätze\n\n\n\n\n\n\nÜber id_student lassen sich die demographischen Daten der Studierenden mit den Anmeldungen, VLE-Interaktionen und Prüfungsleistungen verknüpfen\nÜber id_assessment lassen sich die Leistungen mit den Eigenschaften der Prüfungen verknüpfen\nÜber id_site lassen sich die Interaktionen mit den Elementen mit den Eigenschaften der Elemente abgleichen\nSind code_module und code_presentation sinnvolle Verknüpfungsvariablen?\n\n\n\nWelche (sinnvollen) Fragestellungen könnte man bearbeiten?\n\nZusammenhang der finalen Note mit…\n\ndemographischen Variablen wie Ausbildung, Herkunft, soziookonomischer Status\nden verschiedenen Zwischenprüfungen\nder Beschäftigung mit dem VLE (wie lässt sich das sinnvoll operationalisieren?)\nModul/Semester\nvorherigen Versuchen\n\nZusammenhang der Interaktion mit dem Material mit Art des Materials\nZusammenhang des Materials mit Bestehensrate eines Moduls\nZusammenhang des investierten Aufwands (wie kann man das operationalisieren?) mit der Gewichtung der Prüfung\nZusammenhang von Note und Typ des Assessments\nVerlauf von Interaktionen mit dem Material über die Zeit des Kurses\nVerlauf der Benotungen über die Zeit des Kurses\n\n\n\nUnsere Fragestellungen heute:\nA) Inwiefern hängen die Zwischenprüfungen, die im Kurs vor dem “final exam” durchgeführt wurden, mit dem Bestehen des Kurses zusammen?\nB) Wie verhalten sich die Bewertungen der Zwischenprüfungen über den Verlauf des Kurses für die verschiedenen Kurse?\nDamit es für uns heute im Seminar zeitlich machbar ist, schränken wir die Fragestellungen für jeweils einen Kurs bzw. ein Semester ein:\nA) code_module == \"CCC\" & code_presentation == \"2014J\"\nB) code_presentation = \"2013J\""
  },
  {
    "objectID": "learninganalytics.html#teil-2-data-wrangling",
    "href": "learninganalytics.html#teil-2-data-wrangling",
    "title": "Analysebeispiel - Virtual Learning Environment Data",
    "section": "Teil 2: Data Wrangling",
    "text": "Teil 2: Data Wrangling\nWir kennen nun die Datensätze und die Variablen, mit denen wir arbeiten möchten. Bevor wir uns richtig mit der Fragestellung beschäftigen können, müssen wir die relevanten Variablen erstellen und uns außerdem einen neuen Datensatz zusammenbasteln, in dem alle relevanten Variablen enthalten sind.\nDabei sollten wir nicht blind loslegen, sondern immer die Datenstruktur und mögliche Auffälligkeiten im Blick behalten. Schließlich kennen wir die Daten noch nicht so gut, und einige Ideen zur Variablenerstellung könnten sich in der Praxis als wenig sinnvoll erweisen.\nKonkrete Aufgaben:\n\nDaten in R laden, Packages aktivieren\npotentielle neue Variablen erstellen, dabei Operationalisierung auf Tauglichkeit überprüfen und evtl. ändern\nfinalen Datenssatz erstellen, mit dem wir Plots & Analysen rechnen könnten\nDann gehen wir fließend zu Teil 3 über: Plot und/oder Analysen erstellen und auswerten"
  },
  {
    "objectID": "learninganalytics.html#nach-bearbeitung-1",
    "href": "learninganalytics.html#nach-bearbeitung-1",
    "title": "Analysebeispiel - Virtual Learning Environment Data",
    "section": "Nach Bearbeitung:",
    "text": "Nach Bearbeitung:\nPackages und beliebige weitere Variablen festlegen, z.B. Farbpaletten.\n\nlibrary(tidyverse)\nlibrary(rstatix)\n\npalette1 &lt;- c(\"#FFD966\", \"#8FAADC\", \"#A9D18E\", \"#F4B183\")\n\nDaten einlesen - vielleicht brauchen wir gar nicht alle Datensätze, aber ich lade sie lieber alle mal rein. Entfernen geht später immer noch\n\n# Course Infos\nassess &lt;- read.csv(\"assets/datasets/kaggle_learning_analytics/assessments.csv\")\ncourses &lt;- read.csv(\"assets/datasets/kaggle_learning_analytics/courses.csv\")\n\n# Student Infos\nstudent.assess &lt;- read.csv(\"assets/datasets/kaggle_learning_analytics/studentAssessment.csv\")\nstudent.info &lt;- read.csv(\"assets/datasets/kaggle_learning_analytics/studentInfo.csv\")\nstudent.regi &lt;- read.csv(\"assets/datasets/kaggle_learning_analytics/studentRegistration.csv\")\n\n# VLE Stuff\nstudent.vle &lt;- read.csv(\"assets/datasets/kaggle_learning_analytics/studentVle.csv\")\nvle &lt;- read.csv(\"assets/datasets/kaggle_learning_analytics/vle.csv\")\n\n# Theoretisch wäre hier apply() eine Option gewesen, ich wollte aber die klare Kontrolle darüber, welchem Datensatz ich hier welchem Namen zugewiesen habe\n\n\nNotendurchschnitt der Zwischenprüfungen 2 (nur für ein Modul)\nUm uns die Analyse etwas einfacher zu gestalten, schauen wir uns nur die Ergebnisse von einem Modul aus einem Semester an. So müssen wir nicht berücksichtigen, ob Studierenden mehrfach in den Daten auftauchen durch mehrfache Belegung uvm.\n\n# Welcher Kurs hat am meisten Anmeldungen (-&gt; höheres n)?\nstudent.regi %&gt;% \n  filter(!is.na(date_registration)) %&gt;% \n  group_by(code_module, code_presentation) %&gt;% \n  summarize(n = n()) %&gt;% \n  arrange(desc(n))\n\n`summarise()` has grouped output by 'code_module'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 22 × 3\n# Groups:   code_module [7]\n   code_module code_presentation     n\n   &lt;chr&gt;       &lt;chr&gt;             &lt;int&gt;\n 1 CCC         2014J              2495\n 2 FFF         2014J              2363\n 3 BBB         2014J              2291\n 4 FFF         2013J              2282\n 5 BBB         2013J              2235\n 6 DDD         2013J              1933\n 7 CCC         2014B              1931\n 8 DDD         2014J              1800\n 9 BBB         2013B              1766\n10 FFF         2013B              1611\n# ℹ 12 more rows\n\n# code_module == CCC\n# code_presentation = 2014J\n\n# dazu gehörige assignments filtern\nassess.mod &lt;- assess %&gt;% \n  filter(code_module == \"CCC\" & code_presentation == \"2014J\") %&gt;% \n  select(id_assessment)\n# Natürlich könnten wir das auch als dataframe abspeichern, aber wir werden ja nicht nur dieses Dataframe, sondern auch die anderen entsprechend gefiltert benötigen, daher ist es auch sinnvoll, einen Filtervektor zu definieren\n\nAnhand von assessment_type können wir sehen, welche assessments (nennen wir hier auch Prüfungen) ein “Final Exam” waren (Exam) und welche nicht (TMA, CMA). Da es uns ja nur um die Zwischenprüfungen geht, interessieren uns nicht Exam-Zeilen also nicht. Wir können uns jetzt also einen Vektor bauen mit den id_assessment-Werten, die wir weiterverarbeiten wollen:\n\nzwischenpruefungen &lt;- assess %&gt;% \n  filter(id_assessment %in% assess.mod$id_assessment) %&gt;% \n  filter(assessment_type != \"Exam\") %&gt;% \n  select(id_assessment)\n\nDiesen Vektor können wir benutzen, um in dem Datensatz mit den Noten zu filtern (student.assess):\n\nhead(student.assess)\n\n  id_assessment id_student date_submitted is_banked score\n1          1752      11391             18         0    78\n2          1752      28400             22         0    70\n3          1752      31604             17         0    72\n4          1752      32885             26         0    69\n5          1752      38053             19         0    79\n6          1752      45462             20         0    70\n\nstudent.zwischen &lt;- student.assess %&gt;% \n  filter(id_assessment %in% zwischenpruefungen$id_assessment)\n# Hier speichere ich den Datensatz separat ab, da ich konkret mit ihm weiterrechnen will\n\nDer gefilterte Datensatz enthält student_id und score - da sind wir ja schon mal auf einem guten Weg.\nDie nächste Idee ist jetzt, über group_by und summarize einen Mittelwert pro StudentIn zu erstellen.\nAber vorher gibt es noch ein Sache zu berücksichtigen: Aus assess wissen wir, dass nicht alle Prüfungen gleich gewichtet werden - das sollten wir auch berücksichtigen beim Zusammenfassen der Ergebnisse!\nAlso müssen wir die Gewichtung aus dem einen Datensatz mit den Informationen aus dem anderen Datensatz zusammenführen.\n\n# Die Gewichtung ist leider nur in \"assess\" enthalten - aber durch id_assessment haben wir ja einen key zum joinen\n\nstudent.zwischen &lt;- student.zwischen %&gt;% \n  left_join(assess, by = \"id_assessment\")\n\n# Die anderen Spalten aus assess sind auch dazugekommen, aber das schadet ja erst mal nicht. Lässt sich später immer noch selecten, wenn es zu nervig werden würde.\n\nJetzt können wir einen gewichteten Mittelwert der Zwischenprüfungen pro StudentIn berechnen.\n\nstudent.zwischen.w &lt;- student.zwischen %&gt;% \n  group_by(id_student) %&gt;%\n  summarize(before_final = weighted.mean(score, weight))\n\n# Was im Hintergrund passiert beispielhaft an einem Studenten:\nstudent.zwischen %&gt;%\n  filter(id_student == 23698) %&gt;% \n  select(score, weight)\n\n  score weight\n1    94      9\n2    60     22\n3    69     22\n4    67     22\n5    78      2\n6    93      7\n7    73      8\n8    56      8\n\nsum(c(9,22,22,22,2,7,8,8)) # = 100\n\n[1] 100\n\n94*0.09+60*0.22+69*0.22+67*0.22+78*0.02+93*0.07+73*0.08+56*0.08 # = 69.97\n\n[1] 69.97\n\n\nJetzt müssen wir nur noch aus student.info die finalen Scores ergänzen, um unsere Analyse rechnen zu können\n\n# Tatsächlich mal ein Fall für right_join, weil wir so student.info im gleichen Schritt noch aufbereiten können\nzwischen.final &lt;- student.info %&gt;% \n  filter(code_module == \"CCC\" & code_presentation == \"2014J\") %&gt;% \n  # hier verwenden wir wieder den Filter vom Anfang, da es id_assessment nicht als Variable gibt.\n  right_join(student.zwischen.w, by= \"id_student\")"
  },
  {
    "objectID": "learninganalytics.html#teil-3-analyse",
    "href": "learninganalytics.html#teil-3-analyse",
    "title": "Analysebeispiel - Virtual Learning Environment Data",
    "section": "Teil 3: Analyse",
    "text": "Teil 3: Analyse\nUnd nun zum letzten Schritt, der Analyse bzw. dem Plot.\n\n# Basic Plot\nzwischen.final %&gt;% \n  ggplot()+\n  geom_violin(aes(x=final_result, y=before_final))\n\nWarning: Removed 6 rows containing non-finite values (`stat_ydensity()`).\n\n\n\n\n# Verschönerter Plot\nzwischen.final %&gt;% \n  mutate(final_result = fct_relevel(final_result, \"Distinction\", \"Pass\", \"Fail\", \"Withdrawn\")) %&gt;% \n  ggplot()+\n  geom_violin(aes(x=final_result, y=before_final, fill = final_result))+\n  theme_minimal()+\n  xlab(\"Final Result\")+\n  ylab(\"Results before Final Exam\")+\n  scale_fill_manual(values=palette1)+\n  theme(legend.position = \"none\")\n\nWarning: Removed 6 rows containing non-finite values (`stat_ydensity()`).\n\n\n\n\n\n\n# ANOVA\nzwischen.final %&gt;%\n  anova_test(before_final ~ final_result)\n\nWarning: NA detected in rows: 449,547,661,688,1011,1954.\nRemoving this rows before the analysis.\n\n\nANOVA Table (type II tests)\n\n        Effect DFn  DFd       F         p p&lt;.05   ges\n1 final_result   3 1988 337.307 4.95e-177     * 0.337\n\n# Fost Hoc-Tests\nzwischen.final %&gt;% \n  tukey_hsd(before_final ~ final_result)\n\n# A tibble: 6 × 9\n  term         group1     group2 null.value estimate conf.low conf.high    p.adj\n* &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 final_result Distincti… Fail            0   -36.0    -39.6     -32.5  4.33e-11\n2 final_result Distincti… Pass            0   -18.3    -21.4     -15.2  4.33e-11\n3 final_result Distincti… Withd…          0   -34.3    -37.5     -31.1  4.33e-11\n4 final_result Fail       Pass            0    17.8     14.8      20.7  4.33e-11\n5 final_result Fail       Withd…          0     1.75    -1.26      4.75 4.42e- 1\n6 final_result Pass       Withd…          0   -16.0    -18.5     -13.5  4.33e-11\n# ℹ 1 more variable: p.adj.signif &lt;chr&gt;\n\n\nAuswertung: Die Studierenden, die am Ende das Modul mit Auszeichnung (“Distinction”) abschließen, zeigen schon bei den Zwischenprüfungen signifikant bessere Ergebnisse als die Studierenden, die ohne Auszeichnung oder gar nicht abschließen. Die Studierenden, die ohne Auszeichnung bestehen, haben trotzdem bereits vorher signifikant besserer Zwischenprüfungen im Vergleich zu den nicht-Bestehenden. Zwischen denen, die final nicht bestehen und denen, die sich von der Prüfung wieder abmelden, gibt es keinen Unterschied.\n\nPlot verschönern: Palette"
  },
  {
    "objectID": "5join.html",
    "href": "5join.html",
    "title": "Zusammenhängende Dataframes",
    "section": "",
    "text": "Wir haben jetzt also ein neues dataframe, in dem die Arbeitsgedächtnisdaten enthalten sind. Natürlich wollen wir diese Daten am liebsten mit den restlichen Daten aus dem Fragebogen verknüpfen, damit uns für eine Auswertung alle Variablen zur Verfügung stehen. Welche Möglichkeit kennt ihr schon, zwei Dataframes miteinander zu verknüpfen?\n\n# bisheriges Wissen:\ndata.verknüpft &lt;- cbind(daten1, daten2)\n\ncbind(dataset, WMC_vals)\n\nWann könnte diese Variante zu Problem führen bzw. zu einfach gedacht sein?\n\nWenn die Zuordnung von Zeile und Proband nicht in beiden Dataframes identisch ist\nWenn beide Dataframes- nicht die gleiche Zeilenlänge haben, weil es z.B. nicht Daten zu allen Probanden gibt\n\nSinnvoller ist es daher, die Passung der Datenframes zu überprüfen bzw. zu garantieren. In base R gibt es dafür bspw. match(). Schaut euch mal die Dokumentation/Hilfe dafür an.\n\nmatch(x, table, …) match returns a vector of the positions of (first) matches of its first argument in its second.\n\nEs wird also ein Vektor mit einem anderen Vektor verglichen.\n\nvec1 &lt;- c(1:10, \"abc\")\nvec2 &lt;- c(5,3,1, \"abc\",5)\n\nmatch(vec1, vec2)\n# Woraus besteht der Output?\n\nDer Output gibt an, welche Elemente aus dem ersten Vektor im zweiten Vektor vorkommen, indem er 1) die Elemente des ersten Vektors schrittweise durchgeht und 2) für in beiden Vektoren vorkommende Elemente die Position des Elements im zweiten Vektor notiert. Er gibt nicht an, wie die Elemente “heißen”.\nWas können wir damit anfangen?\nWir können es als Index nutzen, der uns angibt, welche Zeilen wir mit welchen matchen dürfen. Nach dem Prinzip: “Für das erste Element aus vec1 nimm bitte das dritte Element aus vec2”. Wir wenden den Index also auf die Spalte mit der Variable an, die wir übertragen wollen:\n\nmatch(dataset$id, WMC_vals$subject.id)\n\ndata2$var[match(data1$id, data2$id)]\n\n\nWMC_vals[match(dataset$id, WMC_vals$subject.id),]\n\nWMC_vals[match(WMC_vals$subject.id,dataset$id),]\n# Ergebnis: Die Werte von var aus data2, sortiert in der Reihenfolge, in der sie für data1 sinnvoll sind.\n\n# richtige Übertragung auf data1:\ndata1 &lt;- data1 %&gt;% \n  mutate(newvar = data2$var[match(data1$id, data2$id)])\n# Jetzt enthält data1 die Daten aus data2$var, aber garantiert in der richtigen Reihenfolge\ndataset %&gt;% \n  mutate(wm = WMC_vals$wmc_PCU[match(dataset$id, WMC_vals$subject.id)]) %&gt;% \n  select(wm, id)\n\nmatch() ist praktisch, benötigt allerdings Schreibaufwand bzw. Konzentration bei der Umsetzung. Außerdem ist es in der Form nur auf eine Variable beschränkt.\nNatürlich hat dplyr wieder etwas angenehmeres für uns: left_join()\n\ndata1 &lt;- data1 %&gt;% \n  left_join(data2, by = \"id\")\n\nWMC_vals$subject.id &lt;- as.numeric(WMC_vals$subject.id)\n\ndataset.joined &lt;- dataset %&gt;% \n  left_join(WMC_vals, by = c(\"id\"=\"subject.id\"))\n\nHier werden alle Variablen aus data2 in data1 ergänzt, gematcht nach der id-Spalte, die hier in beiden Datensätzen verwendet wurde. Sollten die ID-Spalten unterscheidlich heißen, lässt sich das über by = c(\"a\" = \"b\") ausgleichen\nleft_join() ist die Standardfunktion, um die Daten aus zwei Datensätzen miteinander zu verknüpfen, es gibt allerdings außerdem noch right_join(), inner_join() und full_join().\nSchaut euch die Dokumentation/Hilfe an und versucht den Unterschied mal in eigenen Worten zu erklären. Wann kann uns welche Funktion nützen?\n\ninner_join(): Das Ergebnis enthält nur Zeilen, deren ID in beiden Datensätzen vorkommt.\nBeispiel: Ich habe zwei separate Studien gemacht und mich interessieren nur noch die Probanden, die an beiden Studien teilgenommen haben. Ich möchte die erhobenen Variablen aus beiden Studien zusammenführen. Zeilen von Probanden, die nur an einer Studie teilgenommen haben, können also wegfallen.\n\n\n\nAbbildungen aus R for Data Science (Wickham & Grolemund 2017)\n\n\nfull_join(): Das Ergebnis enthält alle Zeilen aus beiden Datensätzen, wobei die nach ID zueinander passenden Zeilen natürlich kombiniert wurden.\nBeispiel: Ich habe verschiedene LimeSurvey-Umfragen zu verschiedenen Zeitpunkten für eine Langzeitstudie gemacht. Manche Probanden haben nur an T1 teilgenommen, andere nur an T2, manche an beiden. Ich möchte natürlich alle Probanden behalten, auch wenn manche bei einigen Variablen dann Lücken zeigen. Alle Zeilen aus beiden Studien sollen behalten werden.\n\nleft_join(): Das Ergebnis enthält alle Zeilen aus dem ersten Datensatz und passende aus dem zweiten Datensatz.\nBeispiel: In meiner Studie wurde Stress bei DiabetikerInnen gemessen. Viele der DiabetikerInnen haben bereits an einer anderen Studie teilgenommen, bei der die medizinischen Daten noch genauer erhoben wurden. Ich möchte davon alles, was meine Studie ergänzen kann, übernehmen. Der Stress-Datensatz soll dabei natürlich komplett erhalten bleiben. Zeilen von Probanden aus der anderen Studie, die nicht an der Stress-Studie teilgenommen haben, interessieren mich aber nicht.\n\nright_join(): Das Ergebnis enthält alle Zeilen aus dem zweiten Datensatz und passende aus dem ersten Datensatz.\n\nMit left_join() und right_join() lässt sich also prinzipiell das Gleiche erreichen, wenn man die Datensätze an die passende Stelle setzt. Für welche Option man sich entscheidet hängt also vor allem davon ab, ob vor dem Joinen noch Datawrangling notwendig ist, z.B. wenn ich aus meinem ergänzenden Datensatz nur bestimmte Spalten übernehmen will:\n\n\ndata2 %&gt;% \n  select(ID, var3, var4) %&gt;% \n  right_join(data1, by=\"ID\")\n# Output besteht aus data1 (+ Erweiterungen)\n\n\n\nJetzt, wo ihr die Theorie von left_join() kennengelernt habt, könnt ihr es auch selbst anwenden für unsere dataframes.\n\nWMC_vals &lt;- WMC_vals %&gt;%\n  mutate(subject.id = as.numeric(subject.id))\n\ndata.joined &lt;- dataset %&gt;% \n  left_join(WMC_vals, by = c(\"id\"= \"subject.id\"))\n\n\n\ndata.joined &lt;- WMC_vals %&gt;% \n  mutate(subject.id = as.numeric(subject.id)) %&gt;% \n  right_join(dataset, by = c(\"subject.id\"= \"id\"))"
  },
  {
    "objectID": "5join.html#aufgabe",
    "href": "5join.html#aufgabe",
    "title": "Zusammenhängende Dataframes",
    "section": "",
    "text": "Jetzt, wo ihr die Theorie von left_join() kennengelernt habt, könnt ihr es auch selbst anwenden für unsere dataframes.\n\nWMC_vals &lt;- WMC_vals %&gt;%\n  mutate(subject.id = as.numeric(subject.id))\n\ndata.joined &lt;- dataset %&gt;% \n  left_join(WMC_vals, by = c(\"id\"= \"subject.id\"))\n\n\n\ndata.joined &lt;- WMC_vals %&gt;% \n  mutate(subject.id = as.numeric(subject.id)) %&gt;% \n  right_join(dataset, by = c(\"subject.id\"= \"id\"))"
  },
  {
    "objectID": "assignments-overview.html",
    "href": "assignments-overview.html",
    "title": "Lösungen der Übungsblätter",
    "section": "",
    "text": "Hier findet ihr unsere Musterlösungen der Übungsblätter. In vielen Fällen gibt es natürlich auch mehrere Wege, die zur Lösung führen.\nFür Übungsblatt 7 gibt es keine Musterlösung - da habt ihr euch ja eine eigene Fragestellung überlegt.\n\nÜbungsblatt 1\nÜbungsblatt 2\nÜbungsblatt 3\nÜbungsblatt 4\nÜbungsblatt 5\nÜbungsblatt 6"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Seminar Medienbasierte Wissenskonstruktion: R - Website",
    "section": "",
    "text": "Herzlich willkommen auf unserer seminarbegleitenden Website. Hier findet ihr die Seminarskripte (i.e., im Seminar verwendete .qmd Dateien), Lösungen der Übungsblätter sowie weitere, hilfreiche Informationen.\n\n\n\n\n\n\n\nDie Folien sind hier zu finden.\n\n\n\n\nBase R\nData Wrangling mit dplyr\nData visualisation mit ggplot2\n\n\n\n\n\nInferenzstatistik in R\nBerichte in R\n\n\n\n\n\nSkalen erstellen mit mutate() und across()\nDeskr. Auswertung & Wide/Long-Format\nInferenzstatistische Analyse"
  },
  {
    "objectID": "index.html#seminar1---basics",
    "href": "index.html#seminar1---basics",
    "title": "Seminar Medienbasierte Wissenskonstruktion: R - Website",
    "section": "",
    "text": "Die Folien sind hier zu finden."
  },
  {
    "objectID": "index.html#seminar2---data-wrangling-desriptives-visualisierung",
    "href": "index.html#seminar2---data-wrangling-desriptives-visualisierung",
    "title": "Seminar Medienbasierte Wissenskonstruktion: R - Website",
    "section": "",
    "text": "Base R\nData Wrangling mit dplyr\nData visualisation mit ggplot2"
  },
  {
    "objectID": "index.html#seminar3---inferenzstatistik-berichten",
    "href": "index.html#seminar3---inferenzstatistik-berichten",
    "title": "Seminar Medienbasierte Wissenskonstruktion: R - Website",
    "section": "",
    "text": "Inferenzstatistik in R\nBerichte in R"
  },
  {
    "objectID": "index.html#seminar4---konkrete-anwendungsfälle-studien-limesurvey",
    "href": "index.html#seminar4---konkrete-anwendungsfälle-studien-limesurvey",
    "title": "Seminar Medienbasierte Wissenskonstruktion: R - Website",
    "section": "",
    "text": "Skalen erstellen mit mutate() und across()\nDeskr. Auswertung & Wide/Long-Format\nInferenzstatistische Analyse"
  },
  {
    "objectID": "learninganalytics_part2.html",
    "href": "learninganalytics_part2.html",
    "title": "OULAD",
    "section": "",
    "text": "library(tidyverse)\n\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")\nStarten wir damit, die .csv Dateien einzulesen. Wir speichern zunächst die Pfade der Dateien unter files ab, und wenden dann über lapply() die read.csv() Funktion an:\nfiles &lt;- c(\"/assets/datasets/kaggle_learning_analytics/assessments.csv\",\n           \"/assets/datasets/kaggle_learning_analytics/courses.csv\",\n           \"/assets/datasets/kaggle_learning_analytics/studentAssessment.csv\",\n           \"/assets/datasets/kaggle_learning_analytics/studentInfo.csv\",\n           \"/assets/datasets/kaggle_learning_analytics/studentRegistration.csv\",\n           \"/assets/datasets/kaggle_learning_analytics/studentVle.csv\",\n           \"/assets/datasets/kaggle_learning_analytics/vle.csv\")\n\nfiles &lt;- lapply(files, read.csv)\n\nnames &lt;- c(\"assessments\",\n           \"courses\",\n           \"studentAssessment\",\n           \"studentInfo\",\n           \"studentRegistration\",\n           \"studentVle\",\n           \"vle\")\n\nnames(files) &lt;- names\nZum Schluss haben wir den Listenobjekten noch Namen aus einem Vektor zugewiesen, damit wir die einzelnen DFs einfach über den $ Operator referenzieren können."
  },
  {
    "objectID": "learninganalytics_part2.html#teil-2-data-wrangling",
    "href": "learninganalytics_part2.html#teil-2-data-wrangling",
    "title": "OULAD",
    "section": "Teil 2: Data Wrangling",
    "text": "Teil 2: Data Wrangling\nFangen wir nun also an, zu schauen, wie wir feststellen können, ob ein Assessment bestanden wurde. Dazu hilft ein Blick in studentAssessment:\n\nfiles$studentAssessment %&gt;% head()\n\nWir sehen, dass wir id_assessment, id_student, und score haben. Das heißt, wir wissen über jedes assessment, wieviele Punkte einzelne students dort erzielt haben.\nAus dem Paper wissen wir, dass Scores &lt; 40 als nicht bestanden gelten. Wir können nun also alle Lernenden berechnen, ob der Test bestanden wurde. Über den $ Operator können wir auch Zuweisungsoperationen machen. Mit -&gt; hinten angehangen ist es das gleiche wie vorne &lt;- ,nur etwas ästhetischer. if_else() hilft uns hier.\n\nfiles$studentAssessment %&gt;% \n  mutate(passed = if_else(score &gt; 40, TRUE, FALSE)) -&gt; files$studentAssessment\n\nNun wollen wir auf Basis dessen etwas weitermachen. Dazu wollen wir wissen, wieviele denn überhaupt in einem Assessment mitgemacht haben. Dann können wir zählen, wieviele bestanden/nicht bestanden haben, und daraus eine passing_rate und fail_rate berechnen. Dabei helfen sum(), welches bei TRUE/FALSE immer die TRUE zählt, und n().\n\nfiles$studentAssessment %&gt;% \n  group_by(id_assessment) %&gt;% \n  summarise(n=n(),\n            passed = sum(passed, na.rm=T),\n            failed = n-passed,\n            passing_rate = passed/n,\n            fail_rate = failed/n\n            ) -&gt; files$courses_passRate\n\nNun wissen wir, wieviele mitgemacht haben pro assignment (n), wieviele bestanden haben (passed), wieviele nicht bestanden haben (failed), und haben daraus die zwei Rates berechnet (als Prozentzahl bzw. Wert zwischen 0.0 und 1.0).\nLeider haben wir diese Information aktuell nur pro Test, nicht aber pro Modul. Um diese zu berechnen, können wir mit left_join() über id_assessment den assessments Datensatz mit unserem gerade erstellten courses_passRate zusammenführen:\n\nfiles$assessments %&gt;% \n  left_join(files$courses_passRate %&gt;% select(c(id_assessment,passed:fail_rate)), by=\"id_assessment\") -&gt; files$assessments\n\nSo wissen wir für jedes assessment und jedes entsprechende code_module, wie hoch die Bestehensrate ist. Wir bemerken, dass es mehrere Ausprägungen gibt für code_module und code_presentation:\n\nfiles$assessments %&gt;% \n  group_by(code_module, code_presentation) %&gt;% \n  summarise(n=n())\n\nAnscheinend gibt es für code_presentation mehrere Ausprägungen, und zwar diese:\n\nfiles$assessments %&gt;% \n  select(code_presentation) %&gt;% \n  distinct()\n\nWir wollen uns zunächst auf die erste Zeiteinheit, 2013J, fokussieren. Das heißt, wir filtern die Daten entsprechend. Das machen wir aber im Folgenden direkt über die dyplr Pipe, um nicht unnötige Dataframes in unserem Environment zwischenspeichern zu müssen.\nPlotten wir also mit geom_point() und geom_line(), und facettieren mit facet_wrap() über code_module.\n\nfiles$assessments %&gt;% \n  filter(code_presentation == \"2013J\") %&gt;% \n  ggplot()+\n  geom_point(aes(x=date,y=passing_rate, color=code_module))+\n  geom_line(aes(x=date,y=passing_rate, color=code_module))+\n  facet_wrap(code_module~.)+\n  theme_classic()+\n  scale_color_manual(values=palette2)\n\nDas sieht schon mal ganz gut aus! Uns stört noch, dass es anscheinend mehrere Punkte gibt, die zur gleichen Zeit geschehen sind. Ein Beispiel dafür ist das code_module GGG. Schauen wir es uns also an:\n\nfiles$assessments %&gt;% \n  filter(code_presentation == \"2013J\") %&gt;% \n  filter(code_module == \"GGG\")\n\nAnscheinend gibt es mehrere assessments, die zum date “229” geschrieben wurden. Wir vermuten, dass diese dennoch nicht zeitgleich, sondern nacheinander geschehen sind. Dafür könnten wir uns an der aufsteigenden id_assessment orientieren. Wir wollen nun also eine ID-Variable, welche pro Gruppe aufsteigt, und den einzelnen Tests eine ID zuweist. Wahlweise könnten wir auch einen Faktor machen. Das ist vielleicht sogar einfacher, also starten wir damit:\n\nfiles$assessments %&gt;% \n  filter(code_presentation == \"2013J\") %&gt;% \n  mutate(id_assessment = as.factor(id_assessment)) %&gt;% \n  ggplot()+\n  geom_point(aes(x=id_assessment,y=passing_rate, color=code_module))+\n  geom_line(aes(x=id_assessment,y=passing_rate, color=code_module))+\n  facet_wrap(code_module~.)+\n  theme_classic()+\n  scale_color_manual(values=palette2)\n\nDas scheint nicht zu funktionieren, es scheint zu viele Ausprägungen von id_assessment zu geben. Wir wissen aber, dass es pro Kurs nur eine handvoll assessments gibt. Wir könnten also doch lieber die Option mit der aufsteigenden ID pro assessment machen. Dazu können wir mit row_number() pro Gruppe arbeiten:\n\nfiles$assessments %&gt;% \n  filter(code_presentation == \"2013J\") %&gt;% \n  group_by(code_module) %&gt;% \n  mutate(id=row_number())\n\nDurch unser group_by() beziehen sich alle mutate() Operationen auf die Gruppe. row_number() gibt uns den jeweiligen Index aus (i.e., die Nummer der Zeile). Somit können wir einen aufsteigenden Index pro Test für jedes Modul zuweisen.\nWir sehen auch, dass wir noch den assessment_type “Exam” haben, für den es keine Informationen bzgl. passing_rate etc. gibt. Diese wollen wir also auch herausfiltern:\n\nfiles$assessments %&gt;% \n  filter(code_presentation == \"2013J\") %&gt;% \n  group_by(code_module) %&gt;% \n  mutate(id=row_number()) %&gt;% \n  filter(!is.na(date))\n\nNun haben wir also alle Ergebnisse der Zwischentests für alle Module in code_presentation “2013J”. Nun können wir unser ggplot() anhängen:\n\nfiles$assessments %&gt;% \n  filter(code_presentation == \"2013J\") %&gt;% \n  group_by(code_module) %&gt;% \n  mutate(id=row_number()) %&gt;% \n  filter(!is.na(date)) %&gt;% \n   ggplot()+\n  geom_point(aes(x=id,y=passing_rate, color=code_module))+\n  geom_line(aes(x=id,y=passing_rate, color=code_module))+\n  facet_wrap(code_module~.)+\n  theme_classic()+\n  scale_color_manual(values=palette2)\n\nSuper!"
  },
  {
    "objectID": "analysis3.html",
    "href": "analysis3.html",
    "title": "Inferenzstatistische Analyse",
    "section": "",
    "text": "library(tidyverse)\nlibrary(ggpubr)\nlibrary(rstatix)\n\ndataset &lt;- read.csv(\"dataset_srl_challenges_wrangled.csv\")"
  },
  {
    "objectID": "analysis3.html#inferenzstatistische-analyse",
    "href": "analysis3.html#inferenzstatistische-analyse",
    "title": "Inferenzstatistische Analyse",
    "section": "Inferenzstatistische Analyse",
    "text": "Inferenzstatistische Analyse\nJetzt, wo die Daten vorbereitet sind und wir sie besser kennen, können wir uns mit unserer eigentlichen Fragestellung beschäftigen: Werden die empfundenen Herausforderungen von Persönlichkeits- und Umgebungsfaktoren beeinflusst?\nIm Detail handelt es sich bei den Herauforderungen um:\n\nMetakognition P_Metakognition\nMotivation P_Motivation\nVerständnis P_Verständnis\nProbleme insgesamt Probleme_gesamt\n\nAls Persönlichkeitsfaktor schauen wir uns die Gewissenhaftigkeit der Big Five an.\nFür die Umgebungsfaktoren haben wir einen Gesamtscore berechnet, der Ablenkbarkeit, Getrenntheit und Komfort berücksichtigt.\nKonkret wollen wir untersuchen, inwiefern die einzelnen Herausforderungen von Gewissenhaftigkeit, Umgebung und deren Interaktion beeinflusst werden.\nWas rechnen wir dafür?\nWelche Voraussetzungen müssen wir testen?\n\nFührt die Regressionsanalysen durch und testet vorher auch die Voraussetzungen.\n\n\nVoraussetzung Multikollinearität\nBei Regressionen ist es wichtig, dass die einzelnen Prädiktoren nicht zu hoch miteinander korrelieren.\n\ndataset %&gt;% \n  cor_test(suboptimal_study, gewissenhaftigkeit)\n\n# A tibble: 1 × 8\n  var1             var2           cor statistic      p conf.low conf.high method\n  &lt;chr&gt;            &lt;chr&gt;        &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt; \n1 suboptimal_study gewissenhaf… -0.22     -2.39 0.0187   -0.385   -0.0372 Pears…\n\n\n\n\nRegressionen\n\n# AV 1\nlm1 &lt;- lm(P_Metakognition ~ suboptimal_study*gewissenhaftigkeit, dataset)\nsummary(lm1)\n\n\nCall:\nlm(formula = P_Metakognition ~ suboptimal_study * gewissenhaftigkeit, \n    data = dataset)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.12256 -0.43710 -0.06016  0.38035  1.40455 \n\nCoefficients:\n                                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                          3.59869    0.79162   4.546 1.39e-05 ***\nsuboptimal_study                     0.11141    0.23430   0.475   0.6354    \ngewissenhaftigkeit                  -0.58172    0.22579  -2.576   0.0113 *  \nsuboptimal_study:gewissenhaftigkeit  0.02056    0.06884   0.299   0.7657    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5476 on 112 degrees of freedom\nMultiple R-squared:  0.3611,    Adjusted R-squared:  0.3439 \nF-statistic:  21.1 on 3 and 112 DF,  p-value: 6.621e-11\n\n# AV 2\nlm2 &lt;- lm(P_Motivation ~ suboptimal_study*gewissenhaftigkeit, dataset)\nsummary(lm2)\n\n\nCall:\nlm(formula = P_Motivation ~ suboptimal_study * gewissenhaftigkeit, \n    data = dataset)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.3312 -0.7064 -0.1931  0.5885  2.6584 \n\nCoefficients:\n                                    Estimate Std. Error t value Pr(&gt;|t|)  \n(Intercept)                          2.70995    1.27394   2.127   0.0356 *\nsuboptimal_study                     0.02345    0.37706   0.062   0.9505  \ngewissenhaftigkeit                  -0.31227    0.36336  -0.859   0.3920  \nsuboptimal_study:gewissenhaftigkeit  0.03558    0.11079   0.321   0.7487  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8812 on 112 degrees of freedom\nMultiple R-squared:  0.05395,   Adjusted R-squared:  0.02861 \nF-statistic: 2.129 on 3 and 112 DF,  p-value: 0.1006\n\n# AV 3\nlm3 &lt;- lm(P_Verständnis ~ suboptimal_study*gewissenhaftigkeit, dataset)\nsummary(lm3)\n\n\nCall:\nlm(formula = P_Verständnis ~ suboptimal_study * gewissenhaftigkeit, \n    data = dataset)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.5728 -0.6467 -0.1868  0.6031  2.1289 \n\nCoefficients:\n                                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                           5.6631     1.2232   4.630 9.92e-06 ***\nsuboptimal_study                     -0.8490     0.3621  -2.345  0.02078 *  \ngewissenhaftigkeit                   -1.0957     0.3489  -3.140  0.00216 ** \nsuboptimal_study:gewissenhaftigkeit   0.3121     0.1064   2.934  0.00406 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8461 on 112 degrees of freedom\nMultiple R-squared:  0.1236,    Adjusted R-squared:  0.1002 \nF-statistic: 5.267 on 3 and 112 DF,  p-value: 0.001953\n\n# AV 4\nlm4 &lt;- lm(Probleme_gesamt ~ suboptimal_study*gewissenhaftigkeit, dataset)\nsummary(lm4)\n\n\nCall:\nlm(formula = Probleme_gesamt ~ suboptimal_study * gewissenhaftigkeit, \n    data = dataset)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.9410 -0.3921 -0.1479  0.3906  1.6183 \n\nCoefficients:\n                                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                          3.312658   0.779327   4.251 4.43e-05 ***\nsuboptimal_study                    -0.001691   0.230666  -0.007   0.9942    \ngewissenhaftigkeit                  -0.498589   0.222286  -2.243   0.0269 *  \nsuboptimal_study:gewissenhaftigkeit  0.070165   0.067773   1.035   0.3028    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5391 on 112 degrees of freedom\nMultiple R-squared:  0.2621,    Adjusted R-squared:  0.2423 \nF-statistic: 13.26 on 3 and 112 DF,  p-value: 1.806e-07\n\n\n\n\nVoraussetzung Normalverteilung\nBei einer Regression muss nicht die Normalverteilung der einzelnen Variablen, sondern der Fehler der Regression getestet werden. Es geht also um die Abweichung der wahren Werte von unseren vorhergesagten Werten. Wenn diese normalverteilt sind,\n\nshapiro.test(lm1$residuals)\n\n\n    Shapiro-Wilk normality test\n\ndata:  lm1$residuals\nW = 0.97975, p-value = 0.07666\n\nshapiro.test(lm2$residuals)\n\n\n    Shapiro-Wilk normality test\n\ndata:  lm2$residuals\nW = 0.92752, p-value = 9.359e-06\n\nshapiro.test(lm3$residuals)\n\n\n    Shapiro-Wilk normality test\n\ndata:  lm3$residuals\nW = 0.96932, p-value = 0.009209\n\nshapiro.test(lm4$residuals)\n\n\n    Shapiro-Wilk normality test\n\ndata:  lm4$residuals\nW = 0.9584, p-value = 0.00119"
  },
  {
    "objectID": "analysis3.html#interaktionsdiagramme",
    "href": "analysis3.html#interaktionsdiagramme",
    "title": "Inferenzstatistische Analyse",
    "section": "Interaktionsdiagramme",
    "text": "Interaktionsdiagramme\nWir wollen die Zusammenhänge jetzt noch visuell darstellen, indem wir Interaktionsdiagramme erstellen. Da wir zwei kontinuierliche Prädiktoren verwendet haben, können wir für eine bessere Visualisierung mithilfe eines Mediansplit einen der Prädiktoren umwandeln in eine kategoriale Variable: Werte, die geringer sind als der Median, haben die Ausprägung “niedrig”; Werte, die höher sind als der Median, haben die Ausprägung “hoch”.\n\nBerechnet eine neue Variable, die entsprechend dem Median zwei Faktorstufen hatx\nErstellt Interaktionsplots zu jeder der Regressionen\nBenutzt ggarrange() aus ggpubr, um alle vier Plots in einem Plot darzustellen\n\n\nVariable umwandeln\n\ndataset$gewiss.median &lt;- ifelse(dataset$gewissenhaftigkeit &lt;= median(dataset$gewissenhaftigkeit, na.rm=T), \"low\", \"high\")\n\n\n\nSeparate Plots erstellen\n\nplot1 &lt;- ggplot(dataset, aes(gh_SQ007,hsf1_KIZ01, color=gewiss.median))+\n  geom_jitter()+\n  geom_smooth(method=\"lm\", se=F)+\n  theme_minimal()\n\nplot2 &lt;- ggplot(dataset, aes(gh_SQ007,hsf1_KIZ01, color=gewiss.median))+\n  geom_jitter()+\n  geom_smooth(method=\"lm\", se=F)+\n  theme_minimal()\n\nplot3 &lt;- ggplot(dataset, aes(gh_SQ007,hsf1_KIZ01, color=gewiss.median))+\n  geom_jitter()+\n  geom_smooth(method=\"lm\", se=F)+\n  theme_minimal()\n\nplot4 &lt;- ggplot(dataset, aes(gh_SQ007,hsf1_KIZ01, color=gewiss.median))+\n  geom_jitter()+\n  geom_smooth(method=\"lm\", se=F)+\n  theme_minimal()\n\n\n\nPlots zusammenfügen\nWenn wir mehrere Plots in der gleichen Grafik darstellen wollen, können wir das mit ggarrange() aus dem ggpubr Package umsetzen.\n\nggarrange(plot1, plot2, plot3, plot4, \n          ncol=2, nrow=2,\n          common.legend =T)\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nTheoretisch hätten wir hier auch die schon erwähnten facet_wrap() oder facet_grid() verwenden können. Dazu hätten wir unsere Daten allerdings umstrukturieren müssen, sodass wir anhand einer kategoriellen Variable spezifizieren können, welche Daten in welchen Plot gehören. Diese Alternative funktioniert allerdings auch nur solange, wie wir den gleichen Plot-Type und die gleichen Variablen für alle Subplots verwenden wollen. Sobald wir verschiedene Plots darstellen wollen, müssen wir auf ggarrange zurückgreifen. In vielen Fällen spricht allerdings auch nichts dagegen, die Plots einfach separat zu lassen."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "analysis2.html",
    "href": "analysis2.html",
    "title": "Wide/long Format",
    "section": "",
    "text": "Show code\nlibrary(tidyverse)\nlibrary(reshape2)\nlibrary(reactable)\n\npalette1 &lt;- c(\"#648fff\",\"#785ef0\",\"#dc267f\",\"#fe6100\",\"#ffb000\",\"#000000\",\"#ffffff\")\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")\n\ndataset &lt;- read.csv(\"dataset_srl_challenges_wrangled.csv\")"
  },
  {
    "objectID": "analysis2.html#deskriptive-analysen",
    "href": "analysis2.html#deskriptive-analysen",
    "title": "Wide/long Format",
    "section": "Deskriptive Analysen",
    "text": "Deskriptive Analysen\nWir haben nun also den Datensatz bereinigt, Items zu Summen- bzw. meanscores zusammengefasst, sowie deren interne Konsistenz berichtet. Super! Der nächste Schritt in unserer Analyse wäre üblicherweise, mittels deskriptiver Analysen eine Idee von unseren Daten zu bekommen. Das machen wir gleich mal:\n\nStichprobe\nNatürlich haben wir die Basis-Informationen zu unserer Stichprobe, wie Alter, Geschlecht, etc.\n\nFrage: Wie können wir das gut berichten?\n\n\ndataset %&gt;% \n  group_by(dmSex) %&gt;% \n  summarise(age=mean(dmAge),n=n()) %&gt;% \n  mutate(rel=paste0(round(n/sum(n)*100,2),\"%\"))\n\n\n\n  \n\n\n\nFalls wir unseren Output direkt in einem publikationsfähigen Table haben wollen, können wir dies mit stargazer() tun:\ndataset %&gt;% \n  group_by(dmSex) %&gt;% \n  summarise(age=round(mean(dmAge)),n=n()) %&gt;% \n  stargazer::stargazer(type = \"html\",summary = F)\n\n\n\n\n\n\n\n\n\n\ndmSex\n\n\nage\n\n\nn\n\n\n\n\n\n\n\n\n1\n\n\ndivers\n\n\n18\n\n\n1\n\n\n\n\n2\n\n\nfemale\n\n\n22\n\n\n82\n\n\n\n\n3\n\n\nmale\n\n\n23\n\n\n33\n\n\n\n\n\n\n\n\n\n\nFragebögen\nIn wissenschaftlichen Arbeiten ist es üblich, immer auch gleich die mean() bzw. sd() values mitzuberichten. Machen wir das also für unsere eben gebildeten Skalen.\n\n\nSuboptimal Study\n\ndataset %&gt;% \n  summarise(across(c(sl_SQ002,\n                     sl_SQ003,\n                     sl_SQ005,\n                     sl_SQ007),\n                   list(mean=mean,sd=sd)),\n            total_mean=mean(suboptimal_study),\n            total_sd=sd(suboptimal_study))\n\n\n\n  \n\n\n\n\n\nGewissenhaftigkeit\n\ndataset %&gt;% \n  summarise(across(c(gh_ordnungsliebe,\n  gh_fleiss,\n  gh_verlaesslichkeit),list(mean=mean,sd=sd)),total_m=mean(gewissenhaftigkeit),total_sd=sd(gewissenhaftigkeit))\n\n\n\n  \n\n\n\n\n\nSRL-Probleme\nUnser 90-Items Fragebogen, zu dem wir glücklicherweise schon die Meanscores haben, bietet sich aufgrund der Größe eher weniger zur numerischen Darstellung an. Hier wollen wir lieber visuell die Werte zeigen. Doch wie machen wir das? Ein kurzer Blick in den Datensatz verrät, dass es einige Subskalen gibt:\n\ndataset %&gt;% \n  select(starts_with(\"P\",ignore.case=F),-Probleme_gesamt)\n\n\n\n  \n\n\n\nAngenommen, wir wollten aber nun die Mittelwerte sowie Standardabweichungen (bspw. über geom_bar() und geom_errorbar()) für alle diese Spalten berechnen - wie würden wir da vorgehen? Das leitet zu einem weiteren wichtigen Konzept über: Das long vs. wide Format von Daten."
  },
  {
    "objectID": "analysis2.html#reshaping-data",
    "href": "analysis2.html#reshaping-data",
    "title": "Wide/long Format",
    "section": "Reshaping data",
    "text": "Reshaping data\nNormalerweise sind Daten in einem Format angeordnet, das dem folgendem entspricht:\n\n\n\n\n  \n\n\n\n\nFrage: Wenn wir nun allerdings die Variablen variable1, variable2 und variable3 in einem Plot darstellen wollten, was wäre das Problem?\n\n\ndf %&gt;% \n  ggplot()+\n  geom_bar(aes(x=?,y=?))\n\nDas Problem ist, dass die Variablen als einzelne Spalten vorhanden sind, das hilft uns bei der Visualisierung mit ggplot nicht weiter. Die Daten befinden sich im long Format. Für viele Analysen bietet sich aber das wide Format viel besser an. Hier ein Beispiel, wie das wide Format im oben genannten Dataframe aussieht:\n\n\n\n\n  \n\n\n\nSomit können wir viel einfacher mit ggplot weiterarbeiten:\n\ndf %&gt;% \n  tidyr::pivot_longer(cols=variable1:variable3) %&gt;% \n  ggplot() +\n  geom_boxplot(aes(x=name,y=value,fill=name))+\n  scale_fill_manual(values=palette1)+\n  theme_classic()\n\nDieses sogenannte “schmelzen” des Dataframes ermöglicht uns die Funktion pivot_longer aus dem tidyr Package. Dessen Syntax ist relativ einfach:\n\ndf %&gt;% \n  tidyr::pivot_longer(cols=variable1:variable3)\n\nHierbei bleibt die Variable, die nicht bei cols= übergeben wird, automatisch als ID Variable.\nMachen wir das also mit unserem Datensatz, um die verschiedenen Subskalen für Probleme zu visualisieren:\n\ndataset %&gt;% \n  select(id,starts_with(\"P\",ignore.case=F),-Probleme_gesamt) %&gt;% \n  tidyr::pivot_longer(cols=P_Verständnis:P_Ressouren_Technik)\n\n\n\n  \n\n\n\nNun können wir ganz einfach weiterarbeiten mit ggplot.\n\nFrage: Probieren wir doch mal ein Violin-Plot aus!\n\n\ndataset %&gt;% \n  select(starts_with(\"P\",ignore.case=F),-Probleme_gesamt) %&gt;% \n  tidyr::pivot_longer(cols=P_Verständnis:P_Ressouren_Technik) %&gt;% \n  ggplot()+\n  geom_violin(aes(x=name,y=value,fill=name))+\n  theme_classic()+\n  scale_fill_manual(values=palette2)+\n  scale_x_discrete(guide = guide_axis(angle = 45))"
  },
  {
    "objectID": "analysis3_1_dates.html",
    "href": "analysis3_1_dates.html",
    "title": "Dates & Times",
    "section": "",
    "text": "Show code\nlibrary(tidyverse)\nlibrary(reshape2)\nlibrary(reactable)\nlibrary(nycflights13)\n\npalette1 &lt;- c(\"#648fff\",\"#785ef0\",\"#dc267f\",\"#fe6100\",\"#ffb000\",\"#000000\",\"#ffffff\")\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")"
  },
  {
    "objectID": "analysis3_1_dates.html#datumsobjekte-und-zeiten",
    "href": "analysis3_1_dates.html#datumsobjekte-und-zeiten",
    "title": "Dates & Times",
    "section": "Datumsobjekte und Zeiten",
    "text": "Datumsobjekte und Zeiten\nNatürlich stellt sich zunächst die Frage, was Datumsobjekte sind und wie sie sich von anderen Datentypen unterscheiden. Neben character, numeric oder factor gibt es auch Date & POSIXct. Die Funktionen today() und now() können uns das aktuelle Datum bzw. die Zeit geben und demonstrieren uns dabei die beiden Datentypen:\n\n# Date:\ntoday()\n\n[1] \"2023-10-02\"\n\n# PosixCT:\nnow()\n\n[1] \"2023-10-02 13:53:48 CEST\"\n\n\n\nFrage: Wofür steht CEST?\n\nCEST ist eine Zeitzone - Zeitzonen spielen bei Datumsobjekten eine Rolle, aber dazu später mehr.\n\nDate\nIhr habt bereits die Funktion as.Date() verwendet. Damit könnt ihr einen String in ein Datumsobjekt umwandeln, welches dann das Datum enthält:\n\nas.Date(\"1969-07-20\")\n\n[1] \"1969-07-20\"\n\n\n\n\nPOSIXct\nWenn wir jetzt auch die Uhrzeit abspeichern wollten, müssten wir ein POSIXct Objekt erzeugen, da R keinen eigenen Objekttyp für Zeiten hat:\n\nas.POSIXct(\"1969-07-20 20:17:40\")\n\n[1] \"1969-07-20 20:17:40 CET\"\n\n\nSuper! Wir haben Datumsobjekte kennengelernt und erfolgreich angewendet. Jetzt stellt sich nur eine Frage:\n\nWelchen Vorteil haben Datumsobjekte? Wofür brauchen wir so etwas?\n\nIm Gegensatz zu Zeiten, die bspw. als character gespeichert sind, können wir mit Datumsobjekten eine Vielzahl an Dingen machen. So können wir bspw. Zeiträume berechnen, Tage/Monate oder Wochentage extrahieren, und ebenso Zeitzonen umrechnen. Großartig!\nOb das ganze wirklich so einfach wie gedacht ist, und wann lubridate ins Spiel kommt, das lernen wir jetzt."
  },
  {
    "objectID": "analysis3_1_dates.html#datumsformate",
    "href": "analysis3_1_dates.html#datumsformate",
    "title": "Dates & Times",
    "section": "Datumsformate",
    "text": "Datumsformate\nFangen wir also damit an, den angepassten flights Datensatz aus dem Moodle zu importieren:\n\ndataset &lt;- read.csv(\"assets/datasets/flights.csv\")\n\nZunächst wollen wir eine Idee davon bekommen:\n\nhead(dataset)\n\n\n\n  \n\n\n\n\nFrage: Welche sind die für uns relevanten, zeitbezogenen Spalten? Was für Probleme könnte es geben?\n\n\ndataset %&gt;% \n  mutate(departure = as.Date(departure))\n\nR schmeißt uns hier den Fehler:\n\ncharacter string is not in a standard unambiguous format\nFrage: Wie könnten wir diesen Fehler lösen?\n\nGenau, erstens handelt es sich nicht nur um ein Datum, sondern um ein Datum mit Zeit, weshalb sich hier POSIXct besser eignet. Damit R aber unser Datumsobjekt auch als solches versteht, müssen wir auch das entsprechende Format des Datumsobjekts klarmachen. Wie auf dem Titelbild oben zu sehen, gibt es eine Vielzahl verschiedener Möglichkeiten, Daten aufzuschreiben, etwa:\n\n\"1969/07/20 20:17:40\"\n\"1969-07-20 20 Uhr\"\n\"20.7.1969 20:17:40\"\n\"20.07.1969 20:17:40\"\n\"20. Juli 1969 um 20:17:40\"\netc.\n\n\nCodes\nDas heißt, wir müssen irgendwie das Format definieren, in dem das Datum “geparsed” werden soll. Dazu gibt es verschiedene Codes. So können wir etwa über %d das Datum definieren, oder über %m den Monat. Hier eine (unvollständige) Liste der Codes, übernommen von hier:\n\n\n\nType\nCode\nMeaning\nExample\n\n\n\n\nYear\n%Y\n4 digit year\n2021\n\n\n\n%y\n2 digit year\n21\n\n\nMonth\n%m\nNumber\n2\n\n\n\n%b\nAbbreviated name\nFeb\n\n\n\n%B\nFull name\nFebruary\n\n\nDay\n%d\nTwo digits\n02\n\n\n\n%e\nOne or two digits\n2\n\n\nTime\n%H\n24-hour hour\n13\n\n\n\n%I\n12-hour hour\n1\n\n\n\n%p\nAM/PM\npm\n\n\n\n%M\nMinutes\n35\n\n\n\n%S\nSeconds\n45\n\n\n\n%Z\nTime zone name\nAmerica/Chicago\n\n\n\n%z\nOffset from UTC\n+0800\n\n\n\nWir können nun aus diesen Codes das Datum parsen. Manchmal enthalten Daten noch zusätzliche Zeichen, wie etwa / oder :. Diese können wir einfach kombinieren mit den Codes:\n\nas.POSIXct(\"69/07/20-20:17:40\", format = \"%y/%m/%d-%H:%M:%S\")\n\n[1] \"1969-07-20 20:17:40 CET\"\n\n\n\nFrage: Was fällt auf?\n\nWie wir sehen können, haben wir den String \"69/07/20-20:17:40\" erfolgreich “geparsed”. Das hat nur funktioniert, weil wir das Format über format = \"%y/%m/%d-%H:%M:%S\" definiert haben."
  },
  {
    "objectID": "analysis3_1_dates.html#flights-datensatz",
    "href": "analysis3_1_dates.html#flights-datensatz",
    "title": "Dates & Times",
    "section": "Flights Datensatz",
    "text": "Flights Datensatz\nBetrachten wir nun also wieder unseren Datensatz dataset, und die darin enthaltenen Zeitspalten.\n\nWie können wir diese in ein richtiges Zeitobjekt überführen?\n\nAm besten wie oben, nur angepasst auf das neue Format:\n\ndataset %&gt;% \n  mutate(departure = as.POSIXct(departure, format = \"%d.%m.%Y %H:%M:%S\"),\n         scheduled_departure = as.POSIXct(departure, format = \"%d.%m.%Y %H:%M:%S\"),\n         arrival = as.POSIXct(arrival, format = \"%d.%m.%Y %H:%M:%S\"),\n         scheduled_arrival = as.POSIXct(scheduled_arrival, format = \"%d.%m.%Y %H:%M:%S\")) %&gt;% \n  head()\n\n\n\n  \n\n\n\nHätten wir das gleiche mit as.Date() gemacht, würden wir natürlich keine Uhrzeit mit dabei haben:\n\ndataset %&gt;% \n  mutate(departure = as.Date(departure, format = \"%d.%m.%Y\"),\n         scheduled_departure = as.Date(departure, format = \"%d.%m.%Y\"),\n         arrival = as.Date(arrival, format = \"%d.%m.%Y\"),\n         scheduled_arrival = as.Date(scheduled_arrival, format = \"%d.%m.%Y\")) %&gt;% \n  head()\n\n\n\n  \n\n\n\nSuper! Nun wisst ihr, wie wie Spalten, in denen das Datum als character gespeichert ist, in ein richtiges Datumsobjekt überführt. Dennoch stellt sich die Frage, warum wir das ganze überhaupt machen - schließlich hätten wir die Spalten auch als einzelne “Faktoren” belassen können. Dazu kommen wir jetzt, denn die Datumsobjekte bringen eine Vielzahl sehr praktischer Funktionen mit sich, und dabei hilft uns am meisten das Package lubridate."
  },
  {
    "objectID": "analysis3_1_dates.html#lubridate-und-datumsobjekte",
    "href": "analysis3_1_dates.html#lubridate-und-datumsobjekte",
    "title": "Dates & Times",
    "section": "Lubridate und Datumsobjekte",
    "text": "Lubridate und Datumsobjekte\nWir könnten meinen, dass die obige Vorgehensweise etwas umständlich ist und erfordert, dass wir wissen, was die einzelnen Codes bedeuten. Lubridate bringt die Funktionen ymd_hms() und weitere mit:\n\nymd_hms(\"69/07/20-20:17:40\")\n\n[1] \"1969-07-20 20:17:40 UTC\"\n\n\nWir sehen, dass ymd_hms() das Datum auch ohne die Angabe des Formats parsed.\n\nFrage: Was wäre, wenn das Datum 20/7/1969 20:17:40 gelautet hätte?\n\nLubridate bringt wie bereits erwähnt eine Vielzahl von Funktionen mit. Das heißt, wenn wir den obigen String parsen wollten, könnten wir einfach dmy_hms() benutzen:\n\ndmy_hms(\"20/7/1969 20:17:40\")\n\n[1] \"1969-07-20 20:17:40 UTC\"\n\n\nEbenso gibt es mdy() für Daten wie \"7-20-1969\" oder mdy_hm() für \"07-20-1969 20:17\":\n\nmdy(\"7-20-1969\")\n\n[1] \"1969-07-20\"\n\n\nWir wissen nun also, wie wir bequem Datumsobjekte richtig umwandeln können. Aber was kann lubridate noch?\n\nKomponenten\nSobald wir ein Datumsobjekt haben, können wir allerlei Informationen daraus ziehen. Also bspw. den Tag…\n\ndate &lt;- dmy_hms(\"20/7/1969 20:17:40\")\n\nday(date)\n\n[1] 20\n\n\n…den Monat…\n\nmonth(date)\n\n[1] 7\n\n\noder das Jahr…\n\nyear(date)\n\n[1] 1969\n\n\n…oder die Kalenderwoche:\n\nweek(date)\n\n[1] 29\n\n\nManchmal kann es auch hilfreich sein, das Quartal zu extrahieren:\n\nquarter(date)\n\n[1] 3\n\n\nSuper! Wir wissen nun also, wie wir aus einem funktionierenden Datumsobjekt Komponenten herausziehen können. Versuchen wir das doch mal mit unserem Datensatz dataset.\n\nWie würden wir vorgehen, um die Datumsspalten mit lubridate richtig zu formatieren?\n\n\ndataset %&gt;% \n  mutate(departure = dmy_hms(departure),\n         scheduled_departure = dmy_hms(scheduled_departure),\n         arrival = dmy_hms(arrival),\n         scheduled_arrival = dmy_hms(scheduled_arrival))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `arrival = dmy_hms(arrival)`.\nCaused by warning:\n!  12 failed to parse.\n\n\n\n\n  \n\n\n\nIn der Warnmeldung sehen wir, dass 12 Zeilen nicht geparsed werden konnten. Offensichtlich gibt es 12 Zeilen, in denen es Probleme gibt. Da wir knapp 10,000 Observations haben, sind uns diese 12 Sonderfälle egal, und wir ignorieren den Fehler. Sollten wir aber einen kleineren Datensatz/kleinere Stichprobe haben, so wäre es schon relevant sich die betreffenden Zeilen anzuschauen. Wir müssen jetzt das ganze noch abspeichern:\n\ndataset &lt;- dataset %&gt;% \n              mutate(departure = dmy_hms(departure),\n                     scheduled_departure = dmy_hms(scheduled_departure),\n                     arrival = dmy_hms(arrival),\n                     scheduled_arrival = dmy_hms(scheduled_arrival))\n\nSicherlich erinnern wir uns noch an den flights Datensatz, und dass wir dort Verspätungen berechnet haben. Nun wollen wir das gleiche mit unserem Datensatz dataset machen. Das könnten wir etwa aus arrival und scheduled_arrival machen.\n\nFrage: Wie würden wir vorgehen?\n\nIm originalen flights Datensatz gab es einzelne Spalten für die Minuten und Stunden, sodass wir einfach die Verspätung als Zahl berechnen konnten (in dem Fall als Minuten). Nun, da wir richtige Datumsobjekte haben, können wir direkt mit ihnen arithmetische Operationen durchführen, was dann zu sogenannten difftime Objekten führt.\n\n\nDifftime\nBeachten wir den Output des folgenden Codes:\n\ndate1 &lt;- dmy_hms(\"20/7/1969 20:17:40\")\ndate2 &lt;- dmy_hms(\"21/7/1969 17:54:00\")\n\ndate2-date1\n\nTime difference of 21.60556 hours\n\n\nR gibt uns als Ergebnis der Subtraktion einen Satz mit der Zeitdifferenz aus. Wir sehen, dass der Datentyp difftime ist:\n\nclass(date2-date1)\n\n[1] \"difftime\"\n\n\nDifftime Objekte geben uns die Differenz intern in Sekunden wieder. Wir können die Differenz aber auch explizit berechnen, indem wir die difftime() Funktion benutzen. Hier müssen wir dann lediglich die zwei Zeitpunkte mit einem Komma (,) getrennt übergeben:\n\ndifftime(date2,date1)\n\nTime difference of 21.60556 hours\n\n\nNun können wir auch explizit machen, welche Einheit wir wollen:\n\ndifftime(date2,date1,units = \"mins\")\n\nTime difference of 1296.333 mins\n\n\nWir wissen also nun, wie wir Zeitdifferenzen berechnen. Wenden wir das nun also auf unseren Datensatz dataset an, und berechnen die Variable late:\n\ndataset &lt;- dataset %&gt;% \n              mutate(late = difftime(arrival,scheduled_arrival,units = \"mins\"))\n\nNun wollen wir late visualisieren, um eine Idee über die durchschnittlichen Verspätungen zu bekommen:\n\ndataset %&gt;% \n  ggplot(aes(x=late))+\n  geom_bar()+\n  theme_classic()\n\nDon't know how to automatically pick scale for object of type &lt;difftime&gt;.\nDefaulting to continuous.\n\n\nWarning: Removed 12 rows containing non-finite values (`stat_count()`).\n\n\n\n\n\nWir bekommen leider kein richtiges Ergebnis angezeigt.\n\nWoran könnte das liegen?\n\nEin kleiner Blick auf die Daten könnte uns helfen. Dazu müssen wir kurz die Variable mit as.numeric() umwandeln:\n\nsummary(as.numeric(dataset$late))\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n-3682851      -18       -6     7947       13  3682855       12 \n\n\nWir sehen, dass wir Werte haben, die extrem von der Mitte abweichen. Diese Ausreißer sollten wir entfernen. Wir wir das machen, lernt ihr gleich.\nBis dahin können wir aber hingehen und alles mit mehr als 120 Minuten Verspätung (oder zu früh) ausschließen:\n\ndataset %&gt;% \n  filter(late &lt; 120 & late &gt; -120) %&gt;% \n  ggplot(aes(x=late))+\n  geom_bar(fill=palette1[3])+\n  geom_vline(xintercept=0,linetype=\"dashed\")+\n  theme_classic()\n\nDon't know how to automatically pick scale for object of type &lt;difftime&gt;.\nDefaulting to continuous.\n\n\n\n\n\nWie zu sehen, kommt der Großteil der Flüge früher an als geplant, im Schnitt 0.48 Minuten.\nAngenommen, wir haben eine Studie mit 150 Proband:innen, und wollen den Datensatz in drei Gruppen aufteilen, je nach Uhrzeit: morgens, mittags und abends.\n\nWie könnten wir vorgehen? Wir haben POSIXct, Date und Difftime kennengelernt.\n\nAußer difftime, welches eine zeitliche Differenz wiedergibt, enthalten die beiden Typen POSXIct und Date immer auch das Datum. Was das für Implikationen hat, sehen wir, wenn wir die verschiedenen Daten im Folgenden betrachten:\n\nlanding_times &lt;- c(dmy_hms(\"20/7/1969 20:17:40\"),\n                   dmy_hms(\"19/11/1969 06:54:35\"),\n                   dmy_hms(\"5/2/1971 09:18:11\"),\n                   dmy_hms(\"30/7/1971 22:16:29\"),\n                   dmy_hms(\"21/4/1972 02:23:35\"),\n                   dmy_hms(\"11/12/1972 19:54:58\")) %&gt;% \n  as.data.frame() %&gt;% \n  setNames(c(\"time\"))\n\nlanding_times\n\n\n\n  \n\n\n\nlanding_times zeigt uns verschiedene Zeitpunkte, die teilweise Jahre voneinander entfernt sind. Wenn uns jetzt aber nur die Uhrzeit interessiert, wollen wir das Datum gar nicht betrachten.\n\nFrage: Wie können wir das lösen?\n\nEine Möglichkeit wäre es, über hour() und minute() zu arbeiten, etwa so:\n\nlanding_times %&gt;% \n  mutate(hour=hour(time),minute=minute(time))\n\n\n\n  \n\n\n\nWenn wir allerdings eine Spalte haben wollen, in der beides enthalten ist (also nur die Zeit, nach dem Prinzip h:m:s, dann kommen wir mit base-R nicht weiter, dann hilft uns das gleichnamige Package hms, über welches wir Zeiten abspeichern können."
  },
  {
    "objectID": "analysis3_1_dates.html#hms",
    "href": "analysis3_1_dates.html#hms",
    "title": "Dates & Times",
    "section": "HMS::",
    "text": "HMS::\nWir wollen an dieser Stelle gar nicht zu tief in ein weiteres Package einsteigen, daher konzentrieren wir uns auf die für uns relevante Kernfunktionalität von hms: Zeiten abspeichern. Über den Befehl as_hms() können wir also aus einem Datumsobjekt die Zeit herausziehen, und das Datum loswerden:\n\nlibrary(hms)\n\n\nAttaching package: 'hms'\n\n\nThe following object is masked from 'package:lubridate':\n\n    hms\n\nlanding_times %&gt;% \n  mutate(time_only = as_hms(time))\n\n\n\n  \n\n\n\nPerfekt! Ein neuer Versuch, unsere landing_times zu plotten:\n\nlanding_times %&gt;% \n  mutate(time_only = as_hms(time)) %&gt;% \n  ggplot(aes(x=time_only))+\n  geom_density(fill=\"grey\")+\n  theme_classic()\n\n\n\n\nPerfekt! Wir sehen, dass es deskriptiv eine leichte Tendenz nach hinten gibt, d.h., die Zeiten sind eher in den späten Stunden.\n\nFrage: Wofür könnte das eben Erlente im Komedia Kontext hilfreich sein?\n\nBei Fragebogenstudien, sowie im Kontext von Learning Analytics können Zeiten und Datumsobjekte überaus hilfreich sein. So könnte man etwa die Tageszeit bei Fragebögen/Studien mit in die Analyse aufnehmen, oder die Beteiligung in Online-Foren im zeitlichen Verlauf bzw. in Abhängigkeit der Tageszeit. Das können wir nun - super!\n\n\n\n\n\n\nFrage: Wo könnte es noch Probleme geben?\n\nZeitzonen und wie sie abgespeichert sind ist ein überaus komplexes Thema, welches wir hier ebenfalls nicht komplett elaborieren wollen. Was aber wichtig ist, dass natürlich jedes Zeitobjekt einer Zeitzone zugewiesen wird. Standardmäßig wird bei den Lubridate Funktionen wie etwa dmy_hms() die Zeitzone UTC (Universal Coordinated Time) zugewiesen.\nSolange wir nicht Daten aus verschiedenen Quellen haben (vor allem aus verschiedenen Zeitzonen), sollte uns das erstmal nicht betreffen. Wenn wir allerdings in unserem Mondlandungsbeispiel bleiben, dann könnte uns durchaus interessieren, um wieviel Uhr hier in Duisburg die Astronauten jeweils ihren Fuß auf den Mond gesetzt haben. Wir wissen aus sicherer Quelle, dass die Zeitzone bereits UTC ist. Die Funktion tz() kann uns dabei helfen:\n\nlanding_times %&gt;% \n  mutate(tz = tz(time))\n\n\n\n  \n\n\n\nWenn wir nun zwei neue Spalten time_duisburg und tz_duisburg hinzufügen wollen, kann uns die Funktion with_tz() helfen, welche die Zeitzone in eine angegbene umrechnet:\n\nlanding_times %&gt;% \n  mutate(tz=tz(time),\n         time_duisburg = with_tz(time,tzone=\"EST\"),\n         tz_duisburg = tz(time_duisburg))\n\n\n\n  \n\n\n\nSuper! Nun wissen wir auch die Zeiten in Duisburg, zu denen die Mondlandungen geschehen sind.\n\nlanding_times &lt;- c(dmy_hms(\"20/7/1969 20:17:40\", tz=\"UTC\"),\n                   dmy_hms(\"19/11/1969 06:54:35\", tz=\"UTC\"),\n                   dmy_hms(\"5/2/1971 09:18:11\", tz=\"UTC\"),\n                   dmy_hms(\"30/7/1971 22:16:29\", tz=\"UTC\"),\n                   dmy_hms(\"21/4/1972 02:23:35\", tz=\"UTC\"),\n                   dmy_hms(\"11/12/1972 19:54:58\", tz=\"UTC\")) %&gt;% \n  as.data.frame() %&gt;% \n  setNames(c(\"time\"))\n\nlanding_times %&gt;% \n  mutate(tz = tz(time),\n         time_duisburg = with_tz(time,tzone=\"EST\"),\n         tz_duisburg = tz(time_duisburg))\n\n\n\n  \n\n\n\nSuper! Wir kennen nun dates, times, datetimes, POSIXct & times. Und noch Zeitzonen! Wenn ihr mehr über Datumsobjekte erfahren wollt, schaut gerne hier vorbei:\nR for Data Science"
  },
  {
    "objectID": "ntn.html",
    "href": "ntn.html",
    "title": "Nice to Know",
    "section": "",
    "text": "Nice to Know\nHier werden wir bald alles auflisten, was wir beim Umgang mit R wichtig finden, was aber vielleicht im Seminar selbst schwierig unterzubringen ist. Stay tuned!"
  },
  {
    "objectID": "5outlier.html",
    "href": "5outlier.html",
    "title": "Ausreißeranalyse",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(outliers)\nlibrary(EnvStats)\n\npalette1 &lt;- c(\"#648fff\",\"#785ef0\",\"#dc267f\",\"#fe6100\",\"#ffb000\",\"#000000\",\"#ffffff\")\n\n# Daten: Das flights-dataset nach Bearbeitung des \"Dates & Times\"-Chapters\ndataset &lt;- dataset %&gt;% \n  mutate(late = as.numeric(late))\n\ndataset &lt;- dataset %&gt;% \n  mutate(late = as.numeric(difftime(arrival,scheduled_arrival,units = \"mins\")))"
  },
  {
    "objectID": "5outlier.html#grafische-ausreißersuche",
    "href": "5outlier.html#grafische-ausreißersuche",
    "title": "Ausreißeranalyse",
    "section": "Grafische Ausreißersuche",
    "text": "Grafische Ausreißersuche\nHier bieten sich zwei Plots an, die ihr schon kennt: Histogramme und Boxplots\n\n# Base\nhist(dataset$late)\n\nboxplot(dataset$late)\n\n\n# ggplot\nggplot(dataset)+\n  geom_histogram(aes(late), fill = palette1[1])+\n  theme_minimal()\n\nggplot(dataset)+\n  geom_boxplot(aes(late))+\n  theme_minimal()\n\nsummary(dataset$late)\n\nIm Boxplot werden potentielle Ausreißer mit den Punkten dargestellt, wenn sie das “IQR Kriterium” überschreiten. IQR steht für interquartile range, also Abstand zwischen dem ersten und zweiten Quantil. Das erste Quantil ist die Zahl, unter dem 25% der Werte liegen und das dritte Quantil die Zahl, über der 25% der Werte liegen. Von diesen Quantilgrenzen aus geht man noch mal weiter um 1.5*IQR in beide Richtungen. Die Werte, die dann immer noch nicht im Bereich liegen, sind die potentiellen Ausreißer."
  },
  {
    "objectID": "5outlier.html#ausreißersuche-mit-base-r",
    "href": "5outlier.html#ausreißersuche-mit-base-r",
    "title": "Ausreißeranalyse",
    "section": "Ausreißersuche mit base R",
    "text": "Ausreißersuche mit base R\n\nQuantile & IQR\nDas IQR-Kriterium lässt sich natürlich nicht nur im Boxplot anwenden, sondern auch selbst berechnen.\nDabei können uns Funktionen quantile() und IQR() nützen.\n\n# Funktionen ausprobieren\nquantile(dataset$late, na.rm=T)\n\nIQR(dataset$late, na.rm=T)\n\nMit diesen Funktionen können wir die Grenzen des IQR-Kriteriums bestimmen und als Filter für die Daten benutzen\n\n# Grenzen bestimmen\nlow &lt;- quantile(dataset$late, na.rm=T)[2]-1.5*IQR(dataset$late, na.rm=T)\nhigh &lt;- quantile(dataset$late, na.rm=T)[4]+1.5*IQR(dataset$late, na.rm=T) \n\n# Probanden identifizieren, die Grenzen überschreiten\ndataset %&gt;% \n  filter(late &lt; low | late &gt; high) %&gt;% \n  select(late, everything())\n\n\n\nboxplots.stats()\nNetterweise gibt es auch eine Funktion zu den Daten hinter einem Boxplot, mit der wir die Werte der potentiellen Ausreißer direkt genannt bekommen: boxplot.stats()\nAm interessantesten ist dabei die Spezifikation $out, die uns die potentiellen Ausreißer auflistet.\n\nboxplot.stats(dataset$late)\n\nout &lt;- boxplot.stats(dataset$late)$out\n\nHier werden uns nur leider nicht direkt die Probanden-IDs oder Zeilennummern mitgeliefert.\n\n\n%in% und which()\nDabei können uns aber die Funktion which() und der %in%-Operator helfen, die auch allgemein nützlich sind, immer wenn es darum geht, bestimmte Werte in einer Tabelle wiederzufinden.\n\n# Welche Elemente des Verspätung-Vektors entsprechen einem der Elemente aus dem out-Vektor?\ndataset$late %in% out\n\n# Welche Zeilen-Indices entsprechen diese Übereinstimmungen?\nwhich(dataset$late %in% out)\n# Ähnlich wie match(): Indices!\n\n# Indices im Datensatz anwenden\ndataset[which(dataset$late %in% out),] %&gt;% \n  select(late, everything())\n\nWarum benutzen wir hier dataset$late %in% out und nicht out %in% dataset$late?\n\ndataset$late %in% out\n# Checkt, was aus \"$late\" in \"out\" vorkommt -&gt; Von allen Verspätungen, welche kommen im Ausreißer-Vektor vor?\n# Genau das wollen wir wissen!\n\nout %in% dataset$late\n# Checkt, was aus \"out\" in \"$late\" vorkommt -&gt; Von allen Ausreißern, welche kommen in den Verspätungen vor?\n# Macht hier in dem Kontext wenig Sinn: Natürlich sind alle Ausreißer im normalen Dataframe enthalten.\n# Kann aber in anderen Kontexten Sinn machen, z.B. wenn wir überprüfen wollen, ob ein bestimmter Wert überhaupt vorkommt (\"Hast du einen Probanden in deiner Stichprobe, der genau 50 Jahre alt ist?\")\n\n\nFrage: Können wir hier auch match() von letzter Woche benutzen? Warum oder warum nicht?\n\n\nmatch(out, dataset$late)\n\ndataset[match(out, dataset$late),]\n\nBei match() müssen wir beachten, dass die Funktion pro Element aus dem ersten Vektor nur das erste Match im zweiten Vektor sucht. Sollte es also zwei Ausreißer mit dem Wert “180” geben, würde beide Male nur der Index des zuerst vorkommenden Ausreißers genannt werden.\n\n\nscale()\nEin weiterer Ansatz kann sein, die Daten mit scale() zu standardisieren und dann zu überprüfen, welche Werte die Grenzen überschreiten, welche gemäß der Standardnormalverteilung wie folgt definiert sind:\n\naußerhalb von -2 oder 2: selten\naußerhalb von -3 oder 3: sehr selten\n\n\n# Demonstration mit \"distance\" (weil \"late\" noch keine sinnvollen Plots produziert)\nggplot(dataset)+\n  geom_histogram(aes(distance), bins=50)+\n  theme_minimal()+\n  ggtitle(\"Distanz, nicht standardisiert\")\n\ndataset %&gt;% \n  ggplot()+\n  geom_histogram(aes(x=scale(distance), y = ..density..), bins = 50, fill = palette1[6])+\n  stat_function(fun = dnorm,\n                args = list(mean = 0,\n                            sd = 1),\n                color = palette1[4], size = 1)+\n  geom_vline(aes(xintercept=-3), color=palette1[5], size=1, linetype=\"dashed\")+\n  geom_vline(aes(xintercept=3), color=palette1[5], size=1, linetype=\"dashed\")+\n  theme_minimal()+\n  ggtitle(\"Distanz, standardisiert\")\n\n\ndataset %&gt;% \n  mutate(late.sc = scale(late)) %&gt;%\n  filter(late.sc &gt; 3 | late.sc &lt; -3) %&gt;% \n  select(late, everything())"
  },
  {
    "objectID": "5outlier.html#ausreißersuche-mit-dafür-designten-packages",
    "href": "5outlier.html#ausreißersuche-mit-dafür-designten-packages",
    "title": "Ausreißeranalyse",
    "section": "Ausreißersuche mit dafür designten Packages",
    "text": "Ausreißersuche mit dafür designten Packages\nNeben diesen deskriptiven Ansätzen gibt es auch Signifikanz-Tests für die Ausreißeranalyse, die uns angeben, ob der extremste Wert ein Ausreißer ist oder nicht. Die hier vorgestellten basieren alle auf der Grundannahme, dass die Variable (abgesehen von den Ausreißern) normalverteilt ist.\nDer grubbs.test() kommt aus dem outlier-Package. Je nach Einstellung testet er den höchsten oder niedrigsten Wert darauf, ob er ein Ausreißer ist. Die Nullhypothese ist dabei “Wert ist kein Ausreißer”, also spricht ein signifikantes Ergebnis dafür, dass es sich um einen Ausreißer handelt.\n\n# höchsten Wert testen\ngrubbs.test(dataset$late)\n\n# niedrigsten Wert testen\ngrubbs.test(dataset$late, opposite = T)\n\nDer dixon.test() hat das gleiche Prinzip. Er eignet sich besonders gut für kleine samples mit maximal n = 30.\n\ndata.small &lt;- dataset[1:20,]\n\n# höchsten Wert testen\ndixon.test(data.small$late)\n\n# niedrigsten Wert testen\ndixon.test(data.small$late, opposite=T)\n\nWie man sieht, testen beide Tests immer nur einen Wert auf einmal. Allerdings konnten wir unserem Boxplot ja entnehmen, dass nicht nur der höchste Wert ein potentieller Ausreißer ist. Die Lösung dafür ist entweder, den Test zu wiederholen mit einem Datensatz, in dem der bereits identifizierte Ausreißer entfernt wurde, oder einen alternativen Test zu benutzen: rosnerTest() aus dem EnvStats-Package.\nWichtig zu beachten ist dabei, dass dieser Test sich eher für große Samples (n&gt;20) eignet. Außerdem müssen wir spezifizieren, wie viele potentielle Ausreißer wir erwarten. Standardmäßig werden drei Werte getestet. Wir können uns gut am Ergebnis von boxplot.stats von vorhin orientieren.\n\nrosnerTest(dataset$late, k=length(out))\n\nrosnerTest(dataset$late, k=length(out))$all.stats\n\nAngenehm an dem $all.stats-Output ist, dass er die Werte automatisch nach “Extremität” bzw. Ausreißer/nicht-Ausreißer sortiert.\nDa das Ergebnis ein Dataframe ist, können wir weiter filtern, was bei so vielen getesteten Werten praktisch ist:\n\nrosnerTest(dataset$late, k=length(out))$all.stats %&gt;% \n  filter(Outlier == TRUE)\n\nWir können sehen, dass es anscheinend immer noch zwei unterschiedliche Arten von Ausreißern gibt: Die zwischen 142 und 1426 Minuten, die immerhin einer Veränderung von ca. 2 bis 24 Stunden entsprechen, und diejenigen, deren Wert über 3 Millionen ist - was einer Zeit von etwa sieben Jahren entspricht und realistisch gesehen keine echten Verspätungen repräsentieren kann.\nUm die Daten noch mal sinnvoll für den Plot von vorhin zu filtern, schließen wir daher die “unrealistischen” Verspätungen aus.\n\n# Dataframe erstellen, der nur noch \"unrealistische\" Werte enthält\noutlier.res &lt;- rosnerTest(dataset$late, k=length(out))$all.stats %&gt;% \n  filter(Outlier == TRUE & sqrt(Value^2) &gt; 3000000)\n\ndataset %&gt;% \n  filter(!dataset$late %in% outlier.res$Value) %&gt;% \n  select(late, everything()) %&gt;% \n  ggplot(aes(x=late))+\n  geom_bar(fill=palette1[3])+\n  geom_vline(xintercept=0,linetype=\"dashed\")+\n  theme_classic()\n\nRein statistisch gesehen sind die Randwerte im Plot immer noch Ausreißer. Für den Plot, in dem wir einfach die Häufigkeiten der Verspätung darstellen wollen, ist diese Datenauswahl aber in Ordnung. Wie man mit Ausreißern umgeht und ob man sie entfernen darf, hängt also immer vom Ziel und der Fragestellung ab."
  },
  {
    "objectID": "5outlier.html#aufgabe",
    "href": "5outlier.html#aufgabe",
    "title": "Ausreißeranalyse",
    "section": "Aufgabe",
    "text": "Aufgabe\nFührt selbst eine Ausreißeranalyse für die Variable distance aus dem Datensatz durch.\nZur Übersicht:\n\nPlots mit boxplot, geom_boxplot, hist, geom_histogram\nWertebereich definieren mit quantile, IQR, boxplots.stats\nAusreißer testen mit grubb.test, dixon.test, rosnerTest\nevtl. unterstützende Funktionen: which, %in%\n\n\n# Plot\ndataset %&gt;% \n  ggplot+\n  geom_boxplot(aes(distance))\n\n# Boxplot-Markierungen\nout2 &lt;- boxplot.stats(dataset$distance)$out\n\n# Ausreißer testen\noutlier.res2 &lt;- rosnerTest(dataset$distance, k=length(out2))$all.stats\n# alle werden als Ausreißer identifiziert\n\nAlle Distanzen im 5.000-Meilen-Bereich werden als Ausreißer markiert und über den Test bestätigt.\n\nFrage: Macht ein Ausschluss an dieser Stelle Sinn? Wie können wir das herausfinden?\n\nWohin gehen die Flüge eigentlich?\n\ndata.outlier &lt;- dataset %&gt;% \n  filter(distance %in% outlier.res2$Value)\n  \nsummary(as.factor(data.outlier$dest))\n\nAlle Ausreißer-Flüge gehen nach “HNL” - Wofür könnte das stehen?\n\n?flights\n\nMehr Info über dest bekommen wir über den Datensatz airports\n\n?airports\n\nairports %&gt;% \n  filter(faa == \"HNL\")\n\nAha, die Flügen gehen alle nach Honolulu! Also sind es tatsächlich “echte” Daten.\nWir würden sie also nicht ohne weiteres entfernen - allerdings könnte es für bestimmte Plots oder Analysen Sinn machen, diesen Flughafen auszuklammern. Das sollte aber natürlich begründet und angemerkt werden."
  },
  {
    "objectID": "analysis1.html",
    "href": "analysis1.html",
    "title": "Skalen mit across()",
    "section": "",
    "text": "Show code\nlibrary(tidyverse)\nlibrary(reshape2)\nlibrary(reactable)\n\npalette1 &lt;- c(\"#648fff\",\"#785ef0\",\"#dc267f\",\"#fe6100\",\"#ffb000\",\"#000000\",\"#ffffff\")\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")"
  },
  {
    "objectID": "analysis1.html#überblick",
    "href": "analysis1.html#überblick",
    "title": "Skalen mit across()",
    "section": "Überblick",
    "text": "Überblick\n\n\n\n\n\nIn der letzten Woche habt ihr kennengelernt, wie wir mit R ganz einfach statistische Verfahren anwenden können, um relevante Fragestellungen zu beantworten. Dabei habt ihr sowohl gelernt, wie ihr einfache deskriptive Analysen macht, als auch komplexere, inferenzstatistische Methoden anwendet. Zuletzt habt ihr dann noch gelernt, wie ihr eure Ergebnisse in einem Bericht “publizierfähig” speichern könnt.\nIn dieser Woche soll es darum gehen, diese Fähigkeiten mit denen aus den vorigen Wochen zu verknüpfen, und gemeinsam an einem konkreten Beispiel zu arbeiten. Dabei wollen wir mit einem Datensatz arbeiten, wie ihr ihn auch erhalten könntet, wenn ihr bspw. mit Limesurvey arbeitet."
  },
  {
    "objectID": "analysis1.html#hintergrund",
    "href": "analysis1.html#hintergrund",
    "title": "Skalen mit across()",
    "section": "Hintergrund",
    "text": "Hintergrund\nZunächst soll es hier aber ein wenig um den Datensatz bzw. die Studie gehen, die wir untersuchen. Der Datensatz ist ein Auszug aus einer Studie, die im Rahmen einer Abschlussarbeit erhoben wurde. Dabei ging es darum, den Einfluss verschiedener Faktoren auf das selbstregulierte Lernen (SRL) während der Corona-Pandemie zu untersuchen.\n\n\n\n\n\nKonkret ging es darum, die empfundenen Herausforderungen beim selbstregulierten Lernen entsprechend zu erfassen und herauszufinden, inwiefern diese durch individuelle Faktorenwie Gewissenhaftigkeit bzw. situative Faktoren wie die Lernumgebung beeinflusst werden.\nBei der Studie handelte es sich um eine Fragebogenstudie mit kleineren Tests, und die abhängige Variable (SRL-Herausforderungen) sowie die unabhängigen Variablen bzw. Prädiktoren (Gewissenhaftigkeit/Lernumgebung) wurden mittels Fragebögen erhoben. Diese wollen wir uns nun kurz anschauen."
  },
  {
    "objectID": "analysis1.html#instrumente",
    "href": "analysis1.html#instrumente",
    "title": "Skalen mit across()",
    "section": "Instrumente",
    "text": "Instrumente\nIm Rahmen der Studie wurden einige Instrumente verwendet, über die es gut ist, ein wenig zu erfahren, bevor wir mit der Auswertung beginnen.\n\nSRL-Herausforderungen\nDer Fragebogen basierte auf einem angepassten Fragebogen zu Herausforderungen beim kollaborativen Lernen Spang, Fett, and Greisel (2020). Er umfasst 96 Items mit 32 Facetten, abgebildet auf einer 5-stufigen Likert Skala von (1 = kein Problem bis 5 = großes Problem). Hier sieht man ein paar Beispiele sowie im Hintergrund die Facetten:\n\n\n\n\n\n\n\nGewissenhaftigkeit\nGewissenhaftigkeit (engl. conscientiousness) wurde erfasst mittels einer Subskala des deutschen Big-Five Inventorys (BFI-2) Danner et al. (2019). Hier gab es 12 Items, die auf einer 6-Punkte Likert Skala von (1 = nicht wahr, 6 = wahr) beantwortet werden konnten. Beispielitems waren:\n\n„Ich bleibe an einer Aufgabe dran, bis sie erledigt ist.”\n„Ich bin eher der chaotische Typ, mache selten sauber.”\n\n\n\nSuboptimale Lernumgebung\nHier bezieht sich Lernumgebung nicht auf eine digitale Lernumgebung wie bspw. Moodle, sondern konkret auf die physische Lernumgebung, die die Lernenden bei sich zuhause haben. Dazu wurden 7 Items entsprechend 3 Dimensionen entwickelt, mit Items wie:\n\nAn meinem Lernplatz bin ich von vielen Umgebungsgeräuschen (bspw. Staßenlärm, Gespräche) umgeben.\nIch habe einen festen Ort, an dem ich lerne.\nDie Umgebungstemperatur an meinem Lernplatz ist oft zu kalt oder zu warm.\n\nWir werden ab jetzt den Fragebogen als suboptimal_study bezeichnen."
  },
  {
    "objectID": "analysis1.html#materialien-methoden",
    "href": "analysis1.html#materialien-methoden",
    "title": "Skalen mit across()",
    "section": "Materialien & Methoden",
    "text": "Materialien & Methoden\nBeginnen wir also mit der Auswertung. Ladet euch dazu im Moodle den Datensatz dataset_srl_challenges.csv herunter und ladet ihn entsprechend in R.\n\ndataset &lt;- read.csv(\"dataset_srl_challenges.csv\")\n\nNun schauen wir uns die Daten an, um ein Gefühl dafür zu bekommen. Mit 238 Spalten bzw. Variablen ist der Datensatz nicht klein, und mag auf den ersten Blick unübersichtlich wirken.\n\nFrage: Welche könnten die relevanten Variablen (siehe oben) sein?\n\nMit etwas Scharfsinn können wir sicherlich ermitteln, welche die für uns relevanten Variablen in diesem Dschungel aus Spalten sind. Generell empfiehlt es sich hier allerdings immer, mit einem Codebook zu arbeiten. Wenn wir mit Limesurvey erheben, ist die einfachste Art und Weise, an ein Codebook zu kommen folgende:\n\n\n\n\n\nDort bekommt ihr eine genaue Übersicht über die in eurem Datensatz auftauchenden Variablen, sowie die dazugehörigen Ausprägungen etc. Hier sei besonders erwähnt, dass Datensätze üblicherweise nicht so eine schöne Form haben, wie wir es bis jetzt gewohnt waren (bspw. numerische Ausprägungen von 1 bis 5). Vielmehr kann es passieren, dass ihr in eurem Datensatz für eine Variable mit einer 5-stufigen Likert Skala folgende Ausprägungen habt:\nDa stellt sich natürlich direkt die Frage, wie die Polarität ist, und wie wir die Variable so umformatieren können, dass wir damit normal rechnen können. Dabei kann die Umfragelogikdatei bzw. ein Codebook sehr helfen. In unserem Fall haben wir leider keine Umfrage-Logikdatei, sondern ein Codebook. Dieses findet ihr ebenfalls im Moodle als codebook.xlsx.\n\nNAs eliminieren\nBevor wir aber an die einzelnen Skalen gehen, wollen wir NAs eliminieren, sofern diese in unserem Datensatz existieren.\n\nFrage: Wie würden wir da vorgehen?\n\n\ndataset &lt;- dataset %&gt;% \n  filter(!is.na(submitdate))\n\n\n\nItems umkodieren\n\nFrage: Welche Items könnten uns noch Probleme bereiten bzw. müssen umkodiert werden, bevor wir starten können?\n\nEin kurzer Blick in die Daten über view() zeigt, dass alle Items des Gewissenhaftigkeitsfragebogens (gh_ etc.) unschön kodiert sind. Um das zu ändern, bieten sich einige Optionen an. Wir wollen hier mit dplyr und case_when arbeiten. Die Syntax sieht wie folgt aus:\n\ndf %&gt;% \n  mutate(new_variable = case_when(new_variable == condition1 ~ new_val1,\n                                  new_variable == condition2 ~ new_val2))\n\nWir sehen, wie wir für jede einzelne Ausprägung von new_variable entscheiden können, wie new_val dann aussehen soll. Hier kann man auch mehrere Bedingungen verknüpfen, bspw. zusätzlich noch Ausprägungen in anderen Variablen berücksichtigen und dann mit & arbeiten.\n\nFrage: Wenn wir dies nun für unsere Variablen machen wollen, wie würden wir vorgehen?\n\nDies für jede einzelne Variable zu machen ist natürlich ganz schön aufwändig. Glücklicherweise fangen alle betreffenden Items mit gh_ an, sodass wir diese über across() und starts_with() auswählen können. Das across() hilft uns hier, mehrere Spalten auszuwählen, in Abhängigkeit von Kriterien (in diesem Fall der Name). Doch was genau macht across()?\n\n\n\n\n\nIm Gegensatz zu mutate() (ohne across) und summarise(), welche quasi Werte über Zeilen hinweg aggregieren, können wir mittels mutate(across()) Werte über Spalten hinweg aggregieren. Das kann sehr hilfreich sein, wenn wir Summenscores bilden wollen. Schaut euch die Syntax hier am besten mal an, und übernehmt sie in eurem Code:\n\ndataset %&gt;% \n  mutate(across(starts_with(\"gh_\"),function(x) case_when(x == \"A01\" ~ 1,\n                                                         x == \"A02\" ~ 2,\n                                                         x == \"A03\" ~ 3,\n                                                         x == \"A04\" ~ 4,\n                                                         x == \"A05\" ~ 5)))\n\nJetzt müssen wir das natürlich noch über &lt;- im Datensatz speichern.\n\n\nShow code\ndataset &lt;- dataset %&gt;% \n  mutate(across(starts_with(\"gh_\"),function(x) case_when(x == \"A01\" ~ 1,\n                                                         x == \"A02\" ~ 2,\n                                                         x == \"A03\" ~ 3,\n                                                         x == \"A04\" ~ 4,\n                                                         x == \"A05\" ~ 5)))\n\n\n\n\nFragebögen prüfen\nBevor wir die Fragebögen verwenden können, müssen wir natürlich erst deren Güte prüfen. Starten wir mit unserem Fragebogen für die Lernumgebung. Die packages psych und sjPlot bieten einige praktische Funktionen, die wir hier direkt anwenden können. Über psych::alpha() bekommen wir für eine Auswahl an Spalten Cronbach’s Αlpha berechnet. Über select() können wir die betreffenden Spalten vorher auswählen.\n\nFrage: Berechnet Cronbachs Alpha für die 7 Items des Lernumgebungsfragebogens (sl_SQ001 etc.). Was fällt auf?\n\n\ndataset %&gt;%\n select(sl_SQ001,\n        sl_SQ002,\n        sl_SQ003,\n        sl_SQ004,\n        sl_SQ005,\n        sl_SQ006,\n        sl_SQ007)%&gt;% psych::alpha()\n\nOh nein! Ein genauerer Blick auf die Items (oder entsprechendes Wissen) hätte verraten, dass manche Items negativ kodiert sind. Das zerschießt uns natürlich jegliches Cronbach’s Alpha. Auch da kann dplyr und case_when helfen.\n\nFrage: Kodiert die Variablen sl_SQ_001 und sl_SQ006 entsprechend um. Die Werte (min-max) findet ihr bspw. über summary(dataset$sl_SQ001) heraus. Kodiert so um, dass auf 1 eine 6 wird, aus 2 eine 5 usw. Hier nochmal die Syntax, wie ihr mittels across() und case_when einzelne Spalten auswählt. Achtet vor allem auf die Klammern!\n\n\ndf %&gt;% \n  mutate(across(c(variable1,variable2), function(x) case_when(x==condition ~ newval)))\n\n\ndataset &lt;- dataset %&gt;% \n  mutate(across(c(sl_SQ001,sl_SQ006),function(x) case_when(x==1 ~ 6,\n                                                         x==2 ~ 5,\n                                                         x==3 ~ 4,\n                                                         x==4 ~ 3,\n                                                         x==5 ~ 2,\n                                                         x==6 ~ 1)))\n\nEin neuer Blick auf Cronbachs α verrät, dass unser Umkodieren etwas bewirkt hat, die Fehlermeldung ist verschwunden und der Wert hat sich verbessert.\n\ndataset %&gt;%\n select(sl_SQ001,\n        sl_SQ002,\n        sl_SQ003,\n        sl_SQ004,\n        sl_SQ005,\n        sl_SQ006,\n        sl_SQ007)%&gt;% psych::alpha()\n\n\n\nExkurs: Itemschwierigkeit etc.\nUm hier nicht zu tief in Test- und Fragebogenkonstruktion abzutauchen, hier nur als kleiner Exkurs: Das package sjPlot kann uns dabei helfen, wichtige Eigenschaften über die Items zu gewinnen, bevor wir Cronbachs α berechnen. Dazu gehören die Itemschwierigkeit (item difficulty) und die Trennschärfe der Items (item discrimination). Der einfache Befehl tab_itemscale() gibt uns gleich ein publizierfähiges Plot:\ndataset %&gt;%\n select(sl_SQ001,\n        sl_SQ002,\n        sl_SQ003,\n        sl_SQ004,\n        sl_SQ005,\n        sl_SQ006,\n        sl_SQ007)%&gt;% sjPlot::tab_itemscale()\n\n\nComponent 1\n\n\nRow\nMissings\nMean\nSD\nSkew\nItem Difficulty\nItem Discrimination\nα if deleted\n\n\n\nsl_SQ001\n0.00 %\n2.03\n1.28\n1.41\n0.34\n0.28\n0.55\n\n\n\nsl_SQ002\n0.00 %\n2.7\n1.4\n0.59\n0.45\n0.33\n0.53\n\n\n\nsl_SQ003\n0.00 %\n3.91\n1.43\n-0.08\n0.65\n0.40\n0.51\n\n\n\nsl_SQ004\n0.00 %\n2.93\n1.53\n0.5\n0.49\n0.23\n0.57\n\n\n\nsl_SQ005\n0.00 %\n2.75\n1.44\n0.63\n0.46\n0.41\n0.50\n\n\n\nsl_SQ006\n0.00 %\n4.87\n1.7\n-1.3\n0.81\n0.19\n0.59\n\n\n\nsl_SQ007\n0.00 %\n2.22\n1.4\n1.11\n0.37\n0.30\n0.54\n\n\n\nMean inter-item-correlation=0.170 · Cronbach's α=0.581\n\n\n\n\n\n\nWir können sehen, dass die Itemschwierigkeit bei den meisten Items nahe 0.50 ist, und die Trennschärfe auch nicht zu klein (bis auf vereinzelte Items wie sl_sq006.\nDurch eine exploratorische Faktoranalyse, welche wir hier nicht rechnen werden, wurde herausgefunden, dass nicht alle Items unser Konzept suboptimale Lernumgebung gut vorhersagen. Daher haben wir uns entschieden, die folgenden Items zu nehmen: sl_SQ002, sl_SQ003, sl_SQ005 und sl_SQ007. Diese bilden einen Faktor ab, weshalb es nun auch Sinn ergibt hierfür Cronbachs α zu berechnen:\n\ndataset %&gt;% \n  select(sl_SQ002,\n  sl_SQ003,\n  sl_SQ005,\n  sl_SQ007)%&gt;%\npsych::alpha()\n\nDieses ist mit 0.58 zwar immer noch nicht sonderlich gut, im Rahmen dieser Zufallsstichprobe allerdings OK. Wir wollen diese Items nun zusammenfassen, da wir lieber mit einem Wert für suboptimal_study arbeiten wollen. Dazu gibt es zwei Wege:\n\n\nSumscores mit across() und rowMeans()\nAcross() habt ihr oben bereits kennengelernt. In der Kombination mit der base-R rowMeans() Funktion können wir es nutzen, um Summen bzw. Meanscores für unsere Items zu bilden:\n\ndf %&gt;% \n  mutate(new_variable = rowMeans(across(c(variable1,variable2))))\n\nKonkret sieht das dann so aus:\n\ndataset &lt;- dataset %&gt;% \n  mutate(suboptimal_study = rowMeans(across(c(sl_SQ002,sl_SQ003,sl_SQ005,sl_SQ007))))\n\n\n\nSumscores mit rowwise() und mean()\nUm Funktionen nicht mehr per Spalte, sondern per Zeile anzuwenden, bietet sich auch die Kombination aus rowwise() und Funktionen wie bspw. mean() an. Dabei sieht die Syntax wie folgt aus:\n\ndf %&gt;% \n  rowwise()\n  mutate(new_variable = mean(c(variable1, variable2)))\n\nWenden wir das also auf unseren Datensatz an:\n\ndataset %&gt;% \n  rowwise() %&gt;% \n  mutate(suboptimal_study = mean(c(sl_SQ002,sl_SQ003,sl_SQ005,sl_SQ007))) %&gt;% select(suboptimal_study)\n\n\n\n  \n\n\n\nWie zu sehen, erhalten wir dieselben Mittelwerte für unsere Skala, wie oben."
  },
  {
    "objectID": "analysis1.html#aufgabe-subskalen-für-gewissenhaftigkeit",
    "href": "analysis1.html#aufgabe-subskalen-für-gewissenhaftigkeit",
    "title": "Skalen mit across()",
    "section": "Aufgabe: Subskalen für Gewissenhaftigkeit",
    "text": "Aufgabe: Subskalen für Gewissenhaftigkeit\nNun wollen wir auch die Subskalen nach dem oben gezeigten Prinzip für unser Konstrukt Gewissenhaftigkeit prüfen. Dazu haben wir alles was wir brauchen:\n\nDatensatz\nCodebook mit Variablennnamen und Labels\nLiteraturangabe Danner et al. (2019)\n\nMit Items sowie dazugehörigen Dimensionen\nNamen der negativ-kodierten Items\n\n\nNutzt also die Informationen und eure neu-erlenten Skills, um nun die entsprechenden Subskalen (plot-twist: es sind mehr als eine) zu berechnen (als Mittelwerte). Gebt auch Cronbach’s α für die einzelnen Subskalen an.\n\nwrite.csv(dataset, \"dataset_srl_challenges_wrangled.csv\")"
  },
  {
    "objectID": "Auswertung_survey.html",
    "href": "Auswertung_survey.html",
    "title": "analysis_priorknowledge",
    "section": "",
    "text": "library(dplyr, warn.conflicts = F)\nlibrary(ggplot2)\nlibrary(reshape2)\n\npalette1 &lt;- c(\"#648fff\",\"#785ef0\",\"#dc267f\",\"#fe6100\",\"#ffb000\",\"#000000\",\"#ffffff\")\npalette2 &lt;- c(\"#CC79A7\",\"#D55E00\",\"#0072B2\",\"#F0E442\",\"#009E73\",\"#56B4E9\",\"#E69F00\",\"#000000\")\n\nThis is the corresponding quarto file for our analyses regarding the prior-existing knowledge in our R-course.\nFirst we want to import the data:\n\ndataset &lt;- read.csv(\"/Users/simonkrukowski/Downloads/results-survey368965-6.csv\")\n\nOf course we’re dissatisfied with the variable names as provided by LimeSurvey, so we have to take care of that as well:\n\ndataset %&gt;% \n  rename_with(., ~ gsub(\".\",\"_\",.,fixed = T)) -&gt; dataset\n\n\ndataset %&gt;% \n  # rename columns\n  rename(age = G01Q02,\n         r_knowledge = G01Q03,\n         r_problems = G01Q09,\n         programming_knowledge = G01Q05,\n         programming_c = G01Q06_c_,\n         programming_javascript = G01Q06_javascript_,\n         programming_python = G01Q06_python_,\n         programming_java = G01Q06_Java_,\n         programming_sql = G01Q06_sql_,\n         programming_julia = G01Q06_julia_,\n         programming_other = G01Q06_other_) %&gt;% \n  # mutate (create new/change old columns to account for limesurvey artifacts)\n  mutate(across(everything() & where(is.character), ~na_if(., \"\")),\n         across(everything() & where(is.numeric), ~na_if(., 0)),\n         sex = case_when(G01Q01_female_ == \"Y\" ~ \"female\",\n                         G01Q01_male_ == \"Y\" ~ \"male\",\n                         G01Q01_diverse_ == \"Y\" ~ \"diverse\"),\n         r_knowledge_amount = case_when(G01Q04_priorknow_ == \"AO01\" ~ 1,\n                                        G01Q04_priorknow_ == \"AO02\" ~ 2,\n                                        G01Q04_priorknow_ == \"AO03\" ~ 3,\n                                        G01Q04_priorknow_ == \"AO04\" ~ 4,\n                                        G01Q04_priorknow_ == \"AO05\" ~ 5),\n         hopes_base_knowledge = case_when(G01Q10_SQ001_ == \"Y\" ~ \"Y\"),\n         hopes_improve_knowledge = case_when(G01Q10_SQ002_ == \"Y\" ~ \"Y\"),\n         hopes_dataviz = case_when(G01Q10_SQ003_ == \"Y\" ~ \"Y\"),\n         hopes_stat_analyses = case_when(G01Q10_SQ004_ == \"Y\" ~ \"Y\"),\n         hopes_websites = case_when(G01Q10_SQ005_ == \"Y\" ~ \"Y\")\n         ) %&gt;% \n  # remove all columns that start with G0 (all limesurvey artifacts)\n  select(-starts_with(\"G0\")) %&gt;% \n  # replace all Ys with bool values and replace NAs with FALSE for multiple choice items\n  mutate(across(everything(),  ~replace(., . ==  \"Y\" , TRUE)),\n         across(starts_with(c(\"programming_\",\"hopes_\")),~replace(., is.na(.), FALSE)),\n         across(c(starts_with(c(\"hopes\",\"programming\")),r_knowledge),as.logical)) %&gt;% \n  mutate(r_knowledge = case_when(is.na(r_knowledge) ~ FALSE,\n                                 !is.na(r_knowledge) ~ TRUE)) -&gt; dataset\n\nNow we want to delete the first four rows because these were test data.\n\ndataset %&gt;% \n  filter(row_number() &gt; 4) -&gt; dataset\n\nOkay now it comes to visualising. Let’s skip the descriptive data for our second assignment and let’s instead focus on prior knowledge.\n\ndataset %&gt;% \n  mutate(r_knowledge = case_when(r_knowledge == T ~\"Vorwissen\",\n                                 r_knowledge == F ~\"kein Vorwissen\")) %&gt;% \n  ggplot(aes(x=r_knowledge))+\n  geom_bar(aes(fill=r_knowledge),color=\"#2b2b2b\")+\n  geom_label(aes(label = paste0(after_stat(count)/sum(after_stat(count))*100, \"%\")),\n            stat = \"count\",\n            colour = \"black\",\n            position = position_dodge(width=0.9),vjust = 0.5) +\n  scale_fill_manual(values=palette1[2:3])+\n  theme_classic()+\n  ylab(\"Anzahl\")+xlab(\"Vorwissen\")+labs(fill=\"Vorwissen\")\n\nAnd then on the mean value of the 2 persons who do have prior knowledge. Here, a plot doesnt really make sense:\n\ndataset %&gt;% \n  mutate(r_knowledge = case_when(r_knowledge == T ~\"Vorwissen\",\n                                 r_knowledge == F ~\"kein Vorwissen\")) %&gt;% \n  group_by(r_knowledge) %&gt;% \n  summarise(mean=mean(r_knowledge_amount))\n\nOkay now let’s focus on prior knowledge in programming:\n\ndataset %&gt;% \n  select(id,starts_with(\"progr\"),-programming_knowledge) %&gt;% \n  rename_with(., ~ gsub(\"programming_\",\"\",.,fixed = T)) %&gt;% \n  melt(id.vars = c(\"id\")) %&gt;% \n  group_by(variable) %&gt;% \n  summarise(sum=sum(value))\n\nLet’s visualise it. Here, we can skip the summarise.\n\ndataset %&gt;% \n  select(id,starts_with(\"progr\"),-programming_knowledge) %&gt;% \n  rename_with(., ~ gsub(\"programming_\",\"\",.,fixed = T)) %&gt;% \n  melt(id.vars = c(\"id\")) %&gt;% \n  filter(value==T) %&gt;% \n  ggplot(aes(x=variable))+\n  geom_bar(aes(fill=variable),stat = \"count\",color=\"#2b2b2b\")+\n  geom_label(aes(label = paste0(round(after_stat(count)/sum(after_stat(count))*100,1), \"%\")),\n            stat = \"count\",\n            colour = \"black\",\n            position = position_dodge(width=0.9),vjust = 0.5) +\n  scale_fill_manual(values = palette1)+\n  theme_classic()+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  ylab(\"Anzahl\")+xlab(\"Programmiersprache\")+labs(fill=\"Programmiersprache\")\n\nOkay, now we also want to check the expectations:\n\ndataset %&gt;% \n  select(id,starts_with(\"hopes\")) %&gt;% \n  rename_with(., ~ gsub(\"hopes_\",\"\",.,fixed = T)) %&gt;% \n  melt(id.vars = c(\"id\")) %&gt;% \n  filter(value==T) %&gt;% \n  ggplot(aes(x=variable))+\n  geom_bar(aes(fill=variable),stat = \"count\",color=\"#2b2b2b\")+\n  geom_label(aes(label = paste0(round(after_stat(count)/sum(after_stat(count))*100,1), \"%\")),\n            stat = \"count\",\n            colour = \"black\",\n            position = position_dodge(width=0.9),vjust = 0.5) +\n  scale_fill_manual(values = palette1)+\n  theme_classic()+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  ylab(\"Anzahl\")+xlab(\"Erwartungen\")+labs(fill=\"Erwartungen\")"
  },
  {
    "objectID": "analysis2_1.html",
    "href": "analysis2_1.html",
    "title": "Apply & Multiple data sources",
    "section": "",
    "text": "library(tidyverse)\n\ndataset &lt;- read.csv(\"dataset_srl_challenges_wrangled.csv\")"
  },
  {
    "objectID": "analysis2_1.html#working-memory-operation-span-ospan",
    "href": "analysis2_1.html#working-memory-operation-span-ospan",
    "title": "Apply & Multiple data sources",
    "section": "Working Memory Operation Span (OSPAN)",
    "text": "Working Memory Operation Span (OSPAN)\nMit dem OSPAN Test können wir die Arbeitsgedächtnisleistung von Proband:innen testen. Dazu gibt es ein Tool von Forscher:innen aus Indiana, welches über HTML & Javascript läuft und womit wir die Arbeitsgedächtnisleistung testen können. Der Test sieht wie folgt aus:\n\n\n\n\n\nEr läuft im Browser, und nach Abschluss der Studie haben wir die Ergebnisse der einzelnen Proband:innen als einzelne .csv Dateien auf dem Server:\n\n\n\n\n\nKopiert also nun die aus Moodle heruntergeladenen 40 .csv Dateien in den Ordner assets/datasets/ospan/, wobei euer dataset_srl_challenges_wrangled.csv auf der obersten Ebene liegt (also auf der gleichen Ebene wie der Ordner assets)."
  },
  {
    "objectID": "analysis2_1.html#mit-multiplen-daten-umgehen",
    "href": "analysis2_1.html#mit-multiplen-daten-umgehen",
    "title": "Apply & Multiple data sources",
    "section": "Mit multiplen Daten umgehen",
    "text": "Mit multiplen Daten umgehen\nWir beginnen also damit, uns einen Überblick über die einzelnen Dateien zu machen, welche sich unter assets/datasets/ospan/ befinden. Natürlich müssen wir diese Dateien nicht einzeln als Liste übertragen, sondern können uns diese ganz einfach auflisten mit list.files().\n\ntests_list &lt;- list.files(\"assets/datasets/ospan/\")\n\nWir sehen nun, wenn wir uns das erzeugte Objekt tests_list anschauen, dass dieses unsere 40 Tests enthält:\n\ntests_list\n\n [1] \"WM_operation_span_101_1612186377273.csv\"\n [2] \"WM_operation_span_106_1612359256107.csv\"\n [3] \"WM_operation_span_107_1612524224258.csv\"\n [4] \"WM_operation_span_15_1610368013780.csv\" \n [5] \"WM_operation_span_20_1610447300494.csv\" \n [6] \"WM_operation_span_23_1610461666072.csv\" \n [7] \"WM_operation_span_24_1610465426790.csv\" \n [8] \"WM_operation_span_27_1610465354156.csv\" \n [9] \"WM_operation_span_31_1610465797553.csv\" \n[10] \"WM_operation_span_36_1610536583499.csv\" \n[11] \"WM_operation_span_39_1610544645563.csv\" \n[12] \"WM_operation_span_40_1610544829023.csv\" \n[13] \"WM_operation_span_43_1610551510486.csv\" \n[14] \"WM_operation_span_47_1610623434127.csv\" \n[15] \"WM_operation_span_48_1610623346034.csv\" \n[16] \"WM_operation_span_5_1610357167520.csv\"  \n[17] \"WM_operation_span_51_1610623724516.csv\" \n[18] \"WM_operation_span_52_1610630827066.csv\" \n[19] \"WM_operation_span_54_1610637379465.csv\" \n[20] \"WM_operation_span_55_1610638115446.csv\" \n[21] \"WM_operation_span_6_1610357158395.csv\"  \n[22] \"WM_operation_span_62_1610703127236.csv\" \n[23] \"WM_operation_span_64_1610713861384.csv\" \n[24] \"WM_operation_span_65_1610714043568.csv\" \n[25] \"WM_operation_span_66_1610714141398.csv\" \n[26] \"WM_operation_span_67_1610717257175.csv\" \n[27] \"WM_operation_span_68_1610716883738.csv\" \n[28] \"WM_operation_span_70_1610724891439.csv\" \n[29] \"WM_operation_span_71_1610962127977.csv\" \n[30] \"WM_operation_span_73_1610965288157.csv\" \n[31] \"WM_operation_span_76_1611048167607.csv\" \n[32] \"WM_operation_span_78_1611048577537.csv\" \n[33] \"WM_operation_span_79_1611055497570.csv\" \n[34] \"WM_operation_span_80_1611055678962.csv\" \n[35] \"WM_operation_span_84_1611134539309.csv\" \n[36] \"WM_operation_span_90_1611228773344.csv\" \n[37] \"WM_operation_span_91_1611228344338.csv\" \n[38] \"WM_operation_span_94_1611570780638.csv\" \n[39] \"WM_operation_span_96_1611581289527.csv\" \n[40] \"WM_operation_span_97_1611653179186.csv\" \n\n\n\nFrage: Wie würden wir nun vorgehen? Wie können wir alle Dateien aus dieser Liste auf einmal importieren?\n\nSicherlich kommen der einen oder dem anderen Informatiker:in nun Schleifen in den Sinn, die wir vielleicht aus anderen Programmiersprachen kennengelernt haben. Dazu gehören etwa while oder for . Solche Schleifen spielen im normalen R-Gebrauch nicht so eine große Rolle, daher werden wir hier nicht auf die genaue Syntax eingehen. Hier nur kurz, um es zu zeigen:\n\nfor (test in tests_list){\n  print(test)\n}\n\nNun könnten wir natürlich auf die Idee kommen, über eine for Schleife alle Dateien aus der Liste einzulesen, und diese als einzelne Objekte in unserem Environment zu speichern:\n\nfor (test in tests_list){\n  test &lt;- read.csv(paste0(\"assets/datasets/ospan/\",test))\n}\n\n\nFrage: Was passiert nun? Klappt der Code?\n\nZwar sieht der obige Code aus, als würde er theoretisch klappen, allerdings tut er das nicht. Es werden nicht dynamisch neue Objekte im Environment erzeugt, sondern lediglich eines, welches test heißt und immer wieder überschrieben wird."
  },
  {
    "objectID": "analysis2_1.html#sind-loops-eine-gute-idee",
    "href": "analysis2_1.html#sind-loops-eine-gute-idee",
    "title": "Apply & Multiple data sources",
    "section": "Sind Loops eine gute Idee?",
    "text": "Sind Loops eine gute Idee?\nGenerell bietet es sich beim Programmieren natürlich immer an, Loops zu verwenden. Doch bei R sieht das etwas anders aus. Loops führen dort zu schlechter lesbaren Code, zu Variablen, die im globalen Environment gespeichert werden und so weiter. Doch wie lautet die Lösung? apply!"
  },
  {
    "objectID": "analysis2_1.html#listen-erstellen-mit-lapply",
    "href": "analysis2_1.html#listen-erstellen-mit-lapply",
    "title": "Apply & Multiple data sources",
    "section": "Listen erstellen mit lapply()",
    "text": "Listen erstellen mit lapply()\nWenn wir also nicht so leicht einzelne Objekte im Environment erzeugen können oder wollen, bietet es sich an, diese in einer Liste zu speichern. Da kommt lapply() sehr gelegen. Wir übergeben der Funktion eine Liste oder einen Vektor, und bekommen eine Liste der gleichen Länge zurück.\n\nRepetition: Listen\n\nFrage: Was waren nochmal Listen und wie unterscheiden sie sich von Vektoren?\n\nGenau, in Listen können wir mehr Datentypen, sowie auch verschiedene Datentypen unterbringen. Während folgender Code zwar funktioniert (aber alle übergebenen Elemente in character umwandelt):\n\nvec &lt;- c(\"Das\",1,\"geht so\",1.4,\"aber nicht.\")\n\nWürde folgender Code die Elemente in ihrem usprünglichen Datencode belassen:\n\nsample_list &lt;- list(1,\"f\",12,TRUE)\n\nsample_list[4]\n\n[[1]]\n[1] TRUE\n\n\nDas Resultat sind unterschiedliche Datentypen:\n\nprint(paste0(\"vec is \", typeof(vec),\" and sample_list is \",typeof(sample_list)))\n\n[1] \"vec is character and sample_list is list\"\n\n\n\nWas ist, wenn ich nun auf das zweite Objekt der Liste zugreifen will?\n\nÜber [] bekommen wir das Objekt an der Stelle, aber als Liste. Das Objekt selbst bekommen wir über [[]]. Beachte: Bei R fangen wir nicht bei 0, sondern bei 1 an zu zählen!\n\nsample_list[[3]]\n\n[1] 12\n\n\nWie hilft uns das jetzt bei unserer Fragestellung? Schauen wir uns folgende zwei Beispiel-Dataframes erneut an:\n\nrandom_dataframe1 &lt;- data.frame(\n  ID = seq(1, 10),\n  Age = sample(18:65, 10, replace = TRUE),\n  Score = runif(10, min = 0, max = 100)\n)\nrandom_dataframe2 &lt;- data.frame(\n  ID = seq(1, 10),\n  Age = sample(18:65, 10, replace = TRUE),\n  Score = runif(10, min = 0, max = 100)\n)\n\nlist_of_dfs &lt;- list(random_dataframe1,random_dataframe2)\n\nWir können beide dataframes in einer Liste (list_of_dfs) zusammenfassen!\n\nlist_of_dfs\n\n[[1]]\n   ID Age    Score\n1   1  52 75.84595\n2   2  25 21.64079\n3   3  43 31.81810\n4   4  24 23.16258\n5   5  59 14.28000\n6   6  26 41.45463\n7   7  36 41.37243\n8   8  53 36.88455\n9   9  31 15.24447\n10 10  34 13.88061\n\n[[2]]\n   ID Age     Score\n1   1  58 37.446278\n2   2  27 66.511519\n3   3  40  9.484066\n4   4  44 38.396964\n5   5  24 27.438364\n6   6  44 81.464004\n7   7  49 44.851634\n8   8  55 81.006435\n9   9  42 81.238951\n10 10  51 79.434232\n\n\nDas heißt, wir könnten mit lapply() die Liste aus Variablennamen nutzen, um diese zu importieren. Dabei hilft uns paste0, um den Pfad entsprechend anzupassen:\n\ntests_list_with_path &lt;- paste0(\"assets/datasets/ospan/\",tests_list)\n\nhead(tests_list_with_path)\n\n[1] \"assets/datasets/ospan/WM_operation_span_101_1612186377273.csv\"\n[2] \"assets/datasets/ospan/WM_operation_span_106_1612359256107.csv\"\n[3] \"assets/datasets/ospan/WM_operation_span_107_1612524224258.csv\"\n[4] \"assets/datasets/ospan/WM_operation_span_15_1610368013780.csv\" \n[5] \"assets/datasets/ospan/WM_operation_span_20_1610447300494.csv\" \n[6] \"assets/datasets/ospan/WM_operation_span_23_1610461666072.csv\" \n\n\nUnd nun könnten wir eine Liste mit den eingelesenen Dataframes erstellen:\n\nospan_tests &lt;- lapply(tests_list_with_path, read.csv)\n\nWow! Das erspart uns eine Menge Arbeit."
  },
  {
    "objectID": "analysis2_1.html#funktionen-und-lapply",
    "href": "analysis2_1.html#funktionen-und-lapply",
    "title": "Apply & Multiple data sources",
    "section": "Funktionen und lapply()",
    "text": "Funktionen und lapply()\nWir haben soeben mit lapply und der read.csv() Funktionen alle 40 Dataframes des OSPAN Tests eingelesen und in der Liste ospan_tests gespeichert.\n\nWas fällt bei einem Blick auf die einzelnen Dataframes auf?\n\nEin Blick auf die 40 einzelnen Dataframes zeigt, dass diese immer gleich aufgebaut sind. Bei jedem Dataframe sind eventuell noch weitere Bearbeitungsschritte notwendig, und uns fehlt auch noch eine Zuordnung über die Proband:innen IDs. Das von uns verwendete read.csv() ist eine built-in Funktion. Hier bietet sich also eine Funktion an, bei der wir selbst entscheiden können, was mit den jeweiligen Dataframes passiert. Das geht natürlich auch mit R! Doch wie genau funktionieren überhaupt Funktionen in R?\nFunktionen sind in R nach folgendem Prinzip aufgebaut:\n\nexample_function &lt;- function(value){\n  output &lt;- do_something(value)\n  return(output)\n}\n\nWir definieren sie also normal wie auch Objekte in unserem Environment, definieren wie sie mit erhaltenen Objekten umgeht (value), und was sie damit machen soll (do_something()). Über return(output) können wir den output übergeben. Die Funktionsweise wird am besten mit Hilfe eines minimal-working examples deutlich:\n\ncustom_function &lt;- function(object){\n  output &lt;- object*55\n  return(output)\n}\n\n\ncustom_function(10)\n\n[1] 550\n\n\nSo weit so gut! Alles, was wir also in function() drinstehen haben, können wir also beliebig oft wiederholen.\nSchauen wir uns also an, wie wir mit diesem neuen Wissen unser Problem weiter angehen können. Für eine komplette Lösung unseres Working-Memory Input Problems haben wir zwei (bzw. drei) Challenges:\n\nDaten importieren\nZuordnung zu Proband:innen erreichen\nDatentransformationen (i.e., wmc_PCU erstellen)\n\nEine Sache, die wir noch lernen müssen, hat mit der Zuordnung der Proband:innen und dem Dateinamen zu tun.\n\nWo könnte sich dieser verstecken und was kann dabei helfen?\n\nGenau, unser WMC-Test Tool hat die Datei entsprechend mit dem Zuordnungscode abgespeichert, bspw. so: WM_operation_span_101_1612186377273.csv. Der Teil, der uns interessiert, ist 101.\n\nWie könnte man daran kommen?\n\nDabei kann uns str_split() aus stringr:: helfen (ist in tidyverse). Dessen Syntax sieht wie folgt aus:\n\nstr_split(c(\"split_this_string\",\"split_this_string\"),\"_\")[[1]][3]\n\nWobei wir zuerst den String übergeben, und dann das Zeichen bzw. Muster, nach dem gesplittet werden soll. In unserem Fall ist es das _:\n\nstr_split(\"WM_operation_span_101_1612186377273.csv\",\"_\")\n\n[[1]]\n[1] \"WM\"                \"operation\"         \"span\"             \n[4] \"101\"               \"1612186377273.csv\"\n\n\nLeider übergibt str_split() eine Liste von Vektoren. Das kann manchmal verwirren, ist aber nicht weiter schlimm. Ein Blick auf das Datenobjekt kann immer helfen:\n\n\n\n\n\nÜber [[1]] müssen wir also zunächst auf das erste Objekt der Liste zugreifen.\n\nstr_split(tests_list[1],\"_\")[[1]][4]\n\n[1] \"101\"\n\n\nDann können wir direkt danach das vierte Objekt des darin enthaltenen Vektors auswählen, also so:\n\nstr_split(\"WM_operation_span_101_1612186377273.csv\",\"_\")[[1]][4]\n\n[1] \"101\"\n\n\nNun haben wir den Zuordnungscode! Wir können nun alles vorbereiten, um unseren wmc_PCU Wert aus dem Dataframe zu extrahieren. Fangen wir also zunächst mit einem einzelnen Dataframe an, und überführen das dann später in eine Funktion und wenden das mit lapply() auf alles an (so eine Vorgehensweise ist immer ratsam).\n\nsample_filename &lt;- tests_list[1]\nsubject_id &lt;- str_split(sample_filename,\"_\")[[1]][4]\nfilename_with_path &lt;- paste0(\"assets/datasets/ospan/\",sample_filename)\n\n\ndf &lt;- read.csv(filename_with_path)\n\ndf &lt;- df %&gt;%\n      filter(!is.na(set_size)) %&gt;%\n      filter(!is.na(accuracy)) %&gt;%\n      mutate(accuracy = as.numeric(accuracy)) %&gt;% \n      slice(6:17) %&gt;%\n      mutate(wmc_PCU = accuracy/set_size) %&gt;% \n      summarise(wmc_PCU = mean(wmc_PCU))\n\ndf &lt;- cbind(subject_id,df)\n\ndf\n\n\n\n  \n\n\n\nPerfekt! Wir haben nun ein Dataframe, das den wmc_PCU Mittelwert, sowie die dazugehörige subject_id enthält. Jetzt müssen wir nur noch den entsprechenden Code in eine Funktion packen, und schön können wir es mit lapply() auf unsere gesamte Liste anwenden:\n\nreadAndWrangleWMCs &lt;- function(object){\n  filename &lt;- object\n  subject_id &lt;- str_split(filename,\"_\")[[1]][4]\n  filename_with_path &lt;- paste0(\"assets/datasets/ospan/\",filename)\n\n  df &lt;- read.csv(filename_with_path)\n\n  df &lt;- df %&gt;%\n        filter(!is.na(set_size)) %&gt;%\n        filter(!is.na(accuracy)) %&gt;%\n        mutate(accuracy = as.numeric(accuracy)) %&gt;% \n        slice(6:17)%&gt;%\n        mutate(wmc_PCU = accuracy/set_size) %&gt;%\n        summarise(wmc_PCU = mean(wmc_PCU))\n  \n  df &lt;- cbind(subject_id,df)\n\n  return(df)\n}\n\nMachen wir nun einen kleinen Test mit dem ersten Objekt aus tests_list:\n\nreadAndWrangleWMCs(tests_list[1])\n\n\n\n  \n\n\n\nPerfekt, das scheint zu funktionieren! Nun können wir also die Funktion auf den ganzen Vektor aus Dateinamen tests_list anwenden mit lapply(). Zurück bekommen wir dann eine Liste:\n\ndfs_list &lt;- lapply(tests_list,readAndWrangleWMCs)\n\nNun haben wir noch das Problem, dass wir eine Liste mit 40 Dataframes haben, obwohl wir am liebsten ein großes Dateframe mit den entsprechenden Werten hätten. Dabei kann uns dplyr’s bind_rows() helfen.\n\nbind_rows(dfs_list)\n\n\n\n  \n\n\n\nNun noch einem Objekt zuweisen, und wir sind bereit, es mit unserem vorhandenen Datensatz zu verbinden!\n\nWMC_vals &lt;- bind_rows(dfs_list)\n\nWie das geht, erfahrt ihr nun."
  },
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "Download & Installation von R",
    "section": "",
    "text": "In Folgenden erklären wir, wie ihr euch R und RStudio herunterladen könnt. Zwar gibt es im Web einige How-Tos und Tutorials, wir wollen euch an dieser Stelle der Vollständigkeit halber aber nochmal vermitteln, wie genau ihr euch die Software installiert und was es dabei zu beachten gibt. Falls während der Installation Fragen aufkommen, meldet euch gerne per Mail bei uns (simon.krukowski@stud.uni-due.de) oder schaut einfach im Web nach How-Tos/Troubleshooting. Das ist generell auch eine gute Idee beim Thema R, Programmieren & Datenanalyse - mehr dazu erfahrt ihr dann im Seminar.\n\nÜberblick\nDa dein Computer R als Programmiersprache nicht von selbst versteht, musst du R zunächst installieren. Sobald du R installiert hast, kannst du es theoretisch benutzen, und Daten damit auswerten. Hierbei ist wichtig zu differenzieren, dass du R zwar in der Kommandozeile/Terminal verwenden kannst, dies aber wenig intuitiv ist. Links in Figure 1 ist bspw. zu sehen, wir wir R in der Kommandozeile nutzen.\n\n\n\nFigure 1: R & Rstudio\n\n\nTrotzdem ist das wenig intuitiv. Daher bietet es sich an, eine IDE (Entwicklungsumgebung, siehe hier) zu benutzen. Die populärste IDE dafür ist RStudio. Im Rahmen dieses Seminars werden wir mit RStudio arbeiten. Wie du beides installierst, erfährst du in diesem Notebook.\n\n\nDownload & Installation\nStarten wir also mit dem Download. Besuche folgende Website:\n\n\n\nFigure 2: posit.co\n\n\nWenn du dem Link folgst, wirst du auf die offzielle Seite von R (CRAN) weitergeleitet, und kannst dir dort die für dein System richtige Version auswählen:\n\n\n\nFigure 3: CRAN\n\n\nIn unserem Fall haben wir einen Mac, und wählen den entsprechenden Link aus. Auf der folgenden Seite gibt es viele verschiedene Links, hier ist es wichtig den bei latest release und für euer System richtigen zu nehmen (in unserem Fall Intel Mac).\n\n\n\nFigure 4: CRAN\n\n\nNach dem Download könnt ihr den Installer ausführen und voilà - ihr habt R installiert! Da bei uns R schon installiert ist gibt es hier leider keinen Screenshot.\nTheoretisch könntet ihr R nun wie oben beschrieben in der Kommandozeile verwenden. Wir wollen allerdings RStudio benutzen, also gehen wir wieder zurück zu posit.co und laden dort die richtige Version für unser System herunter (die richtige Version wird hier automatisch vorgeschlagen):\n\n\n\nFigure 5: posit.co\n\n\nJe nach System unterscheidet sich hier die Installation etwas, aber am Ende sollte RStudio bei dir installiert sein. Öffnet also R, und es sollte etwa wie folgt aussehen:\n\n\n\nFigure 6: So sollte RStudio aussehen\n\n\n\n\nR-Skripte ausführen\nAls erste Übung wollen wir ein Test-Skript ausführen. Ladet euch das Skript zunächst herunter:\n R Skript \nÖffnet das Skript durch einen Doppelklick mit RStudio und führt es aus. Wenn ihr alles richtig gemacht habt, sollte etwas in der Konsole erscheinen. Diesen Output werden wir in der ersten Seminarstunde besprechen.\n\n\nTroubleshooting\nHaben sich bei der Installation Probleme ergeben? Meldet euch gerne per Mail an simon.krukowski@stud.uni-due.de."
  }
]